{
  "version": 3,
  "sources": ["../../@near-js/keystores/lib/commonjs/keystore.cjs", "../../@near-js/keystores/lib/commonjs/in_memory_key_store.cjs", "../../@near-js/keystores/lib/commonjs/merge_key_store.cjs", "../../@near-js/keystores/lib/commonjs/multi_contract_keystore.cjs", "../../@near-js/keystores/lib/commonjs/index.cjs", "../../near-api-js/lib/key_stores/keystore.js", "../../near-api-js/lib/key_stores/in_memory_key_store.js", "../../@near-js/keystores-browser/lib/commonjs/browser_local_storage_key_store.cjs", "../../@near-js/keystores-browser/lib/commonjs/multi_contract_browser_local_storage_key_store.cjs", "../../@near-js/keystores-browser/lib/commonjs/index.cjs", "../../near-api-js/lib/key_stores/browser_local_storage_key_store.js", "../../near-api-js/lib/key_stores/merge_key_store.js", "../../near-api-js/lib/key_stores/browser-index.js", "../../@near-js/providers/lib/commonjs/exponential-backoff.cjs", "../../@near-js/transactions/lib/commonjs/actions.cjs", "../../@near-js/transactions/lib/commonjs/action_creators.cjs", "../../@near-js/transactions/node_modules/borsh/lib/cjs/types.js", "../../@near-js/transactions/node_modules/borsh/lib/cjs/buffer.js", "../../@near-js/transactions/node_modules/borsh/lib/cjs/utils.js", "../../@near-js/transactions/node_modules/borsh/lib/cjs/serialize.js", "../../@near-js/transactions/node_modules/borsh/lib/cjs/deserialize.js", "../../@near-js/transactions/node_modules/borsh/lib/cjs/index.js", "../../@near-js/transactions/lib/commonjs/prefix.cjs", "../../@near-js/transactions/lib/commonjs/schema.cjs", "../../@near-js/transactions/lib/commonjs/create_transaction.cjs", "../../@near-js/transactions/lib/commonjs/delegate.cjs", "../../@near-js/transactions/node_modules/@noble/hashes/src/_assert.ts", "../../@near-js/transactions/node_modules/@noble/hashes/src/crypto.ts", "../../@near-js/transactions/node_modules/@noble/hashes/src/utils.ts", "../../@near-js/transactions/node_modules/@noble/hashes/src/_md.ts", "../../@near-js/transactions/node_modules/@noble/hashes/src/sha256.ts", "../../@near-js/transactions/lib/commonjs/signature.cjs", "../../@near-js/transactions/lib/commonjs/sign.cjs", "../../@near-js/transactions/lib/commonjs/index.cjs", "../../@near-js/providers/lib/commonjs/provider.cjs", "../../exponential-backoff/src/options.ts", "../../exponential-backoff/src/jitter/full/full.jitter.ts", "../../exponential-backoff/src/jitter/no/no.jitter.ts", "../../exponential-backoff/src/jitter/jitter.factory.ts", "../../exponential-backoff/src/delay/delay.base.ts", "../../exponential-backoff/src/delay/skip-first/skip-first.delay.ts", "../../exponential-backoff/src/delay/always/always.delay.ts", "../../exponential-backoff/src/delay/delay.factory.ts", "../../exponential-backoff/src/backoff.ts", "../../@near-js/providers/lib/commonjs/fetch_json.cjs", "../../@near-js/providers/lib/commonjs/json-rpc-provider.cjs", "../../@near-js/providers/lib/commonjs/failover-rpc-provider.cjs", "../../@near-js/providers/lib/commonjs/index.cjs", "../../near-api-js/lib/providers/provider.js", "../../near-api-js/lib/providers/json-rpc-provider.js", "../../near-api-js/lib/providers/failover-rpc-provider.js", "../../near-api-js/lib/providers/index.js", "../../near-api-js/node_modules/borsh/lib/cjs/types.js", "../../near-api-js/node_modules/borsh/lib/cjs/buffer.js", "../../near-api-js/node_modules/borsh/lib/cjs/utils.js", "../../near-api-js/node_modules/borsh/lib/cjs/serialize.js", "../../near-api-js/node_modules/borsh/lib/cjs/deserialize.js", "../../near-api-js/node_modules/borsh/lib/cjs/index.js", "../../near-api-js/lib/utils/serialize.js", "../../near-api-js/lib/utils/enums.js", "../../near-api-js/lib/utils/format.js", "../../near-api-js/lib/utils/rpc_errors.js", "../../near-api-js/lib/utils/logger.js", "../../near-api-js/lib/utils/index.js", "../../near-api-js/lib/transaction.js", "../../near-api-js/lib/validators.js", "../../@near-js/accounts/lib/commonjs/utils.cjs", "../../@near-js/accounts/lib/commonjs/account.cjs", "../../@near-js/accounts/lib/commonjs/constants.cjs", "../../@near-js/accounts/lib/commonjs/types.cjs", "../../@near-js/accounts/lib/commonjs/account_multisig.cjs", "../../@near-js/accounts/lib/commonjs/account_2fa.cjs", "../../@near-js/accounts/lib/commonjs/account_creator.cjs", "../../@near-js/signers/node_modules/@noble/hashes/src/_assert.ts", "../../@near-js/signers/node_modules/@noble/hashes/src/crypto.ts", "../../@near-js/signers/node_modules/@noble/hashes/src/utils.ts", "../../@near-js/signers/node_modules/@noble/hashes/src/_sha2.ts", "../../@near-js/signers/node_modules/@noble/hashes/src/sha256.ts", "../../@near-js/signers/lib/commonjs/signer.cjs", "../../@near-js/signers/lib/commonjs/in_memory_signer.cjs", "../../@near-js/signers/lib/commonjs/index.cjs", "../../@near-js/accounts/lib/commonjs/connection.cjs", "../../lru_map/dist/lru.js", "../../@near-js/accounts/lib/commonjs/local-view-execution/storage.cjs", "../../@near-js/accounts/node_modules/@noble/hashes/src/_assert.ts", "../../@near-js/accounts/node_modules/@noble/hashes/src/crypto.ts", "../../@near-js/accounts/node_modules/@noble/hashes/src/utils.ts", "../../@near-js/accounts/node_modules/@noble/hashes/src/_md.ts", "../../@near-js/accounts/node_modules/@noble/hashes/src/sha256.ts", "../../@near-js/accounts/lib/commonjs/local-view-execution/runtime.cjs", "../../@near-js/accounts/lib/commonjs/local-view-execution/index.cjs", "../../is-property/is-property.js", "../../generate-object-property/index.js", "../../generate-function/index.js", "../../jsonpointer/jsonpointer.js", "../../is-my-ip-valid/index.js", "../../is-my-json-valid/formats.js", "../../is-my-json-valid/index.js", "../../near-abi/lib/index.js", "../../@near-js/accounts/lib/commonjs/errors.cjs", "../../@near-js/accounts/lib/commonjs/contract.cjs", "../../@near-js/accounts/lib/commonjs/index.cjs", "../../near-api-js/lib/account.js", "../../near-api-js/lib/account_multisig.js", "../../near-api-js/lib/account_creator.js", "../../near-api-js/lib/connection.js", "../../near-api-js/lib/signer.js", "../../near-api-js/lib/contract.js", "../../@near-js/wallet-account/lib/commonjs/near.cjs", "../../@near-js/wallet-account/node_modules/borsh/lib/cjs/types.js", "../../@near-js/wallet-account/node_modules/borsh/lib/cjs/buffer.js", "../../@near-js/wallet-account/node_modules/borsh/lib/cjs/utils.js", "../../@near-js/wallet-account/node_modules/borsh/lib/cjs/serialize.js", "../../@near-js/wallet-account/node_modules/borsh/lib/cjs/deserialize.js", "../../@near-js/wallet-account/node_modules/borsh/lib/cjs/index.js", "../../@near-js/wallet-account/lib/commonjs/wallet_account.cjs", "../../@near-js/wallet-account/lib/commonjs/index.cjs", "../../near-api-js/lib/near.js", "../../near-api-js/lib/wallet-account.js", "../../near-api-js/lib/common-index.js", "../../near-api-js/lib/browser-connect.js", "../../near-api-js/lib/browser-index.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst keystore_1 = require(\"./keystore.cjs\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    /** @hidden */\n    keys;\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.keys[`${accountId}:${networkId}`];\n        if (!value) {\n            return null;\n        }\n        return crypto_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        delete this.keys[`${accountId}:${networkId}`];\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    async clear() {\n        this.keys = {};\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            result.add(parts[1]);\n        });\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            if (parts[parts.length - 1] === networkId) {\n                result.push(parts.slice(0, parts.length - 1).join(':'));\n            }\n        });\n        return result;\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = void 0;\nconst keystore_1 = require(\"./keystore.cjs\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    options;\n    keyStores;\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        await this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            const keyPair = await keyStore.getKey(networkId, accountId);\n            if (keyPair) {\n                return keyPair;\n            }\n        }\n        return null;\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            await keyStore.removeKey(networkId, accountId);\n        }\n    }\n    /**\n     * Removes all items from each key store\n     */\n    async clear() {\n        for (const keyStore of this.keyStores) {\n            await keyStore.clear();\n        }\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const network of await keyStore.getNetworks()) {\n                result.add(network);\n            }\n        }\n        return Array.from(result);\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const account of await keyStore.getAccounts(networkId)) {\n                result.add(account);\n            }\n        }\n        return Array.from(result);\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = require(\"./in_memory_key_store.cjs\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", { enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } });\nvar keystore_1 = require(\"./keystore.cjs\");\nObject.defineProperty(exports, \"KeyStore\", { enumerable: true, get: function () { return keystore_1.KeyStore; } });\nvar merge_key_store_1 = require(\"./merge_key_store.cjs\");\nObject.defineProperty(exports, \"MergeKeyStore\", { enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } });\nvar multi_contract_keystore_1 = require(\"./multi_contract_keystore.cjs\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", { enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyStore = void 0;\nvar keystores_1 = require(\"@near-js/keystores\");\nObject.defineProperty(exports, \"KeyStore\", { enumerable: true, get: function () { return keystores_1.KeyStore; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryKeyStore = void 0;\nvar keystores_1 = require(\"@near-js/keystores\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", { enumerable: true, get: function () { return keystores_1.InMemoryKeyStore; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst keystores_1 = require(\"@near-js/keystores\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystores_1.KeyStore {\n    /** @hidden */\n    localStorage;\n    /** @hidden */\n    prefix;\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n        if (!value) {\n            return null;\n        }\n        return crypto_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage key that's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiContractBrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst keystores_1 = require(\"@near-js/keystores\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.MultiContractBrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of MultiContractBrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass MultiContractBrowserLocalStorageKeyStore extends keystores_1.MultiContractKeyStore {\n    /** @hidden */\n    localStorage;\n    /** @hidden */\n    prefix;\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix || LOCAL_STORAGE_KEY_PREFIX;\n    }\n    /**\n     * Stores a {@link utils/key_pair!KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     * @param contractId The contract to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair, contractId) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId, contractId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId, contractId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n        if (!value) {\n            return null;\n        }\n        return crypto_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     */\n    async removeKey(networkId, accountId, contractId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = [];\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets the contract(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The targeted account.\n     */\n    async getContracts(networkId, accountId) {\n        const result = [];\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId && parts[0] === accountId) {\n                    result.push(parts[2]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @param contractId The NEAR contract tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId, contractId) {\n        return `${this.prefix}${accountId}:${networkId}:${contractId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.MultiContractBrowserLocalStorageKeyStore = MultiContractBrowserLocalStorageKeyStore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiContractBrowserLocalStorageKeyStore = exports.BrowserLocalStorageKeyStore = void 0;\nvar browser_local_storage_key_store_1 = require(\"./browser_local_storage_key_store.cjs\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", { enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } });\nvar multi_contract_browser_local_storage_key_store_1 = require(\"./multi_contract_browser_local_storage_key_store.cjs\");\nObject.defineProperty(exports, \"MultiContractBrowserLocalStorageKeyStore\", { enumerable: true, get: function () { return multi_contract_browser_local_storage_key_store_1.MultiContractBrowserLocalStorageKeyStore; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserLocalStorageKeyStore = void 0;\nvar keystores_browser_1 = require(\"@near-js/keystores-browser\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", { enumerable: true, get: function () { return keystores_browser_1.BrowserLocalStorageKeyStore; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = void 0;\nvar keystores_1 = require(\"@near-js/keystores\");\nObject.defineProperty(exports, \"MergeKeyStore\", { enumerable: true, get: function () { return keystores_1.MergeKeyStore; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = exports.BrowserLocalStorageKeyStore = exports.InMemoryKeyStore = exports.KeyStore = void 0;\n/** @hidden @module */\nconst keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"KeyStore\", { enumerable: true, get: function () { return keystore_1.KeyStore; } });\nconst in_memory_key_store_1 = require(\"./in_memory_key_store\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", { enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } });\nconst browser_local_storage_key_store_1 = require(\"./browser_local_storage_key_store\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", { enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } });\nconst merge_key_store_1 = require(\"./merge_key_store\");\nObject.defineProperty(exports, \"MergeKeyStore\", { enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exponentialBackoff = void 0;\nasync function exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    // TODO: jitter?\n    let waitTime = startWaitTime;\n    for (let i = 0; i < retryNumber; i++) {\n        const result = await getResult();\n        if (result) {\n            return result;\n        }\n        await sleep(waitTime);\n        waitTime *= waitBackoff;\n    }\n    return null;\n}\nexports.exponentialBackoff = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Action = exports.SignedDelegate = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst types_1 = require(\"@near-js/types\");\nclass FunctionCallPermission {\n    allowance;\n    receiverId;\n    methodNames;\n    constructor({ allowance, receiverId, methodNames }) {\n        this.allowance = allowance;\n        this.receiverId = receiverId;\n        this.methodNames = methodNames;\n    }\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends types_1.Enum {\n    enum;\n    functionCall;\n    fullAccess;\n    constructor(props) {\n        super(props);\n        for (const [k, v] of Object.entries(props || {})) {\n            this[k] = v;\n            this.enum = k;\n        }\n    }\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey {\n    nonce;\n    permission;\n    constructor({ nonce, permission }) {\n        this.nonce = nonce;\n        this.permission = permission;\n    }\n}\nexports.AccessKey = AccessKey;\nclass CreateAccount {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract {\n    code;\n    constructor({ code }) {\n        this.code = code;\n    }\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall {\n    methodName;\n    args;\n    gas;\n    deposit;\n    constructor({ methodName, args, gas, deposit }) {\n        this.methodName = methodName;\n        this.args = args;\n        this.gas = gas;\n        this.deposit = deposit;\n    }\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer {\n    deposit;\n    constructor({ deposit }) {\n        this.deposit = deposit;\n    }\n}\nexports.Transfer = Transfer;\nclass Stake {\n    stake;\n    publicKey;\n    constructor({ stake, publicKey }) {\n        this.stake = stake;\n        this.publicKey = publicKey;\n    }\n}\nexports.Stake = Stake;\nclass AddKey {\n    publicKey;\n    accessKey;\n    constructor({ publicKey, accessKey }) {\n        this.publicKey = publicKey;\n        this.accessKey = accessKey;\n    }\n}\nexports.AddKey = AddKey;\nclass DeleteKey {\n    publicKey;\n    constructor({ publicKey }) {\n        this.publicKey = publicKey;\n    }\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount {\n    beneficiaryId;\n    constructor({ beneficiaryId }) {\n        this.beneficiaryId = beneficiaryId;\n    }\n}\nexports.DeleteAccount = DeleteAccount;\nclass SignedDelegate {\n    delegateAction;\n    signature;\n    constructor({ delegateAction, signature }) {\n        this.delegateAction = delegateAction;\n        this.signature = signature;\n    }\n}\nexports.SignedDelegate = SignedDelegate;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends types_1.Enum {\n    enum;\n    createAccount;\n    deployContract;\n    functionCall;\n    transfer;\n    stake;\n    addKey;\n    deleteKey;\n    deleteAccount;\n    signedDelegate;\n    constructor(props) {\n        super(props);\n        for (const [k, v] of Object.entries(props || {})) {\n            this[k] = v;\n            this.enum = k;\n        }\n    }\n}\nexports.Action = Action;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.actionCreators = exports.stringifyJsonOrBytes = void 0;\nconst actions_1 = require(\"./actions.cjs\");\n/**\n * Creates a full access key with full access permissions.\n * @returns A new full access key.\n */\nfunction fullAccessKey() {\n    return new actions_1.AccessKey({\n        nonce: 0n,\n        permission: new actions_1.AccessKeyPermission({\n            fullAccess: new actions_1.FullAccessPermission(),\n        }),\n    });\n}\n/**\n * Creates an access key with function call permission for a specific receiver and method names.\n * @param receiverId The NEAR account ID of the function call receiver.\n * @param methodNames An array of method names allowed for function calls.\n * @param allowance An optional allowance (maximum amount) for the function call. Default: Unlimited.\n * @returns A new access key with function call permission.\n */\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new actions_1.AccessKey({\n        nonce: 0n,\n        permission: new actions_1.AccessKeyPermission({\n            functionCall: new actions_1.FunctionCallPermission({\n                receiverId,\n                allowance,\n                methodNames,\n            }),\n        }),\n    });\n}\n/**\n * Creates a new action for creating a new NEAR account.\n * @returns A new action for creating a new account.\n */\nfunction createAccount() {\n    return new actions_1.Action({ createAccount: new actions_1.CreateAccount() });\n}\n/**\n * Creates a new action for deploying a contract with the provided code.\n * @param code The Uint8Array representing the code of the contract.\n * @returns A new action for deploying a contract.\n */\nfunction deployContract(code) {\n    return new actions_1.Action({ deployContract: new actions_1.DeployContract({ code }) });\n}\n/**\n * Converts an input argument to a Buffer, handling cases for both JSON and Uint8Array.\n * @param args The input argument, either JSON object or Uint8Array.\n * @returns A Buffer representation of the input argument.\n */\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    return isUint8Array ? args : Buffer.from(JSON.stringify(args));\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n * @param jsContract  Is contract from JS SDK, skips stringification of arguments.\n */\nfunction functionCall(methodName, args, gas = 0n, deposit = 0n, stringify = stringifyJsonOrBytes, jsContract = false) {\n    if (jsContract) {\n        return new actions_1.Action({\n            functionCall: new actions_1.FunctionCall({ methodName, args: args, gas, deposit }),\n        });\n    }\n    return new actions_1.Action({\n        functionCall: new actions_1.FunctionCall({\n            methodName,\n            args: stringify(args),\n            gas,\n            deposit,\n        }),\n    });\n}\n/**\n * Creates a new action for transferring funds, optionally specifying a deposit amount.\n * @param deposit The amount to be deposited along with the transfer. Default: 0.\n * @returns A new action for transferring funds.\n */\nfunction transfer(deposit = 0n) {\n    return new actions_1.Action({ transfer: new actions_1.Transfer({ deposit }) });\n}\n/**\n * Creates a new action for staking tokens, specifying the stake amount and public key.\n * @param stake The amount to be staked. Default: 0.\n * @param publicKey The public key associated with the staking action.\n * @returns A new action for staking tokens.\n */\nfunction stake(stake = 0n, publicKey) {\n    return new actions_1.Action({ stake: new actions_1.Stake({ stake, publicKey }) });\n}\n/**\n * Creates a new action for adding a public key with a specified access key.\n * @param publicKey The public key to be added.\n * @param accessKey The access key associated with the added public key.\n * @returns A new action for adding a public key.\n */\nfunction addKey(publicKey, accessKey) {\n    return new actions_1.Action({ addKey: new actions_1.AddKey({ publicKey, accessKey }) });\n}\n/**\n * Creates a new action for deleting a public key.\n * @param publicKey The public key to be deleted.\n * @returns A new action for deleting a public key.\n */\nfunction deleteKey(publicKey) {\n    return new actions_1.Action({ deleteKey: new actions_1.DeleteKey({ publicKey }) });\n}\n/**\n * Creates a new action for deleting an account with the specified beneficiary ID.\n * @param beneficiaryId The NEAR account ID of the beneficiary.\n * @returns A new action for deleting an account.\n */\nfunction deleteAccount(beneficiaryId) {\n    return new actions_1.Action({ deleteAccount: new actions_1.DeleteAccount({ beneficiaryId }) });\n}\n/**\n * Creates a new action for a signed delegation, specifying the delegate action and signature.\n * @param delegateAction The delegate action to be performed.\n * @param signature The signature associated with the delegate action.\n * @returns A new action for a signed delegation.\n */\nfunction signedDelegate({ delegateAction, signature, }) {\n    return new actions_1.Action({\n        signedDelegate: new actions_1.SignedDelegate({ delegateAction, signature }),\n    });\n}\nexports.actionCreators = {\n    addKey,\n    createAccount,\n    deleteAccount,\n    deleteKey,\n    deployContract,\n    fullAccessKey,\n    functionCall,\n    functionCallAccessKey,\n    signedDelegate,\n    stake,\n    transfer,\n};\n", "\"use strict\";\nexports.__esModule = true;\nexports.integers = void 0;\nexports.integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n", "\"use strict\";\nexports.__esModule = true;\nexports.DecodeBuffer = exports.EncodeBuffer = void 0;\nvar EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexports.EncodeBuffer = EncodeBuffer;\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexports.DecodeBuffer = DecodeBuffer;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.validate_schema = exports.ErrorSchema = exports.expect_enum = exports.expect_same_size = exports.expect_bigint = exports.expect_type = exports.isArrayLike = void 0;\nvar types_js_1 = require(\"./types.js\");\nfunction isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexports.isArrayLike = isArrayLike;\nfunction expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_type = expect_type;\nfunction expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_bigint = expect_bigint;\nfunction expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_same_size = expect_same_size;\nfunction expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_enum = expect_enum;\n// Validate Schema\nvar VALID_STRING_TYPES = types_js_1.integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexports.ErrorSchema = ErrorSchema;\nfunction validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nexports.validate_schema = validate_schema;\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.BorshSerializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new buffer_js_1.EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexports.BorshSerializer = BorshSerializer;\n", "\"use strict\";\nexports.__esModule = true;\nexports.BorshDeserializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new buffer_js_1.DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexports.BorshDeserializer = BorshDeserializer;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.deserialize = exports.serialize = void 0;\nvar serialize_js_1 = require(\"./serialize.js\");\nvar deserialize_js_1 = require(\"./deserialize.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nfunction serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new serialize_js_1.BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexports.serialize = serialize;\nfunction deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new deserialize_js_1.BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\nexports.deserialize = deserialize;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DelegateActionPrefix = void 0;\nconst ACTIONABLE_MESSAGE_BASE = Math.pow(2, 30);\n// const NON_ACTIONABLE_MESSAGE_BASE = Math.pow(2, 31);\n/** The set of NEPs for which an [NEP-461](https://github.com/near/NEPs/pull/461) prefix is required on the message prior to hashing **/\nconst NEP = {\n    MetaTransactions: 366,\n};\n/** Base class for NEP message prefixes **/\nclass NEPPrefix {\n    prefix;\n    constructor({ prefix }) {\n        this.prefix = prefix;\n    }\n}\n/** Class for constructing prefixes on actionable (on-chain) messages **/\nclass ActionableMessagePrefix extends NEPPrefix {\n    /** Given the NEP number, set the prefix using 2^30 as the offset **/\n    constructor(prefix) {\n        super({ prefix: ACTIONABLE_MESSAGE_BASE + prefix });\n    }\n}\n/**\n * Class for constructing prefixes on non-actionable (off-chain) messages\n * @todo uncomment when off-chain messages are supported\n * **/\n// abstract class NonActionableMessagePrefix extends NEPPrefix {\n//     /** Given the NEP number, set the prefix using 2^31 as the offset **/\n//     protected constructor(prefix: number) {\n//         super({ prefix: NON_ACTIONABLE_MESSAGE_BASE + prefix });\n//     }\n// }\n/** Prefix for delegate actions whose signatures must always be distinguishable from valid transaction signatures **/\nclass DelegateActionPrefix extends ActionableMessagePrefix {\n    constructor() { super(NEP.MetaTransactions); }\n}\nexports.DelegateActionPrefix = DelegateActionPrefix;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SCHEMA = exports.SignedTransaction = exports.Transaction = exports.decodeSignedTransaction = exports.decodeTransaction = exports.encodeTransaction = exports.encodeSignedDelegate = exports.encodeDelegateAction = void 0;\nconst borsh_1 = require(\"borsh\");\nconst prefix_1 = require(\"./prefix.cjs\");\n/**\n * Borsh-encode a delegate action for inclusion as an action within a meta transaction\n * NB per NEP-461 this requires a Borsh-serialized prefix specific to delegate actions, ensuring\n *  signed delegate actions may never be identical to signed transactions with the same fields\n * @param delegateAction Delegate action to be signed by the meta transaction sender\n */\nfunction encodeDelegateAction(delegateAction) {\n    return new Uint8Array([\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateActionPrefix, new prefix_1.DelegateActionPrefix()),\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateAction, delegateAction),\n    ]);\n}\nexports.encodeDelegateAction = encodeDelegateAction;\n/**\n * Borsh-encode a signed delegate for validation and execution by a relayer\n * @param signedDelegate Signed delegate to be executed in a meta transaction\n */\nfunction encodeSignedDelegate(signedDelegate) {\n    return (0, borsh_1.serialize)(exports.SCHEMA.SignedDelegate, signedDelegate);\n}\nexports.encodeSignedDelegate = encodeSignedDelegate;\n/**\n * Borsh-encode a transaction or signed transaction into a serialized form.\n * @param transaction The transaction or signed transaction object to be encoded.\n * @returns A serialized representation of the input transaction.\n */\nfunction encodeTransaction(transaction) {\n    const schema = transaction instanceof SignedTransaction ? exports.SCHEMA.SignedTransaction : exports.SCHEMA.Transaction;\n    return (0, borsh_1.serialize)(schema, transaction);\n}\nexports.encodeTransaction = encodeTransaction;\n/**\n * Borsh-decode a Transaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeTransaction(bytes) {\n    return new Transaction((0, borsh_1.deserialize)(exports.SCHEMA.Transaction, bytes));\n}\nexports.decodeTransaction = decodeTransaction;\n/**\n * Borsh-decode a SignedTransaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeSignedTransaction(bytes) {\n    return new SignedTransaction((0, borsh_1.deserialize)(exports.SCHEMA.SignedTransaction, bytes));\n}\nexports.decodeSignedTransaction = decodeSignedTransaction;\nclass Transaction {\n    signerId;\n    publicKey;\n    nonce;\n    receiverId;\n    actions;\n    blockHash;\n    constructor({ signerId, publicKey, nonce, receiverId, actions, blockHash }) {\n        this.signerId = signerId;\n        this.publicKey = publicKey;\n        this.nonce = nonce;\n        this.receiverId = receiverId;\n        this.actions = actions;\n        this.blockHash = blockHash;\n    }\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeTransaction(bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction {\n    transaction;\n    signature;\n    constructor({ transaction, signature }) {\n        this.transaction = transaction;\n        this.signature = signature;\n    }\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeSignedTransaction(bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\nexports.SCHEMA = new class BorshSchema {\n    Ed25519Signature = {\n        struct: {\n            data: { array: { type: 'u8', len: 64 } },\n        }\n    };\n    Secp256k1Signature = {\n        struct: {\n            data: { array: { type: 'u8', len: 65 } },\n        }\n    };\n    Signature = {\n        enum: [\n            { struct: { ed25519Signature: this.Ed25519Signature } },\n            { struct: { secp256k1Signature: this.Secp256k1Signature } },\n        ]\n    };\n    Ed25519Data = {\n        struct: {\n            data: { array: { type: 'u8', len: 32 } },\n        }\n    };\n    Secp256k1Data = {\n        struct: {\n            data: { array: { type: 'u8', len: 64 } },\n        }\n    };\n    PublicKey = {\n        enum: [\n            { struct: { ed25519Key: this.Ed25519Data } },\n            { struct: { secp256k1Key: this.Secp256k1Data } },\n        ]\n    };\n    FunctionCallPermission = {\n        struct: {\n            allowance: { option: 'u128' },\n            receiverId: 'string',\n            methodNames: { array: { type: 'string' } },\n        }\n    };\n    FullAccessPermission = {\n        struct: {}\n    };\n    AccessKeyPermission = {\n        enum: [\n            { struct: { functionCall: this.FunctionCallPermission } },\n            { struct: { fullAccess: this.FullAccessPermission } },\n        ]\n    };\n    AccessKey = {\n        struct: {\n            nonce: 'u64',\n            permission: this.AccessKeyPermission,\n        }\n    };\n    CreateAccount = {\n        struct: {}\n    };\n    DeployContract = {\n        struct: {\n            code: { array: { type: 'u8' } },\n        }\n    };\n    FunctionCall = {\n        struct: {\n            methodName: 'string',\n            args: { array: { type: 'u8' } },\n            gas: 'u64',\n            deposit: 'u128',\n        }\n    };\n    Transfer = {\n        struct: {\n            deposit: 'u128',\n        }\n    };\n    Stake = {\n        struct: {\n            stake: 'u128',\n            publicKey: this.PublicKey,\n        }\n    };\n    AddKey = {\n        struct: {\n            publicKey: this.PublicKey,\n            accessKey: this.AccessKey,\n        }\n    };\n    DeleteKey = {\n        struct: {\n            publicKey: this.PublicKey,\n        }\n    };\n    DeleteAccount = {\n        struct: {\n            beneficiaryId: 'string',\n        }\n    };\n    DelegateActionPrefix = {\n        struct: {\n            prefix: 'u32',\n        }\n    };\n    ClassicActions = {\n        enum: [\n            { struct: { createAccount: this.CreateAccount } },\n            { struct: { deployContract: this.DeployContract } },\n            { struct: { functionCall: this.FunctionCall } },\n            { struct: { transfer: this.Transfer } },\n            { struct: { stake: this.Stake } },\n            { struct: { addKey: this.AddKey } },\n            { struct: { deleteKey: this.DeleteKey } },\n            { struct: { deleteAccount: this.DeleteAccount } },\n        ]\n    };\n    DelegateAction = {\n        struct: {\n            senderId: 'string',\n            receiverId: 'string',\n            actions: { array: { type: this.ClassicActions } },\n            nonce: 'u64',\n            maxBlockHeight: 'u64',\n            publicKey: this.PublicKey,\n        }\n    };\n    SignedDelegate = {\n        struct: {\n            delegateAction: this.DelegateAction,\n            signature: this.Signature,\n        }\n    };\n    Action = {\n        enum: [\n            { struct: { createAccount: this.CreateAccount } },\n            { struct: { deployContract: this.DeployContract } },\n            { struct: { functionCall: this.FunctionCall } },\n            { struct: { transfer: this.Transfer } },\n            { struct: { stake: this.Stake } },\n            { struct: { addKey: this.AddKey } },\n            { struct: { deleteKey: this.DeleteKey } },\n            { struct: { deleteAccount: this.DeleteAccount } },\n            { struct: { signedDelegate: this.SignedDelegate } },\n        ]\n    };\n    Transaction = {\n        struct: {\n            signerId: 'string',\n            publicKey: this.PublicKey,\n            nonce: 'u64',\n            receiverId: 'string',\n            blockHash: { array: { type: 'u8', len: 32 } },\n            actions: { array: { type: this.Action } },\n        }\n    };\n    SignedTransaction = {\n        struct: {\n            transaction: this.Transaction,\n            signature: this.Signature,\n        }\n    };\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTransaction = void 0;\nconst schema_1 = require(\"./schema.cjs\");\n/**\n * Creates a new transaction object with the provided parameters.\n * @param signerId The NEAR account ID of the transaction signer.\n * @param publicKey The public key associated with the signer.\n * @param receiverId The NEAR account ID of the transaction receiver.\n * @param nonce The nonce value for the transaction, represented as a BN, string, or number.\n * @param actions An array of transaction actions to be performed.\n * @param blockHash The hash of the block where the transaction will be included.\n * @returns A new transaction object initialized with the provided parameters.\n */\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    const txNonce = typeof nonce === 'bigint' ? nonce : BigInt(nonce);\n    return new schema_1.Transaction({\n        signerId,\n        publicKey,\n        nonce: txNonce,\n        receiverId,\n        actions,\n        blockHash,\n    });\n}\nexports.createTransaction = createTransaction;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildDelegateAction = exports.DelegateAction = void 0;\nconst action_creators_1 = require(\"./action_creators.cjs\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, functionCall, stake, transfer, } = action_creators_1.actionCreators;\nclass DelegateAction {\n    senderId;\n    receiverId;\n    actions;\n    nonce;\n    maxBlockHeight;\n    publicKey;\n    constructor({ senderId, receiverId, actions, nonce, maxBlockHeight, publicKey }) {\n        this.senderId = senderId;\n        this.receiverId = receiverId;\n        this.actions = actions;\n        this.nonce = nonce;\n        this.maxBlockHeight = maxBlockHeight;\n        this.publicKey = publicKey;\n    }\n}\nexports.DelegateAction = DelegateAction;\n/**\n * Compose a delegate action for inclusion with a meta transaction signed on the sender's behalf\n * @param actions The set of actions to be included in the meta transaction\n * @param maxBlockHeight The maximum block height for which this action can be executed as part of a transaction\n * @param nonce Current nonce on the access key used to sign the delegate action\n * @param publicKey Public key for the access key used to sign the delegate action\n * @param receiverId Account ID for the intended receiver of the meta transaction\n * @param senderId Account ID for the intended signer of the delegate action\n */\nfunction buildDelegateAction({ actions, maxBlockHeight, nonce, publicKey, receiverId, senderId, }) {\n    return new DelegateAction({\n        senderId,\n        receiverId,\n        actions: actions.map((a) => {\n            // @ts-expect-error type workaround\n            if (!a.type && !a.params) {\n                return a;\n            }\n            // @ts-expect-error type workaround\n            switch (a.type) {\n                case 'AddKey': {\n                    // @ts-expect-error type workaround\n                    const { publicKey, accessKey } = a.params;\n                    return addKey(publicKey, accessKey);\n                }\n                case 'CreateAccount': {\n                    // @ts-expect-error type workaround\n                    return createAccount(a.params.createAccount);\n                }\n                case 'DeleteAccount': {\n                    // @ts-expect-error type workaround\n                    return deleteAccount(a.params.deleteAccount);\n                }\n                case 'DeleteKey': {\n                    // @ts-expect-error type workaround\n                    return deleteKey(a.params.publicKey);\n                }\n                case 'DeployContract': {\n                    // @ts-expect-error type workaround\n                    return deployContract(a.params.code);\n                }\n                case 'FunctionCall': {\n                    // @ts-expect-error type workaround\n                    const { methodName, args, gas, deposit } = a.params;\n                    return functionCall(methodName, args, gas, deposit);\n                }\n                case 'Stake': {\n                    // @ts-expect-error type workaround\n                    return stake(a.params.stake, a.params.publicKey);\n                }\n                case 'Transfer': {\n                    // @ts-expect-error type workaround\n                    const { deposit } = a.params;\n                    return transfer(deposit);\n                }\n            }\n            throw new Error('Unrecognized action');\n        }),\n        nonce,\n        maxBlockHeight,\n        publicKey,\n    });\n}\nexports.buildDelegateAction = buildDelegateAction;\n", "/**\n * Internal assertion helpers.\n * @module\n */\n\n/** Asserts something is positive integer. */\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Hash interface. */\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Asserts something is hash */\nfunction ahash(h: Hash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, abytes, ahash, aexists, aoutput };\n", "/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n// Cast array to view\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): void {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('utf8ToBytes expected string, got ' + typeof str);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash function */\nexport type CHash = ReturnType<typeof wrapConstructor>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof wrapConstructorWithOpts>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof wrapXOFConstructorWithOpts>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.js';\nimport { type Input, Hash, createView, toBytes } from './utils.js';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.js';\nimport { type CHash, rotr, wrapConstructor } from './utils.js';\n\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    SHA256_W.fill(0);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n  protected A = 0xc1059ed8 | 0;\n  protected B = 0x367cd507 | 0;\n  protected C = 0x3070dd17 | 0;\n  protected D = 0xf70e5939 | 0;\n  protected E = 0xffc00b31 | 0;\n  protected F = 0x68581511 | 0;\n  protected G = 0x64f98fa7 | 0;\n  protected H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/** SHA2-256 hash function */\nexport const sha256: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signature = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst types_1 = require(\"@near-js/types\");\nclass ED25519Signature {\n    keyType = crypto_1.KeyType.ED25519;\n    data;\n}\nclass SECP256K1Signature {\n    keyType = crypto_1.KeyType.SECP256K1;\n    data;\n}\nfunction resolveEnumKeyName(keyType) {\n    switch (keyType) {\n        case crypto_1.KeyType.ED25519: {\n            return 'ed25519Signature';\n        }\n        case crypto_1.KeyType.SECP256K1: {\n            return 'secp256k1Signature';\n        }\n        default: {\n            throw Error(`unknown type ${keyType}`);\n        }\n    }\n}\nclass Signature extends types_1.Enum {\n    enum;\n    ed25519Signature;\n    secp256k1Signature;\n    constructor(signature) {\n        const keyName = resolveEnumKeyName(signature.keyType);\n        super({ [keyName]: signature });\n        this[keyName] = signature;\n        this.enum = keyName;\n    }\n    get signature() {\n        return this.ed25519Signature || this.secp256k1Signature;\n    }\n    get signatureType() {\n        return this.signature.keyType;\n    }\n    get data() {\n        return this.signature.data;\n    }\n}\nexports.Signature = Signature;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signDelegateAction = exports.signTransaction = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst actions_1 = require(\"./actions.cjs\");\nconst create_transaction_1 = require(\"./create_transaction.cjs\");\nconst schema_1 = require(\"./schema.cjs\");\nconst signature_1 = require(\"./signature.cjs\");\nconst crypto_1 = require(\"@near-js/crypto\");\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n    const message = (0, schema_1.encodeTransaction)(transaction);\n    const hash = new Uint8Array((0, sha256_1.sha256)(message));\n    const signature = await signer.signMessage(message, accountId, networkId);\n    const keyType = transaction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n    const signedTx = new schema_1.SignedTransaction({\n        transaction,\n        signature: new signature_1.Signature({ keyType, data: signature.signature })\n    });\n    return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n    if (args[0].constructor === schema_1.Transaction) {\n        const [transaction, signer, accountId, networkId] = args;\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n    else {\n        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n        const publicKey = await signer.getPublicKey(accountId, networkId);\n        const transaction = (0, create_transaction_1.createTransaction)(accountId, publicKey, receiverId, nonce, actions, blockHash);\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n}\nexports.signTransaction = signTransaction;\n/**\n * Sign a delegate action\n * @options SignDelegate options\n * @param options.delegateAction Delegate action to be signed by the meta transaction sender\n * @param options.signer Signer instance for the meta transaction sender\n */\nasync function signDelegateAction({ delegateAction, signer }) {\n    const message = (0, schema_1.encodeDelegateAction)(delegateAction);\n    const signature = await signer.sign(message);\n    const keyType = delegateAction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n    const signedDelegateAction = new actions_1.SignedDelegate({\n        delegateAction,\n        signature: new signature_1.Signature({\n            keyType,\n            data: signature,\n        }),\n    });\n    return {\n        hash: new Uint8Array((0, sha256_1.sha256)(message)),\n        signedDelegateAction,\n    };\n}\nexports.signDelegateAction = signDelegateAction;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./action_creators.cjs\"), exports);\n__exportStar(require(\"./actions.cjs\"), exports);\n__exportStar(require(\"./create_transaction.cjs\"), exports);\n__exportStar(require(\"./delegate.cjs\"), exports);\n__exportStar(require(\"./schema.cjs\"), exports);\n__exportStar(require(\"./sign.cjs\"), exports);\n__exportStar(require(\"./signature.cjs\"), exports);\n", "\"use strict\";\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Provider = void 0;\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n", "/**\n * Type of jitter to apply to the delay.\n * - `\"none\"`: no jitter is applied\n * - `\"full\"`: full jitter is applied (random value between `0` and `delay`)\n */\nexport type JitterType = \"none\" | \"full\";\n\nexport type BackoffOptions = Partial<IBackOffOptions>;\n\nexport interface IBackOffOptions {\n  /**\n   * Decides whether the `startingDelay` should be applied before the first call.\n   * If `false`, the first call will occur without a delay.\n   * @defaultValue `false`\n   */\n  delayFirstAttempt: boolean;\n  /**\n   * Decides whether a [jitter](https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/)\n   * should be applied to the delay. Possible values are `\"full\"` and `\"none\"`.\n   * @defaultValue `\"none\"`\n   */\n  jitter: JitterType;\n  /**\n   * The maximum delay, in milliseconds, between two consecutive attempts.\n   * @defaultValue `Infinity`\n   */\n  maxDelay: number;\n  /**\n   * The maximum number of times to attempt the function.\n   * Must be at least `1`.\n   * @defaultValue `10`\n   */\n  numOfAttempts: number;\n  /**\n   * The `retry` function can be used to run logic after every failed attempt (e.g. logging a message,\n   * assessing the last error, etc.).\n   * It is called with the last error and the upcoming attempt number.\n   * Returning `true` will retry the function as long as the `numOfAttempts` has not been exceeded.\n   * Returning `false` will end the execution.\n   * @defaultValue a function that always returns `true`.\n   * @param e The last error thrown by the function.\n   * @param attemptNumber The upcoming attempt number.\n   * @returns `true` to retry the function, `false` to end the execution\n   */\n  retry: (e: any, attemptNumber: number) => boolean | Promise<boolean>;\n  /**\n   * The delay, in milliseconds, before executing the function for the first time.\n   * @defaultValue `100`\n   */\n  startingDelay: number;\n  /**\n   * The `startingDelay` is multiplied by the `timeMultiple` to increase the delay between reattempts.\n   * @defaultValue `2`\n   */\n  timeMultiple: number;\n}\n\nconst defaultOptions: IBackOffOptions = {\n  delayFirstAttempt: false,\n  jitter: \"none\",\n  maxDelay: Infinity,\n  numOfAttempts: 10,\n  retry: () => true,\n  startingDelay: 100,\n  timeMultiple: 2\n};\n\nexport function getSanitizedOptions(options: BackoffOptions) {\n  const sanitized: IBackOffOptions = { ...defaultOptions, ...options };\n\n  if (sanitized.numOfAttempts < 1) {\n    sanitized.numOfAttempts = 1;\n  }\n\n  return sanitized;\n}\n", "export function fullJitter(delay: number) {\n    const jitteredDelay = Math.random() * delay;\n    return Math.round(jitteredDelay);\n}", "export function noJitter(delay: number) {\n    return delay;\n}", "import { IBackOffOptions } from \"../options\";\nimport { fullJitter } from \"./full/full.jitter\";\nimport { noJitter } from \"./no/no.jitter\";\n\nexport type Jitter = (delay: number) => number;\n\nexport function JitterFactory(options: IBackOffOptions): Jitter {\n  switch (options.jitter) {\n    case \"full\":\n      return fullJitter;\n\n    case \"none\":\n    default:\n      return noJitter;\n  }\n}\n", "import { IDelay } from \"./delay.interface\";\nimport { IBackOffOptions } from \"../options\";\nimport { JitterFactory } from \"../jitter/jitter.factory\";\n\nexport abstract class Delay implements IDelay {\n  protected attempt = 0;\n  constructor(private options: IBackOffOptions) {}\n\n  public apply() {\n    return new Promise(resolve => setTimeout(resolve, this.jitteredDelay));\n  }\n\n  public setAttemptNumber(attempt: number) {\n    this.attempt = attempt;\n  }\n\n  private get jitteredDelay() {\n    const jitter = JitterFactory(this.options);\n    return jitter(this.delay);\n  }\n\n  private get delay() {\n    const constant = this.options.startingDelay;\n    const base = this.options.timeMultiple;\n    const power = this.numOfDelayedAttempts;\n    const delay = constant * Math.pow(base, power);\n\n    return Math.min(delay, this.options.maxDelay);\n  }\n\n  protected get numOfDelayedAttempts() {\n    return this.attempt;\n  }\n}\n", "import { Delay } from \"../delay.base\";\n\nexport class SkipFirstDelay extends Delay {\n    public async apply() {\n        return this.isFirstAttempt ? true : super.apply();\n    }\n\n    private get isFirstAttempt() {\n        return this.attempt === 0;\n    }\n\n    protected get numOfDelayedAttempts() {\n        return this.attempt - 1;\n    }\n}", "import { Delay } from \"../delay.base\";\n\nexport class AlwaysDelay extends Delay {}", "import { IBackOffOptions } from \"../options\";\nimport { SkipFirstDelay } from \"./skip-first/skip-first.delay\";\nimport { AlwaysDelay } from \"./always/always.delay\";\nimport { IDelay } from \"./delay.interface\";\n\nexport function DelayFactory(options: IBackOffOptions, attempt: number): IDelay {\n    const delay = initDelayClass(options);\n    delay.setAttemptNumber(attempt);\n    return delay;\n}\n\nfunction initDelayClass(options: IBackOffOptions) {\n    if (!options.delayFirstAttempt) {\n        return new SkipFirstDelay(options);\n    }\n\n    return new AlwaysDelay(options);\n}", "import {\n  IBackOffOptions,\n  getSanitizedOptions,\n  BackoffOptions\n} from \"./options\";\nimport { DelayFactory } from \"./delay/delay.factory\";\n\nexport { BackoffOptions, IBackOffOptions };\n\n/**\n * Executes a function with exponential backoff.\n * @param request the function to be executed\n * @param options options to customize the backoff behavior\n * @returns Promise that resolves to the result of the `request` function\n */\nexport async function backOff<T>(\n  request: () => Promise<T>,\n  options: BackoffOptions = {}\n): Promise<T> {\n  const sanitizedOptions = getSanitizedOptions(options);\n  const backOff = new BackOff(request, sanitizedOptions);\n\n  return await backOff.execute();\n}\n\nclass BackOff<T> {\n  private attemptNumber = 0;\n\n  constructor(\n    private request: () => Promise<T>,\n    private options: IBackOffOptions\n  ) {}\n\n  public async execute(): Promise<T> {\n    while (!this.attemptLimitReached) {\n      try {\n        await this.applyDelay();\n        return await this.request();\n      } catch (e) {\n        this.attemptNumber++;\n        const shouldRetry = await this.options.retry(e, this.attemptNumber);\n\n        if (!shouldRetry || this.attemptLimitReached) {\n          throw e;\n        }\n      }\n    }\n\n    throw new Error(\"Something went wrong.\");\n  }\n\n  private get attemptLimitReached() {\n    return this.attemptNumber >= this.options.numOfAttempts;\n  }\n\n  private async applyDelay() {\n    const delay = DelayFactory(this.options, this.attemptNumber);\n    await delay.apply();\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchJsonRpc = exports.ProviderError = exports.retryConfig = void 0;\nconst types_1 = require(\"@near-js/types\");\nconst exponential_backoff_1 = require(\"exponential-backoff\");\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\nconst RETRY_DELAY = 0;\nfunction retryConfig(numOfAttempts = RETRY_NUMBER, timeMultiple = BACKOFF_MULTIPLIER, startingDelay = RETRY_DELAY) {\n    return {\n        numOfAttempts: numOfAttempts,\n        timeMultiple: timeMultiple,\n        startingDelay: startingDelay,\n        retry: (e) => {\n            if ([503, 500, 408].includes(e.cause)) {\n                return true;\n            }\n            if (e.toString().includes('FetchError') || e.toString().includes('Failed to fetch')) {\n                return true;\n            }\n            return false;\n        }\n    };\n}\nexports.retryConfig = retryConfig;\nclass ProviderError extends Error {\n    cause;\n    constructor(message, options) {\n        super(message, options);\n        if (options.cause) {\n            this.cause = options.cause;\n        }\n    }\n}\nexports.ProviderError = ProviderError;\n/**\n * Performs an HTTP request to an RPC endpoint\n * @param url URL for the HTTP request\n * @param json Request body\n * @param headers HTTP headers to include with the request\n * @returns Promise<any> }arsed JSON response from the HTTP request.\n */\nasync function fetchJsonRpc(url, json, headers, retryConfig) {\n    const response = await (0, exponential_backoff_1.backOff)(async () => {\n        const res = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(json),\n            headers: { ...headers, 'Content-Type': 'application/json' }\n        });\n        const { ok, status } = res;\n        if (status === 500) {\n            throw new ProviderError('Internal server error', { cause: status });\n        }\n        else if (status === 408) {\n            throw new ProviderError('Timeout error', { cause: status });\n        }\n        else if (status === 400) {\n            throw new ProviderError('Request validation error', { cause: status });\n        }\n        else if (status === 503) {\n            throw new ProviderError(`${url} unavailable`, { cause: status });\n        }\n        if (!ok) {\n            throw new ProviderError(await res.text(), { cause: status });\n        }\n        return res;\n    }, retryConfig);\n    if (!response) {\n        throw new types_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${url}.`, 'RetriesExceeded');\n    }\n    return await response.json();\n}\nexports.fetchJsonRpc = fetchJsonRpc;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = require(\"@near-js/utils\");\nconst types_1 = require(\"@near-js/types\");\nconst transactions_1 = require(\"@near-js/transactions\");\nconst provider_1 = require(\"./provider.cjs\");\nconst fetch_json_1 = require(\"./fetch_json.cjs\");\n/** @hidden */\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /** @hidden */\n    connection;\n    /** @hidden */\n    options;\n    /**\n     * @param connectionInfo Connection info\n     */\n    constructor(connectionInfo, options) {\n        super();\n        this.connection = connectionInfo || { url: '' };\n        const defaultOptions = {\n            retries: REQUEST_RETRY_NUMBER,\n            wait: REQUEST_RETRY_WAIT,\n            backoff: REQUEST_RETRY_WAIT_BACKOFF\n        };\n        this.options = Object.assign({}, defaultOptions, options);\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     *\n     * @param signedTransaction The signed transaction being sent\n     * @param waitUntil\n     */\n    async sendTransactionUntil(signedTransaction, waitUntil) {\n        const bytes = (0, transactions_1.encodeTransaction)(signedTransaction);\n        return this.sendJsonRpc('send_tx', { signed_tx_base64: Buffer.from(bytes).toString('base64'), wait_until: waitUntil });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        return this.sendTransactionUntil(signedTransaction, 'EXECUTED_OPTIMISTIC');\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        return this.sendTransactionUntil(signedTransaction, 'NONE');\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     */\n    async txStatus(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        if (typeof txHash === 'string') {\n            return this.txStatusString(txHash, accountId, waitUntil);\n        }\n        else {\n            return this.txStatusUint8Array(txHash, accountId, waitUntil);\n        }\n    }\n    async txStatusUint8Array(txHash, accountId, waitUntil) {\n        return this.sendJsonRpc('tx', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n    }\n    async txStatusString(txHash, accountId, waitUntil) {\n        return this.sendJsonRpc('tx', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        if (typeof txHash === 'string') {\n            return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n        }\n        else {\n            return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n        }\n    }\n    /**\n     * Query the RPC by passing an {@link \"@near-js/types\".provider/request.RpcQueryRequest | RpcQueryRequest }\n     * @see [https://docs.near.org/api/rpc/contracts](https://docs.near.org/api/rpc/contracts)\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    async query(...args) {\n        let result;\n        if (args.length === 1) {\n            const { block_id, blockId, ...otherParams } = args[0];\n            result = await this.sendJsonRpc('query', { ...otherParams, block_id: block_id || blockId });\n        }\n        else {\n            const [path, data] = args;\n            result = await this.sendJsonRpc('query', [path, data]);\n        }\n        if (result && result.error) {\n            throw new types_1.TypedError(`Querying failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, (0, utils_1.getErrorTypeFromErrorMessage)(result.error, result.error.name));\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    async blockChanges(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        const { blockId, ...otherParams } = blockReference;\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', { ...otherParams, block_id: blockId });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    async nextLightClientBlock(request) {\n        return await this.sendJsonRpc('next_light_client_block', request);\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'all_access_key_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'single_access_key_changes',\n            keys: accessKeyArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'account_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'data_changes',\n            account_ids: accountIdArray,\n            key_prefix_base64: keyPrefix,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'contract_code_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return await this.sendJsonRpc('gas_price', [blockId]);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const request = {\n            method,\n            params,\n            id: (_nextId++),\n            jsonrpc: '2.0'\n        };\n        const response = await (0, fetch_json_1.fetchJsonRpc)(this.connection.url, request, this.connection.headers, (0, fetch_json_1.retryConfig)(this.options.retries, this.options.backoff, this.options.wait));\n        if (response.error) {\n            if (typeof response.error.data === 'object') {\n                if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                    // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                    throw new types_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                }\n                throw (0, utils_1.parseRpcError)(response.error.data);\n            }\n            else {\n                const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.error.data, '');\n                if (errorType) {\n                    throw new types_1.TypedError((0, utils_1.formatError)(errorType, params), errorType);\n                }\n                throw new types_1.TypedError(errorMessage, response.error.name);\n            }\n        }\n        else if (typeof response.result?.error === 'string') {\n            const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.result.error, '');\n            if (errorType) {\n                throw new utils_1.ServerError((0, utils_1.formatError)(errorType, params), errorType);\n            }\n        }\n        const { result } = response;\n        // From jsonrpc spec:\n        // result\n        //   This member is REQUIRED on success.\n        //   This member MUST NOT exist if there was an error invoking the method.\n        if (typeof result === 'undefined') {\n            throw new types_1.TypedError(`Exceeded ${this.options.retries} attempts for request to ${method}.`, 'RetriesExceeded');\n        }\n        return result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FailoverRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link FailoverRpcProvider} client class\n * which can be used to interact with multiple [NEAR RPC APIs](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = require(\"@near-js/utils\");\nconst types_1 = require(\"@near-js/types\");\nconst provider_1 = require(\"./provider.cjs\");\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass FailoverRpcProvider extends provider_1.Provider {\n    /** @hidden */\n    providers;\n    currentProviderIndex;\n    /**\n     * @param providers list of providers\n     */\n    constructor(providers) {\n        super();\n        if (providers.length === 0) {\n            throw new Error('At least one provider must be specified');\n        }\n        this.providers = providers;\n        this.currentProviderIndex = 0;\n    }\n    switchToNextProvider() {\n        if (this.providers.length === 1)\n            return;\n        if (this.providers.length - 1 <= this.currentProviderIndex) {\n            this.currentProviderIndex = 0;\n        }\n        else {\n            this.currentProviderIndex += 1;\n        }\n        utils_1.Logger.debug(`Switched to provider at the index ${this.currentProviderIndex}`);\n    }\n    get currentProvider() {\n        const provider = this.providers[this.currentProviderIndex];\n        if (!provider)\n            throw new Error(`Provider wasn't found at index ${this.currentProviderIndex}`);\n        return provider;\n    }\n    async withBackoff(getResult) {\n        for (let i = 0; i < this.providers.length; i++) {\n            try {\n                // each provider implements own retry logic\n                const result = await getResult(this.currentProvider);\n                if (result)\n                    return result;\n            }\n            catch (e) {\n                console.error(e);\n                this.switchToNextProvider();\n            }\n        }\n        throw new types_1.TypedError(`Exceeded ${this.providers.length} providers to execute request`, 'RetriesExceeded');\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    async status() {\n        return this.withBackoff((currentProvider) => currentProvider.status());\n    }\n    async sendTransactionUntil(signedTransaction, waitUntil) {\n        return this.withBackoff((currentProvider) => currentProvider.sendTransactionUntil(signedTransaction, waitUntil));\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        return this.withBackoff((currentProvider) => currentProvider.sendTransaction(signedTransaction));\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        return this.withBackoff((currentProvider) => currentProvider.sendTransactionAsync(signedTransaction));\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    async txStatus(txHash, accountId, waitUntil) {\n        return this.withBackoff((currentProvider) => currentProvider.txStatus(txHash, accountId, waitUntil));\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId, waitUntil) {\n        return this.withBackoff((currentProvider) => currentProvider.txStatusReceipts(txHash, accountId, waitUntil));\n    }\n    async query(paramsOrPath, data) {\n        if (data) {\n            return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath, data));\n        }\n        return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath));\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.block(blockQuery));\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    async blockChanges(blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.blockChanges(blockQuery));\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.withBackoff((currentProvider) => currentProvider.chunk(chunkId));\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.withBackoff((currentProvider) => currentProvider.validators(blockId));\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        return this.withBackoff((currentProvider) => currentProvider.experimental_protocolConfig(blockReference));\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    async lightClientProof(request) {\n        return this.withBackoff((currentProvider) => currentProvider.lightClientProof(request));\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    async nextLightClientBlock(request) {\n        return this.withBackoff((currentProvider) => currentProvider.nextLightClientBlock(request));\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.accessKeyChanges(accountIdArray, blockQuery));\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.singleAccessKeyChanges(accessKeyArray, blockQuery));\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.accountChanges(accountIdArray, blockQuery));\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return this.withBackoff((currentProvider) => currentProvider.contractStateChanges(accountIdArray, blockQuery, keyPrefix));\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.contractCodeChanges(accountIdArray, blockQuery));\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return this.withBackoff((currentProvider) => currentProvider.gasPrice(blockId));\n    }\n}\nexports.FailoverRpcProvider = FailoverRpcProvider;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Provider = exports.FailoverRpcProvider = exports.JsonRpcProvider = exports.exponentialBackoff = void 0;\nvar exponential_backoff_1 = require(\"./exponential-backoff.cjs\");\nObject.defineProperty(exports, \"exponentialBackoff\", { enumerable: true, get: function () { return exponential_backoff_1.exponentialBackoff; } });\nvar json_rpc_provider_1 = require(\"./json-rpc-provider.cjs\");\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } });\nvar failover_rpc_provider_1 = require(\"./failover-rpc-provider.cjs\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", { enumerable: true, get: function () { return failover_rpc_provider_1.FailoverRpcProvider; } });\nvar provider_1 = require(\"./provider.cjs\");\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = exports.Provider = exports.getTransactionLastResult = void 0;\nvar utils_1 = require(\"@near-js/utils\");\nObject.defineProperty(exports, \"getTransactionLastResult\", { enumerable: true, get: function () { return utils_1.getTransactionLastResult; } });\nvar providers_1 = require(\"@near-js/providers\");\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return providers_1.Provider; } });\nvar types_1 = require(\"@near-js/types\");\nObject.defineProperty(exports, \"IdType\", { enumerable: true, get: function () { return types_1.IdType; } });\nObject.defineProperty(exports, \"ExecutionStatusBasic\", { enumerable: true, get: function () { return types_1.ExecutionStatusBasic; } });\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", { enumerable: true, get: function () { return types_1.FinalExecutionStatusBasic; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.TypedError = exports.ErrorContext = void 0;\nvar types_1 = require(\"@near-js/types\");\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return types_1.ErrorContext; } });\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return types_1.TypedError; } });\nvar providers_1 = require(\"@near-js/providers\");\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return providers_1.JsonRpcProvider; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FailoverRpcProvider = void 0;\nvar providers_1 = require(\"@near-js/providers\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", { enumerable: true, get: function () { return providers_1.FailoverRpcProvider; } });\n", "\"use strict\";\n/** @hidden @module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorContext = exports.TypedError = exports.getTransactionLastResult = exports.FinalExecutionStatusBasic = exports.FailoverRpcProvider = exports.JsonRpcProvider = exports.Provider = void 0;\nconst provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\nObject.defineProperty(exports, \"getTransactionLastResult\", { enumerable: true, get: function () { return provider_1.getTransactionLastResult; } });\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", { enumerable: true, get: function () { return provider_1.FinalExecutionStatusBasic; } });\nconst json_rpc_provider_1 = require(\"./json-rpc-provider\");\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } });\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return json_rpc_provider_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return json_rpc_provider_1.ErrorContext; } });\nconst failover_rpc_provider_1 = require(\"./failover-rpc-provider\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", { enumerable: true, get: function () { return failover_rpc_provider_1.FailoverRpcProvider; } });\n", "\"use strict\";\nexports.__esModule = true;\nexports.integers = void 0;\nexports.integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n", "\"use strict\";\nexports.__esModule = true;\nexports.DecodeBuffer = exports.EncodeBuffer = void 0;\nvar EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexports.EncodeBuffer = EncodeBuffer;\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexports.DecodeBuffer = DecodeBuffer;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.validate_schema = exports.ErrorSchema = exports.expect_enum = exports.expect_same_size = exports.expect_bigint = exports.expect_type = exports.isArrayLike = void 0;\nvar types_js_1 = require(\"./types.js\");\nfunction isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexports.isArrayLike = isArrayLike;\nfunction expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_type = expect_type;\nfunction expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_bigint = expect_bigint;\nfunction expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_same_size = expect_same_size;\nfunction expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_enum = expect_enum;\n// Validate Schema\nvar VALID_STRING_TYPES = types_js_1.integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexports.ErrorSchema = ErrorSchema;\nfunction validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nexports.validate_schema = validate_schema;\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.BorshSerializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new buffer_js_1.EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexports.BorshSerializer = BorshSerializer;\n", "\"use strict\";\nexports.__esModule = true;\nexports.BorshDeserializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new buffer_js_1.DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexports.BorshDeserializer = BorshDeserializer;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.deserialize = exports.serialize = void 0;\nvar serialize_js_1 = require(\"./serialize.js\");\nvar deserialize_js_1 = require(\"./deserialize.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nfunction serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new serialize_js_1.BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexports.serialize = serialize;\nfunction deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new deserialize_js_1.BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\nexports.deserialize = deserialize;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base_decode = exports.base_encode = exports.deserialize = exports.serialize = void 0;\nvar borsh_1 = require(\"borsh\");\nObject.defineProperty(exports, \"serialize\", { enumerable: true, get: function () { return borsh_1.serialize; } });\nObject.defineProperty(exports, \"deserialize\", { enumerable: true, get: function () { return borsh_1.deserialize; } });\nvar utils_1 = require(\"@near-js/utils\");\nObject.defineProperty(exports, \"base_encode\", { enumerable: true, get: function () { return utils_1.baseEncode; } });\nObject.defineProperty(exports, \"base_decode\", { enumerable: true, get: function () { return utils_1.baseDecode; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Enum = void 0;\nvar types_1 = require(\"@near-js/types\");\nObject.defineProperty(exports, \"Enum\", { enumerable: true, get: function () { return types_1.Enum; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION_EXP = exports.NEAR_NOMINATION = void 0;\nvar utils_1 = require(\"@near-js/utils\");\nObject.defineProperty(exports, \"NEAR_NOMINATION\", { enumerable: true, get: function () { return utils_1.NEAR_NOMINATION; } });\nObject.defineProperty(exports, \"NEAR_NOMINATION_EXP\", { enumerable: true, get: function () { return utils_1.NEAR_NOMINATION_EXP; } });\nObject.defineProperty(exports, \"formatNearAmount\", { enumerable: true, get: function () { return utils_1.formatNearAmount; } });\nObject.defineProperty(exports, \"parseNearAmount\", { enumerable: true, get: function () { return utils_1.parseNearAmount; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = void 0;\nvar utils_1 = require(\"@near-js/utils\");\nObject.defineProperty(exports, \"parseRpcError\", { enumerable: true, get: function () { return utils_1.parseRpcError; } });\nObject.defineProperty(exports, \"parseResultError\", { enumerable: true, get: function () { return utils_1.parseResultError; } });\nObject.defineProperty(exports, \"formatError\", { enumerable: true, get: function () { return utils_1.formatError; } });\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", { enumerable: true, get: function () { return utils_1.getErrorTypeFromErrorMessage; } });\nObject.defineProperty(exports, \"ServerError\", { enumerable: true, get: function () { return utils_1.ServerError; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nvar utils_1 = require(\"@near-js/utils\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return utils_1.Logger; } });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = exports.rpc_errors = exports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.format = exports.enums = exports.serialize = exports.key_pair = void 0;\nconst key_pair = __importStar(require(\"./key_pair\"));\nexports.key_pair = key_pair;\nconst serialize = __importStar(require(\"./serialize\"));\nexports.serialize = serialize;\nconst enums = __importStar(require(\"./enums\"));\nexports.enums = enums;\nconst format = __importStar(require(\"./format\"));\nexports.format = format;\nconst rpc_errors = __importStar(require(\"./rpc_errors\"));\nexports.rpc_errors = rpc_errors;\nconst key_pair_1 = require(\"./key_pair\");\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return key_pair_1.PublicKey; } });\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nObject.defineProperty(exports, \"KeyPairEd25519\", { enumerable: true, get: function () { return key_pair_1.KeyPairEd25519; } });\nconst logger_1 = require(\"./logger\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transfer = exports.stake = exports.functionCallAccessKey = exports.functionCall = exports.fullAccessKey = exports.deployContract = exports.deleteKey = exports.deleteAccount = exports.createAccount = exports.addKey = exports.encodeTransaction = exports.encodeDelegateAction = exports.encodeSignedDelegate = exports.Transaction = exports.SignedTransaction = exports.Signature = exports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Transfer = exports.Stake = exports.FunctionCallPermission = exports.FunctionCall = exports.FullAccessPermission = exports.DeployContract = exports.DeleteKey = exports.DeleteAccount = exports.CreateAccount = exports.AddKey = exports.AccessKeyPermission = exports.AccessKey = exports.Action = exports.stringifyJsonOrBytes = void 0;\nvar transactions_1 = require(\"@near-js/transactions\");\nObject.defineProperty(exports, \"stringifyJsonOrBytes\", { enumerable: true, get: function () { return transactions_1.stringifyJsonOrBytes; } });\nObject.defineProperty(exports, \"Action\", { enumerable: true, get: function () { return transactions_1.Action; } });\nObject.defineProperty(exports, \"AccessKey\", { enumerable: true, get: function () { return transactions_1.AccessKey; } });\nObject.defineProperty(exports, \"AccessKeyPermission\", { enumerable: true, get: function () { return transactions_1.AccessKeyPermission; } });\nObject.defineProperty(exports, \"AddKey\", { enumerable: true, get: function () { return transactions_1.AddKey; } });\nObject.defineProperty(exports, \"CreateAccount\", { enumerable: true, get: function () { return transactions_1.CreateAccount; } });\nObject.defineProperty(exports, \"DeleteAccount\", { enumerable: true, get: function () { return transactions_1.DeleteAccount; } });\nObject.defineProperty(exports, \"DeleteKey\", { enumerable: true, get: function () { return transactions_1.DeleteKey; } });\nObject.defineProperty(exports, \"DeployContract\", { enumerable: true, get: function () { return transactions_1.DeployContract; } });\nObject.defineProperty(exports, \"FullAccessPermission\", { enumerable: true, get: function () { return transactions_1.FullAccessPermission; } });\nObject.defineProperty(exports, \"FunctionCall\", { enumerable: true, get: function () { return transactions_1.FunctionCall; } });\nObject.defineProperty(exports, \"FunctionCallPermission\", { enumerable: true, get: function () { return transactions_1.FunctionCallPermission; } });\nObject.defineProperty(exports, \"Stake\", { enumerable: true, get: function () { return transactions_1.Stake; } });\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transactions_1.Transfer; } });\nObject.defineProperty(exports, \"SCHEMA\", { enumerable: true, get: function () { return transactions_1.SCHEMA; } });\nObject.defineProperty(exports, \"createTransaction\", { enumerable: true, get: function () { return transactions_1.createTransaction; } });\nObject.defineProperty(exports, \"signTransaction\", { enumerable: true, get: function () { return transactions_1.signTransaction; } });\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return transactions_1.Signature; } });\nObject.defineProperty(exports, \"SignedTransaction\", { enumerable: true, get: function () { return transactions_1.SignedTransaction; } });\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return transactions_1.Transaction; } });\nObject.defineProperty(exports, \"encodeSignedDelegate\", { enumerable: true, get: function () { return transactions_1.encodeSignedDelegate; } });\nObject.defineProperty(exports, \"encodeDelegateAction\", { enumerable: true, get: function () { return transactions_1.encodeDelegateAction; } });\nObject.defineProperty(exports, \"encodeTransaction\", { enumerable: true, get: function () { return transactions_1.encodeTransaction; } });\nconst transactions_2 = require(\"@near-js/transactions\");\nconst addKey = (publicKey, accessKey) => transactions_2.actionCreators.addKey(publicKey, accessKey);\nexports.addKey = addKey;\nconst createAccount = () => transactions_2.actionCreators.createAccount();\nexports.createAccount = createAccount;\nconst deleteAccount = (beneficiaryId) => transactions_2.actionCreators.deleteAccount(beneficiaryId);\nexports.deleteAccount = deleteAccount;\nconst deleteKey = (publicKey) => transactions_2.actionCreators.deleteKey(publicKey);\nexports.deleteKey = deleteKey;\nconst deployContract = (code) => transactions_2.actionCreators.deployContract(code);\nexports.deployContract = deployContract;\nconst fullAccessKey = () => transactions_2.actionCreators.fullAccessKey();\nexports.fullAccessKey = fullAccessKey;\nconst functionCall = (methodName, args, gas, deposit, stringify, jsContract) => transactions_2.actionCreators.functionCall(methodName, args, gas, deposit, stringify, jsContract);\nexports.functionCall = functionCall;\nconst functionCallAccessKey = (receiverId, methodNames, allowance) => transactions_2.actionCreators.functionCallAccessKey(receiverId, methodNames, allowance);\nexports.functionCallAccessKey = functionCallAccessKey;\nconst stake = (stake, publicKey) => transactions_2.actionCreators.stake(stake, publicKey);\nexports.stake = stake;\nconst transfer = (deposit) => transactions_2.actionCreators.transfer(deposit);\nexports.transfer = transfer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findSeatPrice = exports.diffEpochValidators = void 0;\nvar utils_1 = require(\"@near-js/utils\");\nObject.defineProperty(exports, \"diffEpochValidators\", { enumerable: true, get: function () { return utils_1.diffEpochValidators; } });\nObject.defineProperty(exports, \"findSeatPrice\", { enumerable: true, get: function () { return utils_1.findSeatPrice; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.viewFunction = exports.viewState = exports.encodeJSContractArgs = exports.validateArgs = void 0;\nconst types_1 = require(\"@near-js/types\");\nconst utils_1 = require(\"@near-js/utils\");\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\nfunction validateArgs(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    if (isUint8Array) {\n        return;\n    }\n    if (Array.isArray(args) || typeof args !== 'object') {\n        throw new types_1.PositionalArgsError();\n    }\n}\nexports.validateArgs = validateArgs;\nfunction encodeJSContractArgs(contractId, method, args) {\n    return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n}\nexports.encodeJSContractArgs = encodeJSContractArgs;\n/**\n * Returns the state (key value pairs) of account's contract based on the key prefix.\n * Pass an empty string for prefix if you would like to return the entire state.\n * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n *\n * @param connection connection to query state from\n * @param accountId account whose state is viewed\n * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n */\nasync function viewState(connection, accountId, prefix, blockQuery = { finality: 'optimistic' }) {\n    const { values } = await connection.provider.query({\n        request_type: 'view_state',\n        ...blockQuery,\n        account_id: accountId,\n        prefix_base64: Buffer.from(prefix).toString('base64')\n    });\n    return values.map(({ key, value }) => ({\n        key: Buffer.from(key, 'base64'),\n        value: Buffer.from(value, 'base64')\n    }));\n}\nexports.viewState = viewState;\n/**\n * Invoke a contract view function using the RPC API.\n * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n *\n * @param options Function call options.\n * @param options.contractId NEAR account where the contract is deployed\n * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n * @param options.args Any arguments to the view contract method, wrapped in JSON\n * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n * @returns {Promise<any>}\n */\nasync function viewFunction(connection, { contractId, methodName, args = {}, parse = parseJsonFromRawResponse, stringify = bytesJsonStringify, jsContract = false, blockQuery = { finality: 'optimistic' } }) {\n    let encodedArgs;\n    validateArgs(args);\n    if (jsContract) {\n        encodedArgs = encodeJSContractArgs(contractId, methodName, Object.keys(args).length > 0 ? JSON.stringify(args) : '');\n    }\n    else {\n        encodedArgs = stringify(args);\n    }\n    const result = await connection.provider.query({\n        request_type: 'call_function',\n        ...blockQuery,\n        account_id: jsContract ? connection.jsvmAccountId : contractId,\n        method_name: jsContract ? 'view_js_contract' : methodName,\n        args_base64: encodedArgs.toString('base64')\n    });\n    if (result.logs) {\n        (0, utils_1.printTxOutcomeLogs)({ contractId, logs: result.logs });\n    }\n    return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n}\nexports.viewFunction = viewFunction;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst providers_1 = require(\"@near-js/providers\");\nconst transactions_1 = require(\"@near-js/transactions\");\nconst types_1 = require(\"@near-js/types\");\nconst utils_1 = require(\"@near-js/utils\");\nconst utils_2 = require(\"./utils.cjs\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey, stake, transfer, } = transactions_1.actionCreators;\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link \"@near-js/crypto\".key_pair.KeyPair | KeyPair}.\n */\nclass Account {\n    connection;\n    accountId;\n    constructor(connection, accountId) {\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    getConnection() {\n        return this.connection;\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see [https://docs.near.org/api/rpc/contracts#view-account](https://docs.near.org/api/rpc/contracts#view-account)\n     */\n    async state() {\n        return this.connection.provider.query({\n            request_type: 'view_account',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     */\n    async signTransaction(receiverId, actions) {\n        const accessKeyInfo = await this.findAccessKey(receiverId, actions);\n        if (!accessKeyInfo) {\n            throw new types_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair exists for this account`, 'KeyNotFound');\n        }\n        const { accessKey } = accessKeyInfo;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const nonce = accessKey.nonce + 1n;\n        return await (0, transactions_1.signTransaction)(receiverId, nonce, actions, (0, utils_1.baseDecode)(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n    }\n    /**\n     * Sign a transaction to perform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider }\n     *\n     * @param options The options for signing and sending the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be performed in the transaction.\n     * @param options.returnError Whether to return an error if the transaction fails.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransaction({ receiverId, actions, returnError }) {\n        let txHash, signedTx;\n        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n        const result = await (0, providers_1.exponentialBackoff)(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, async () => {\n            [txHash, signedTx] = await this.signTransaction(receiverId, actions);\n            const publicKey = signedTx.transaction.publicKey;\n            try {\n                return await this.connection.provider.sendTransaction(signedTx);\n            }\n            catch (error) {\n                if (error.type === 'InvalidNonce') {\n                    utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} with new nonce.`);\n                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                    return null;\n                }\n                if (error.type === 'Expired') {\n                    utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} due to expired block hash`);\n                    return null;\n                }\n                error.context = new types_1.ErrorContext((0, utils_1.baseEncode)(txHash));\n                throw error;\n            }\n        });\n        if (!result) {\n            // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n            throw new types_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n        }\n        (0, utils_1.printTxOutcomeLogsAndFailures)({ contractId: signedTx.transaction.receiverId, outcome: result });\n        // Should be falsy if result.status.Failure is null\n        if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object' && result.status.Failure !== null) {\n            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n            if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                throw new types_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n            }\n            else {\n                throw (0, utils_1.parseResultError)(result);\n            }\n        }\n        // TODO: if Tx is Unknown or Started.\n        return result;\n    }\n    /** @hidden */\n    accessKeyByPublicKeyCache = {};\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link \"@near-js/keystores\".keystore.KeyStore | Keystore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async findAccessKey(receiverId, actions) {\n        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        if (!publicKey) {\n            throw new types_1.TypedError(`no matching key pair found in ${this.connection.signer}`, 'PublicKeyNotFound');\n        }\n        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n        if (cachedAccessKey !== undefined) {\n            return { publicKey, accessKey: cachedAccessKey };\n        }\n        try {\n            const rawAccessKey = await this.connection.provider.query({\n                request_type: 'view_access_key',\n                account_id: this.accountId,\n                public_key: publicKey.toString(),\n                finality: 'optimistic'\n            });\n            // store nonce as BigInt to preserve precision on big number\n            const accessKey = {\n                ...rawAccessKey,\n                nonce: BigInt(rawAccessKey.nonce || 0)\n            };\n            // this function can be called multiple times and retrieve the same access key\n            // this checks to see if the access key was already retrieved and cached while\n            // the above network call was in flight. To keep nonce values in line, we return\n            // the cached access key.\n            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n            }\n            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n            return { publicKey, accessKey };\n        }\n        catch (e) {\n            if (e.type == 'AccessKeyDoesNotExist') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    async createAndDeployContract(contractId, publicKey, data, amount) {\n        const accessKey = fullAccessKey();\n        await this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey), deployContract(data)]\n        });\n        const contractAccount = new Account(this.connection, contractId);\n        return contractAccount;\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    async sendMoney(receiverId, amount) {\n        return this.signAndSendTransaction({\n            receiverId,\n            actions: [transfer(amount)]\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    async createAccount(newAccountId, publicKey, amount) {\n        const accessKey = fullAccessKey();\n        return this.signAndSendTransaction({\n            receiverId: newAccountId,\n            actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    async deleteAccount(beneficiaryId) {\n        utils_1.Logger.log('Deleting an account does not automatically transfer NFTs and FTs to the beneficiary address. Ensure to transfer assets before deleting.');\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [deleteAccount(beneficiaryId)]\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    async deployContract(data) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [deployContract(data)]\n        });\n    }\n    /** @hidden */\n    encodeJSContractArgs(contractId, method, args) {\n        return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n    }\n    /**\n      * Execute a function call.\n      * @param options The options for the function call.\n      * @param options.contractId The NEAR account ID of the smart contract.\n      * @param options.methodName The name of the method to be called on the smart contract.\n      * @param options.args The arguments to be passed to the method.\n      * @param options.gas The maximum amount of gas to be used for the function call.\n      * @param options.attachedDeposit The amount of NEAR tokens to be attached to the function call.\n      * @param options.walletMeta Metadata for wallet integration.\n      * @param options.walletCallbackUrl The callback URL for wallet integration.\n      * @param options.stringify A function to convert input arguments into bytes array\n      * @param options.jsContract Whether the contract is from JS SDK, automatically encodes args from JS SDK to binary.\n      * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the function call.\n      */\n    async functionCall({ contractId, methodName, args = {}, gas = utils_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify, jsContract }) {\n        this.validateArgs(args);\n        let functionCallArgs;\n        if (jsContract) {\n            const encodedArgs = this.encodeJSContractArgs(contractId, methodName, JSON.stringify(args));\n            functionCallArgs = ['call_js_contract', encodedArgs, gas, attachedDeposit, null, true];\n        }\n        else {\n            const stringifyArg = stringify === undefined ? transactions_1.stringifyJsonOrBytes : stringify;\n            functionCallArgs = [methodName, args, gas, attachedDeposit, stringifyArg, false];\n        }\n        return this.signAndSendTransaction({\n            receiverId: jsContract ? this.connection.jsvmAccountId : contractId,\n            // eslint-disable-next-line prefer-spread\n            actions: [functionCall.apply(void 0, functionCallArgs)],\n            walletMeta,\n            walletCallbackUrl\n        });\n    }\n    /**\n     * @see [https://docs.near.org/concepts/basics/accounts/access-keys](https://docs.near.org/concepts/basics/accounts/access-keys)\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    async addKey(publicKey, contractId, methodNames, amount) {\n        if (!methodNames) {\n            methodNames = [];\n        }\n        if (!Array.isArray(methodNames)) {\n            methodNames = [methodNames];\n        }\n        let accessKey;\n        if (!contractId) {\n            accessKey = fullAccessKey();\n        }\n        else {\n            accessKey = functionCallAccessKey(contractId, methodNames, amount);\n        }\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async deleteKey(publicKey) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [deleteKey(crypto_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * @see [https://near-nodes.io/validator/staking-and-delegation](https://near-nodes.io/validator/staking-and-delegation)\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    async stake(publicKey, amount) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [stake(amount, crypto_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * Compose and sign a SignedDelegate action to be executed in a transaction on behalf of this Account instance\n     *\n     * @param options Options for the transaction.\n     * @param options.actions Actions to be included in the meta transaction\n     * @param options.blockHeightTtl Number of blocks past the current block height for which the SignedDelegate action may be included in a meta transaction\n     * @param options.receiverId Receiver account of the meta transaction\n     */\n    async signedDelegate({ actions, blockHeightTtl, receiverId, }) {\n        const { provider, signer } = this.connection;\n        const { header } = await provider.block({ finality: 'final' });\n        const { accessKey, publicKey } = await this.findAccessKey(null, null);\n        const delegateAction = (0, transactions_1.buildDelegateAction)({\n            actions,\n            maxBlockHeight: BigInt(header.height) + BigInt(blockHeightTtl),\n            nonce: BigInt(accessKey.nonce) + 1n,\n            publicKey,\n            receiverId,\n            senderId: this.accountId,\n        });\n        const { signedDelegateAction } = await (0, transactions_1.signDelegateAction)({\n            delegateAction,\n            signer: {\n                sign: async (message) => {\n                    const { signature } = await signer.signMessage(message, delegateAction.senderId, this.connection.networkId);\n                    return signature;\n                },\n            }\n        });\n        return signedDelegateAction;\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new types_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n     *\n     * @param options Function call options.\n     * @param options.contractId NEAR account where the contract is deployed\n     * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param options.args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n     * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     * @returns {Promise<any>}\n     */\n    async viewFunction(options) {\n        return await (0, utils_2.viewFunction)(this.connection, options);\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    async viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        return await (0, utils_2.viewState)(this.connection, this.accountId, prefix, blockQuery);\n    }\n    /**\n     * Get all access keys for the account\n     * @see [https://docs.near.org/api/rpc/access-keys#view-access-key-list](https://docs.near.org/api/rpc/access-keys#view-access-key-list)\n     */\n    async getAccessKeys() {\n        const response = await this.connection.provider.query({\n            request_type: 'view_access_key_list',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n        // Replace raw nonce into a new BigInt\n        return response?.keys?.map((key) => ({ ...key, access_key: { ...key.access_key, nonce: BigInt(key.access_key.nonce) } }));\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    async getAccountDetails() {\n        // TODO: update the response value to return all the different keys, not just app keys.\n        // Also if we need this function, or getAccessKeys is good enough.\n        const accessKeys = await this.getAccessKeys();\n        const authorizedApps = accessKeys\n            .filter(item => item.access_key.permission !== 'FullAccess')\n            .map(item => {\n            const perm = item.access_key.permission;\n            return {\n                contractId: perm.FunctionCall.receiver_id,\n                amount: perm.FunctionCall.allowance,\n                publicKey: item.public_key,\n            };\n        });\n        return { authorizedApps };\n    }\n    /**\n     * Returns calculated account balance\n     */\n    async getAccountBalance() {\n        const protocolConfig = await this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n        const state = await this.state();\n        const costPerByte = BigInt(protocolConfig.runtime_config.storage_amount_per_byte);\n        const stateStaked = BigInt(state.storage_usage) * costPerByte;\n        const staked = BigInt(state.locked);\n        const totalBalance = BigInt(state.amount) + staked;\n        const availableBalance = totalBalance - (staked > stateStaked ? staked : stateStaked);\n        return {\n            total: totalBalance.toString(),\n            stateStaked: stateStaked.toString(),\n            staked: staked.toString(),\n            available: availableBalance.toString()\n        };\n    }\n    /**\n     * Returns the NEAR tokens balance and validators of a given account that is delegated to the staking pools that are part of the validators set in the current epoch.\n     *\n     * NOTE: If the tokens are delegated to a staking pool that is currently on pause or does not have enough tokens to participate in validation, they won't be accounted for.\n     * @returns {Promise<ActiveDelegatedStakeBalance>}\n     */\n    async getActiveDelegatedStakeBalance() {\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const epochId = block.header.epoch_id;\n        const { current_validators, next_validators, current_proposals } = await this.connection.provider.validators(epochId);\n        const pools = new Set();\n        [...current_validators, ...next_validators, ...current_proposals]\n            .forEach((validator) => pools.add(validator.account_id));\n        const uniquePools = [...pools];\n        const promises = uniquePools\n            .map((validator) => (this.viewFunction({\n            contractId: validator,\n            methodName: 'get_account_total_balance',\n            args: { account_id: this.accountId },\n            blockQuery: { blockId: blockHash }\n        })));\n        const results = await Promise.allSettled(promises);\n        const hasTimeoutError = results.some((result) => {\n            if (result.status === 'rejected' && result.reason.type === 'TimeoutError') {\n                return true;\n            }\n            return false;\n        });\n        // When RPC is down and return timeout error, throw error\n        if (hasTimeoutError) {\n            throw new Error('Failed to get delegated stake balance');\n        }\n        const summary = results.reduce((result, state, index) => {\n            const validatorId = uniquePools[index];\n            if (state.status === 'fulfilled') {\n                const currentBN = BigInt(state.value);\n                if (currentBN !== 0n) {\n                    return {\n                        ...result,\n                        stakedValidators: [...result.stakedValidators, { validatorId, amount: currentBN.toString() }],\n                        total: result.total + currentBN,\n                    };\n                }\n            }\n            if (state.status === 'rejected') {\n                return {\n                    ...result,\n                    failedValidators: [...result.failedValidators, { validatorId, error: state.reason }],\n                };\n            }\n            return result;\n        }, { stakedValidators: [], failedValidators: [], total: 0n });\n        return {\n            ...summary,\n            total: summary.total.toString(),\n        };\n    }\n}\nexports.Account = Account;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = BigInt((0, utils_1.parseNearAmount)('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = 100000000000000n;\nexports.MULTISIG_DEPOSIT = 0n;\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = void 0;\nvar MultisigDeleteRequestRejectionError;\n(function (MultisigDeleteRequestRejectionError) {\n    MultisigDeleteRequestRejectionError[\"CANNOT_DESERIALIZE_STATE\"] = \"Cannot deserialize the contract state\";\n    MultisigDeleteRequestRejectionError[\"MULTISIG_NOT_INITIALIZED\"] = \"Smart contract panicked: Multisig contract should be initialized before usage\";\n    MultisigDeleteRequestRejectionError[\"NO_SUCH_REQUEST\"] = \"Smart contract panicked: panicked at 'No such request: either wrong number or already confirmed'\";\n    MultisigDeleteRequestRejectionError[\"REQUEST_COOLDOWN_ERROR\"] = \"Request cannot be deleted immediately after creation.\";\n    MultisigDeleteRequestRejectionError[\"METHOD_NOT_FOUND\"] = \"Contract method is not found\";\n})(MultisigDeleteRequestRejectionError || (exports.MultisigDeleteRequestRejectionError = MultisigDeleteRequestRejectionError = {}));\nvar MultisigStateStatus;\n(function (MultisigStateStatus) {\n    MultisigStateStatus[MultisigStateStatus[\"INVALID_STATE\"] = 0] = \"INVALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"STATE_NOT_INITIALIZED\"] = 1] = \"STATE_NOT_INITIALIZED\";\n    MultisigStateStatus[MultisigStateStatus[\"VALID_STATE\"] = 2] = \"VALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"UNKNOWN_STATE\"] = 3] = \"UNKNOWN_STATE\";\n})(MultisigStateStatus || (exports.MultisigStateStatus = MultisigStateStatus = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountMultisig = void 0;\nconst transactions_1 = require(\"@near-js/transactions\");\nconst utils_1 = require(\"@near-js/utils\");\nconst account_1 = require(\"./account.cjs\");\nconst constants_1 = require(\"./constants.cjs\");\nconst types_1 = require(\"./types.cjs\");\nconst { deployContract, functionCall } = transactions_1.actionCreators;\nvar MultisigCodeStatus;\n(function (MultisigCodeStatus) {\n    MultisigCodeStatus[MultisigCodeStatus[\"INVALID_CODE\"] = 0] = \"INVALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"VALID_CODE\"] = 1] = \"VALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"UNKNOWN_CODE\"] = 2] = \"UNKNOWN_CODE\";\n})(MultisigCodeStatus || (MultisigCodeStatus = {}));\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [constants_1.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    storage;\n    onAddRequestResult;\n    /**\n     * Constructs an instance of the `AccountMultisig` class.\n     * @param connection The NEAR connection object.\n     * @param accountId The NEAR account ID.\n     * @param options Additional options for the multisig account.\n     * @param options.storage Storage to store data related to multisig operations.\n     * @param options.onAddRequestResult Callback function to handle the result of adding a request.\n     */\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    /**\n     * Sign and send a transaction with the multisig account as the sender.\n     * @param receiverId - The NEAR account ID of the transaction receiver.\n     * @param actions - The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransactionWithAccount(receiverId, actions) {\n        return super.signAndSendTransaction({ receiverId, actions });\n    }\n    /**\n     * Sign and send a multisig transaction to add a request and confirm it.\n     * @param options Options for the multisig transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransaction({ receiverId, actions }) {\n        const { accountId } = this;\n        const args = Buffer.from(JSON.stringify({\n            request: {\n                receiver_id: receiverId,\n                actions: convertActions(actions, accountId, receiverId)\n            }\n        }));\n        let result;\n        try {\n            result = await super.signAndSendTransaction({\n                receiverId: accountId,\n                actions: [\n                    functionCall('add_request_and_confirm', args, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                ]\n            });\n        }\n        catch (e) {\n            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                await this.deleteUnconfirmedRequests();\n                return await this.signAndSendTransaction({ receiverId, actions });\n            }\n            throw e;\n        }\n        // TODO: Are following even needed? Seems like it throws on error already\n        if (!result.status) {\n            throw new Error('Request failed');\n        }\n        const status = { ...result.status };\n        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n            throw new Error('Request failed');\n        }\n        this.setRequest({\n            accountId,\n            actions,\n            requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n        });\n        if (this.onAddRequestResult) {\n            await this.onAddRequestResult(result);\n        }\n        // NOTE there is no await on purpose to avoid blocking for 2fa\n        this.deleteUnconfirmedRequests();\n        return result;\n    }\n    /**\n     * This method submits a canary transaction that is expected to always fail in order to determine whether the contract currently has valid multisig state\n     * and whether it is initialized. The canary transaction attempts to delete a request at index u32_max and will go through if a request exists at that index.\n     * a u32_max + 1 and -1 value cannot be used for the canary due to expected u32 error thrown before deserialization attempt.\n     * @param contractBytes The bytecode of the multisig contract.\n     * @returns {Promise<{ codeStatus: MultisigCodeStatus; stateStatus: MultisigStateStatus }>} A promise that resolves to the status of the code and state.\n     */\n    async checkMultisigCodeAndStateStatus(contractBytes) {\n        const u32_max = 4_294_967_295;\n        const validCodeStatusIfNoDeploy = contractBytes ? MultisigCodeStatus.UNKNOWN_CODE : MultisigCodeStatus.VALID_CODE;\n        try {\n            if (contractBytes) {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId, actions: [\n                        deployContract(contractBytes),\n                        functionCall('delete_request', { request_id: u32_max }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                    ]\n                });\n            }\n            else {\n                await this.deleteRequest(u32_max);\n            }\n            return { codeStatus: MultisigCodeStatus.VALID_CODE, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n        }\n        catch (e) {\n            if (new RegExp(types_1.MultisigDeleteRequestRejectionError.CANNOT_DESERIALIZE_STATE).test(e && e.kind && e.kind.ExecutionError)) {\n                return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.INVALID_STATE };\n            }\n            else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.MULTISIG_NOT_INITIALIZED).test(e && e.kind && e.kind.ExecutionError)) {\n                return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.STATE_NOT_INITIALIZED };\n            }\n            else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.NO_SUCH_REQUEST).test(e && e.kind && e.kind.ExecutionError)) {\n                return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n            }\n            else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.METHOD_NOT_FOUND).test(e && e.message)) {\n                // not reachable if transaction included a deploy\n                return { codeStatus: MultisigCodeStatus.INVALID_CODE, stateStatus: types_1.MultisigStateStatus.UNKNOWN_STATE };\n            }\n            throw e;\n        }\n    }\n    /**\n     * Delete a multisig request by its ID.\n     * @param request_id The ID of the multisig request to be deleted.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deletion.\n     */\n    deleteRequest(request_id) {\n        return super.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [functionCall('delete_request', { request_id }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n        });\n    }\n    /**\n     * Delete all multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when all requests are deleted.\n     */\n    async deleteAllRequests() {\n        const request_ids = await this.getRequestIds();\n        if (request_ids.length) {\n            await Promise.all(request_ids.map((id) => this.deleteRequest(id)));\n        }\n    }\n    /**\n     * Delete unconfirmed multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when unconfirmed requests are deleted.\n     */\n    async deleteUnconfirmedRequests() {\n        // TODO: Delete in batch, don't delete unexpired\n        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n        const request_ids = await this.getRequestIds();\n        const { requestId } = this.getRequest();\n        for (const requestIdToDelete of request_ids) {\n            if (requestIdToDelete == requestId) {\n                continue;\n            }\n            try {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId,\n                    actions: [functionCall('delete_request', { request_id: requestIdToDelete }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n                });\n            }\n            catch (e) {\n                utils_1.Logger.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n            }\n        }\n    }\n    // helpers\n    async getRequestIds() {\n        // TODO: Read requests from state to allow filtering by expiration time\n        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n        return this.viewFunction({\n            contractId: this.accountId,\n            methodName: 'list_request_ids',\n        });\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(constants_1.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[constants_1.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(constants_1.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[constants_1.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: constants_1.MULTISIG_ALLOWANCE.toString(),\n                method_names: constants_1.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account2FA = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst types_1 = require(\"@near-js/types\");\nconst transactions_1 = require(\"@near-js/transactions\");\nconst utils_1 = require(\"@near-js/utils\");\nconst account_multisig_1 = require(\"./account_multisig.cjs\");\nconst constants_1 = require(\"./constants.cjs\");\nconst types_2 = require(\"./types.cjs\");\nconst { addKey, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey } = transactions_1.actionCreators;\nclass Account2FA extends account_multisig_1.AccountMultisig {\n    /********************************\n    Account2FA has options object where you can provide callbacks for:\n    - sendCode: how to send the 2FA code in case you don't use NEAR Contract Helper\n    - getCode: how to get code from user (use this to provide custom UI/UX for prompt of 2FA code)\n    - onResult: the tx result after it's been confirmed by NEAR Contract Helper\n    ********************************/\n    sendCode;\n    getCode;\n    verifyCode;\n    onConfirmResult;\n    helperUrl = 'https://helper.testnet.near.org';\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    /**\n     * Sign a transaction to preform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     *\n     * @param options Options for the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransaction({ receiverId, actions }) {\n        await super.signAndSendTransaction({ receiverId, actions });\n        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n        await this.sendCode();\n        const result = await this.promptAndVerify();\n        if (this.onConfirmResult) {\n            await this.onConfirmResult(result);\n        }\n        return result;\n    }\n    // default helpers for CH deployments of multisig\n    /**\n     * Deploy a multisig contract with 2FA and handle the deployment process.\n     * @param contractBytes - The bytecode of the multisig contract.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deployment.\n     */\n    async deployMultisig(contractBytes) {\n        const { accountId } = this;\n        const seedOrLedgerKey = (await this.getRecoveryMethods()).data\n            // @ts-ignore\n            .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n            .map((rm) => rm.publicKey);\n        const fak2lak = (await this.getAccessKeys())\n            .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n            .map((ak) => ak.public_key)\n            .map(toPK);\n        // @ts-ignore\n        const confirmOnlyKey = toPK((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n        const actions = [\n            ...fak2lak.map((pk) => deleteKey(pk)),\n            ...fak2lak.map((pk) => addKey(pk, functionCallAccessKey(accountId, constants_1.MULTISIG_CHANGE_METHODS, null))),\n            addKey(confirmOnlyKey, functionCallAccessKey(accountId, constants_1.MULTISIG_CONFIRM_METHODS, null)),\n            deployContract(contractBytes),\n        ];\n        const newFunctionCallActionBatch = actions.concat(functionCall('new', newArgs, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT));\n        utils_1.Logger.log('deploying multisig contract for', accountId);\n        const { stateStatus: multisigStateStatus } = await this.checkMultisigCodeAndStateStatus(contractBytes);\n        switch (multisigStateStatus) {\n            case types_2.MultisigStateStatus.STATE_NOT_INITIALIZED:\n                return await super.signAndSendTransactionWithAccount(accountId, newFunctionCallActionBatch);\n            case types_2.MultisigStateStatus.VALID_STATE:\n                return await super.signAndSendTransactionWithAccount(accountId, actions);\n            case types_2.MultisigStateStatus.INVALID_STATE:\n                throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState');\n            default:\n                throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n        }\n    }\n    /**\n     * Disable 2FA with the option to clean up contract state.\n     * @param options Options for disabling 2FA.\n     * @param options.contractBytes The bytecode of the contract to deploy.\n     * @param options.cleanupContractBytes The bytecode of the cleanup contract (optional).\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    async disableWithFAK({ contractBytes, cleanupContractBytes }) {\n        let cleanupActions = [];\n        if (cleanupContractBytes) {\n            await this.deleteAllRequests().catch(e => e);\n            cleanupActions = await this.get2faDisableCleanupActions(cleanupContractBytes);\n        }\n        const keyConversionActions = await this.get2faDisableKeyConversionActions();\n        const actions = [\n            ...cleanupActions,\n            ...keyConversionActions,\n            deployContract(contractBytes)\n        ];\n        const accessKeyInfo = await this.findAccessKey(this.accountId, actions);\n        if (accessKeyInfo && accessKeyInfo.accessKey && accessKeyInfo.accessKey.permission !== 'FullAccess') {\n            throw new types_1.TypedError('No full access key found in keystore. Unable to bypass multisig', 'NoFAKFound');\n        }\n        return this.signAndSendTransactionWithAccount(this.accountId, actions);\n    }\n    /**\n     * Retrieves cleanup actions for disabling 2FA.\n     * @param cleanupContractBytes - The bytecode of the cleanup contract.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of cleanup actions.\n     */\n    async get2faDisableCleanupActions(cleanupContractBytes) {\n        const currentAccountState = await this.viewState('').catch(error => {\n            const cause = error.cause && error.cause.name;\n            if (cause == 'NO_CONTRACT_CODE') {\n                return [];\n            }\n            throw cause == 'TOO_LARGE_CONTRACT_STATE'\n                ? new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState')\n                : error;\n        });\n        const currentAccountStateKeys = currentAccountState.map(({ key }) => key.toString('base64'));\n        return currentAccountState.length ? [\n            deployContract(cleanupContractBytes),\n            functionCall('clean', { keys: currentAccountStateKeys }, constants_1.MULTISIG_GAS, 0n)\n        ] : [];\n    }\n    /**\n     * Retrieves key conversion actions for disabling 2FA.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of key conversion actions.\n     */\n    async get2faDisableKeyConversionActions() {\n        const { accountId } = this;\n        const accessKeys = await this.getAccessKeys();\n        const lak2fak = accessKeys\n            .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n            .filter(({ access_key }) => {\n            const perm = access_key.permission.FunctionCall;\n            return perm.receiver_id === accountId &&\n                perm.method_names.length === 4 &&\n                perm.method_names.includes('add_request_and_confirm');\n        });\n        // @ts-ignore\n        const confirmOnlyKey = crypto_1.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        return [\n            deleteKey(confirmOnlyKey),\n            ...lak2fak.map(({ public_key }) => deleteKey(crypto_1.PublicKey.from(public_key))),\n            ...lak2fak.map(({ public_key }) => addKey(crypto_1.PublicKey.from(public_key), fullAccessKey()))\n        ];\n    }\n    /**\n     * This method converts LAKs back to FAKs, clears state and deploys an 'empty' contract (contractBytes param)\n     * @param [contractBytes]{@link https://github.com/near/near-wallet/blob/master/packages/frontend/src/wasm/main.wasm?raw=true}\n     * @param [cleanupContractBytes]{@link https://github.com/near/core-contracts/blob/master/state-manipulation/res/state_cleanup.wasm?raw=true}\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    async disable(contractBytes, cleanupContractBytes) {\n        const { stateStatus } = await this.checkMultisigCodeAndStateStatus();\n        if (stateStatus !== types_2.MultisigStateStatus.VALID_STATE && stateStatus !== types_2.MultisigStateStatus.STATE_NOT_INITIALIZED) {\n            throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n        }\n        let deleteAllRequestsError;\n        await this.deleteAllRequests().catch(e => deleteAllRequestsError = e);\n        const cleanupActions = await this.get2faDisableCleanupActions(cleanupContractBytes).catch(e => {\n            if (e.type === 'ContractHasExistingState') {\n                throw deleteAllRequestsError || e;\n            }\n            throw e;\n        });\n        const actions = [\n            ...cleanupActions,\n            ...(await this.get2faDisableKeyConversionActions()),\n            deployContract(contractBytes),\n        ];\n        utils_1.Logger.log('disabling 2fa for', this.accountId);\n        return await this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions\n        });\n    }\n    /**\n     * Default implementation for sending the 2FA code.\n     * @returns {Promise<string>} - A promise that resolves to the request ID.\n     */\n    async sendCodeDefault() {\n        const { accountId } = this;\n        const { requestId } = this.getRequest();\n        const method = await this.get2faMethod();\n        await this.postSignedJson('/2fa/send', {\n            accountId,\n            method,\n            requestId,\n        });\n        return requestId;\n    }\n    async getCodeDefault() {\n        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n    }\n    /**\n     * Prompts the user to enter and verify the 2FA code.\n     * @returns {Promise<any>} - A promise that resolves to the verification result.\n     */\n    async promptAndVerify() {\n        const method = await this.get2faMethod();\n        const securityCode = await this.getCode(method);\n        try {\n            const result = await this.verifyCode(securityCode);\n            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n            return result;\n        }\n        catch (e) {\n            utils_1.Logger.warn('Error validating security code:', e);\n            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                return await this.promptAndVerify();\n            }\n            throw e;\n        }\n    }\n    /**\n     * Verify the 2FA code using the default method.\n     * @param securityCode - The security code to verify.\n     * @returns {Promise<any>} A promise that resolves to the verification result.\n     */\n    async verifyCodeDefault(securityCode) {\n        const { accountId } = this;\n        const request = this.getRequest();\n        if (!request) {\n            throw new Error('no request pending');\n        }\n        const { requestId } = request;\n        return await this.postSignedJson('/2fa/verify', {\n            accountId,\n            securityCode,\n            requestId\n        });\n    }\n    /**\n     * Retrieves recovery methods for the account.\n     * @returns {Promise<{ accountId: string, data: any }>} - A promise that resolves to recovery methods data.\n     */\n    async getRecoveryMethods() {\n        const { accountId } = this;\n        return {\n            accountId,\n            data: await this.postSignedJson('/account/recoveryMethods', { accountId })\n        };\n    }\n    /**\n     * Gets the 2FA method (kind and detail).\n     * @returns {Promise<{ kind: string, detail: string }>} A promise that resolves to the 2FA method.\n     */\n    async get2faMethod() {\n        let { data } = await this.getRecoveryMethods();\n        // @ts-ignore\n        if (data && data.length) {\n            // @ts-ignore\n            data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n        }\n        if (!data)\n            return null;\n        // @ts-ignore\n        const { kind, detail } = data;\n        return { kind, detail };\n    }\n    /**\n    * Generates a signature for the latest finalized block.\n    * @returns {Promise<{ blockNumber: string, blockNumberSignature: string }>} - A promise that resolves to the signature information.\n    */\n    async signatureFor() {\n        const { accountId } = this;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockNumber = block.header.height.toString();\n        const signed = await this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n        const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n        return { blockNumber, blockNumberSignature };\n    }\n    /**\n    * Sends a signed JSON request to a specified path.\n    * @param path - The path for the request.\n    * @param body - The request body.\n    * @returns {Promise<any>} - A promise that resolves to the response from the helper.\n    */\n    async postSignedJson(path, body) {\n        return await fetch(this.helperUrl + path, {\n            body: JSON.stringify({\n                ...body,\n                ...(await this.signatureFor()),\n            }),\n            method: 'POST',\n        });\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => crypto_1.PublicKey.from(pk);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    masterAccount;\n    initialBalance;\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    connection;\n    helperUrl;\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await fetch(`${this.helperUrl}/account`, {\n            body: JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }),\n            method: 'POST',\n        });\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signer = void 0;\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySigner = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst keystores_1 = require(\"@near-js/keystores\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst signer_1 = require(\"./signer.cjs\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    keyStore;\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static async fromKeyPair(networkId, accountId, keyPair) {\n        const keyStore = new keystores_1.InMemoryKeyStore();\n        await keyStore.setKey(networkId, accountId, keyPair);\n        return new InMemorySigner(keyStore);\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    async createKey(accountId, networkId, keyType) {\n        const keyPair = keyType === crypto_1.KeyType.SECP256K1 ? crypto_1.KeyPair.fromRandom('secp256k1') : crypto_1.KeyPair.fromRandom('ed25519');\n        await this.keyStore.setKey(networkId, accountId, keyPair);\n        return keyPair.getPublicKey();\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    async getPublicKey(accountId, networkId) {\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            return null;\n        }\n        return keyPair.getPublicKey();\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    async signMessage(message, accountId, networkId) {\n        const hash = new Uint8Array((0, sha256_1.sha256)(message));\n        if (!accountId) {\n            throw new Error('InMemorySigner requires provided account id');\n        }\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            throw new Error(`Key for ${accountId} not found in ${networkId}`);\n        }\n        return keyPair.sign(hash);\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signer = exports.InMemorySigner = void 0;\nvar in_memory_signer_1 = require(\"./in_memory_signer.cjs\");\nObject.defineProperty(exports, \"InMemorySigner\", { enumerable: true, get: function () { return in_memory_signer_1.InMemorySigner; } });\nvar signer_1 = require(\"./signer.cjs\");\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signer_1.Signer; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst signers_1 = require(\"@near-js/signers\");\nconst providers_1 = require(\"@near-js/providers\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider({ ...config.args });\n        case 'FailoverRpcProvider': {\n            const providers = (config?.args || []).map((arg) => new providers_1.JsonRpcProvider(arg));\n            return new providers_1.FailoverRpcProvider(providers);\n        }\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signers_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    networkId;\n    provider;\n    signer;\n    jsvmAccountId;\n    constructor(networkId, provider, signer, jsvmAccountId) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n        this.jsvmAccountId = jsvmAccountId;\n    }\n    getConnection() {\n        return this;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer, config.jsvmAccountId);\n    }\n}\nexports.Connection = Connection;\n", "/**\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n * recently used items while discarding least recently used items when its limit\n * is reached.\n *\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n * See README.md for details.\n *\n * Illustration of the design:\n *\n *       entry             entry             entry             entry\n *       ______            ______            ______            ______\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\n *      |  A   |          |  B   |          |  C   |          |  D   |\n *      |______| <= older.|______| <= older.|______| <= older.|______|\n *\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n */\n!function(g,f){\n  if (typeof exports == 'object' && typeof module != \"undefined\") {\n    f(exports)\n  } else if (typeof define == 'function' && define.amd) {\n    define([\"exports\"], f)\n  } else {\n    f((g = g || self)[\"lru_map\"] = (g[\"lru_map\"] || {}))\n  }\n}(this, function(exports) {\n\nconst NEWER = Symbol('newer');\nconst OLDER = Symbol('older');\n\nclass LRUMap {\n  constructor(limit, entries) {\n    if (typeof limit !== 'number') {\n      // called as (entries)\n      entries = limit;\n      limit = 0;\n    }\n\n    this.size = 0;\n    this.limit = limit;\n    this.oldest = this.newest = undefined;\n    this._keymap = new Map();\n\n    if (entries) {\n      this.assign(entries);\n      if (limit < 1) {\n        this.limit = this.size;\n      }\n    }\n  }\n\n  _markEntryAsUsed(entry) {\n    if (entry === this.newest) {\n      // Already the most recenlty used entry, so no need to update the list\n      return;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry[NEWER]) {\n      if (entry === this.oldest) {\n        this.oldest = entry[NEWER];\n      }\n      entry[NEWER][OLDER] = entry[OLDER]; // C <-- E.\n    }\n    if (entry[OLDER]) {\n      entry[OLDER][NEWER] = entry[NEWER]; // C. --> E\n    }\n    entry[NEWER] = undefined; // D --x\n    entry[OLDER] = this.newest; // D. --> E\n    if (this.newest) {\n      this.newest[NEWER] = entry; // E. <-- D\n    }\n    this.newest = entry;\n  }\n\n  assign(entries) {\n    let entry, limit = this.limit || Number.MAX_VALUE;\n    this._keymap.clear();\n    let it = entries[Symbol.iterator]();\n    for (let itv = it.next(); !itv.done; itv = it.next()) {\n      let e = new Entry(itv.value[0], itv.value[1]);\n      this._keymap.set(e.key, e);\n      if (!entry) {\n        this.oldest = e;\n      } else {\n        entry[NEWER] = e;\n        e[OLDER] = entry;\n      }\n      entry = e;\n      if (limit-- == 0) {\n        throw new Error('overflow');\n      }\n    }\n    this.newest = entry;\n    this.size = this._keymap.size;\n  }\n\n  get(key) {\n    // First, find our cache entry\n    var entry = this._keymap.get(key);\n    if (!entry) return; // Not cached. Sorry.\n    // As <key> was found in the cache, register it as being requested recently\n    this._markEntryAsUsed(entry);\n    return entry.value;\n  }\n\n  set(key, value) {\n    var entry = this._keymap.get(key);\n\n    if (entry) {\n      // update existing\n      entry.value = value;\n      this._markEntryAsUsed(entry);\n      return this;\n    }\n\n    // new entry\n    this._keymap.set(key, (entry = new Entry(key, value)));\n\n    if (this.newest) {\n      // link previous tail to the new tail (entry)\n      this.newest[NEWER] = entry;\n      entry[OLDER] = this.newest;\n    } else {\n      // we're first in -- yay\n      this.oldest = entry;\n    }\n\n    // add new entry to the end of the linked list -- it's now the freshest entry.\n    this.newest = entry;\n    ++this.size;\n    if (this.size > this.limit) {\n      // we hit the limit -- remove the head\n      this.shift();\n    }\n\n    return this;\n  }\n\n  shift() {\n    // todo: handle special case when limit == 1\n    var entry = this.oldest;\n    if (entry) {\n      if (this.oldest[NEWER]) {\n        // advance the list\n        this.oldest = this.oldest[NEWER];\n        this.oldest[OLDER] = undefined;\n      } else {\n        // the cache is exhausted\n        this.oldest = undefined;\n        this.newest = undefined;\n      }\n      // Remove last strong reference to <entry> and remove links from the purged\n      // entry being returned:\n      entry[NEWER] = entry[OLDER] = undefined;\n      this._keymap.delete(entry.key);\n      --this.size;\n      return [entry.key, entry.value];\n    }\n  }\n\n  // -------------------------------------------------------------------------------------\n  // Following code (until end of class definition) is optional and can be removed without\n  // breaking the core functionality.\n\n  find(key) {\n    let e = this._keymap.get(key);\n    return e ? e.value : undefined;\n  }\n\n  has(key) {\n    return this._keymap.has(key);\n  }\n\n  delete(key) {\n    var entry = this._keymap.get(key);\n    if (!entry) return;\n    this._keymap.delete(entry.key);\n    if (entry[NEWER] && entry[OLDER]) {\n      // relink the older entry with the newer entry\n      entry[OLDER][NEWER] = entry[NEWER];\n      entry[NEWER][OLDER] = entry[OLDER];\n    } else if (entry[NEWER]) {\n      // remove the link to us\n      entry[NEWER][OLDER] = undefined;\n      // link the newer entry to head\n      this.oldest = entry[NEWER];\n    } else if (entry[OLDER]) {\n      // remove the link to us\n      entry[OLDER][NEWER] = undefined;\n      // link the newer entry to head\n      this.newest = entry[OLDER];\n    } else {// if(entry[OLDER] === undefined && entry.newer === undefined) {\n      this.oldest = this.newest = undefined;\n    }\n\n    this.size--;\n    return entry.value;\n  }\n\n  clear() {\n    // Not clearing links should be safe, as we don't expose live links to user\n    this.oldest = this.newest = undefined;\n    this.size = 0;\n    this._keymap.clear();\n  }\n\n  keys() {\n    return new KeyIterator(this.oldest);\n  }\n\n  values() {\n    return new ValueIterator(this.oldest);\n  }\n\n  entries() {\n    return this;\n  }\n\n  [Symbol.iterator]() {\n    return new EntryIterator(this.oldest);\n  }\n\n  forEach(fun, thisObj) {\n    if (typeof thisObj !== 'object') {\n      thisObj = this;\n    }\n    let entry = this.oldest;\n    while (entry) {\n      fun.call(thisObj, entry.value, entry.key, this);\n      entry = entry[NEWER];\n    }\n  }\n\n  /** Returns a JSON (array) representation */\n  toJSON() {\n    var s = new Array(this.size), i = 0, entry = this.oldest;\n    while (entry) {\n      s[i++] = { key: entry.key, value: entry.value };\n      entry = entry[NEWER];\n    }\n    return s;\n  }\n\n  /** Returns a String representation */\n  toString() {\n    var s = '', entry = this.oldest;\n    while (entry) {\n      s += String(entry.key)+':'+entry.value;\n      entry = entry[NEWER];\n      if (entry) {\n        s += ' < ';\n      }\n    }\n    return s;\n  }\n}\n\nexports.LRUMap = LRUMap\n\nfunction Entry(key, value) {\n  this.key = key;\n  this.value = value;\n  this[NEWER] = undefined;\n  this[OLDER] = undefined;\n}\n\n\nfunction EntryIterator(oldestEntry) { this.entry = oldestEntry; }\nEntryIterator.prototype[Symbol.iterator] = function() { return this; }\nEntryIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: [ent.key, ent.value] };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\n\nfunction KeyIterator(oldestEntry) { this.entry = oldestEntry; }\nKeyIterator.prototype[Symbol.iterator] = function() { return this; }\nKeyIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: ent.key };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\nfunction ValueIterator(oldestEntry) { this.entry = oldestEntry; }\nValueIterator.prototype[Symbol.iterator] = function() { return this; }\nValueIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: ent.value };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst lru_map_1 = require(\"lru_map\");\nclass Storage {\n    cache;\n    static MAX_ELEMENTS = 100;\n    // map block hash to block height\n    blockHeights;\n    constructor(options = { max: Storage.MAX_ELEMENTS }) {\n        this.cache = new lru_map_1.LRUMap(options.max);\n        this.blockHeights = new Map();\n    }\n    load(blockRef) {\n        const noBlockId = !('blockId' in blockRef);\n        if (noBlockId)\n            return undefined;\n        let blockId = blockRef.blockId;\n        // block hash is passed, so get its corresponding block height\n        if (blockId.toString().length == 44) {\n            blockId = this.blockHeights.get(blockId.toString());\n        }\n        // get cached values for the given block height\n        return this.cache.get(blockId);\n    }\n    save(blockHash, { blockHeight, blockTimestamp, contractCode, contractState }) {\n        this.blockHeights.set(blockHash, blockHeight);\n        this.cache.set(blockHeight, { blockHeight, blockTimestamp, contractCode, contractState });\n    }\n}\nexports.Storage = Storage;\n", "/**\n * Internal assertion helpers.\n * @module\n */\n\n/** Asserts something is positive integer. */\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Hash interface. */\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Asserts something is hash */\nfunction ahash(h: Hash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, abytes, ahash, aexists, aoutput };\n", "/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n// Cast array to view\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): void {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('utf8ToBytes expected string, got ' + typeof str);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash function */\nexport type CHash = ReturnType<typeof wrapConstructor>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof wrapConstructorWithOpts>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof wrapXOFConstructorWithOpts>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.js';\nimport { type Input, Hash, createView, toBytes } from './utils.js';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.js';\nimport { type CHash, rotr, wrapConstructor } from './utils.js';\n\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    SHA256_W.fill(0);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n  protected A = 0xc1059ed8 | 0;\n  protected B = 0x367cd507 | 0;\n  protected C = 0x3070dd17 | 0;\n  protected D = 0xf70e5939 | 0;\n  protected E = 0xffc00b31 | 0;\n  protected F = 0x68581511 | 0;\n  protected G = 0x64f98fa7 | 0;\n  protected H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/** SHA2-256 hash function */\nexport const sha256: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Runtime = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst notImplemented = (name) => () => {\n    throw new Error('method not implemented: ' + name);\n};\nconst prohibitedInView = (name) => () => {\n    throw new Error('method not available for view calls: ' + name);\n};\nclass Runtime {\n    context;\n    wasm;\n    memory;\n    registers;\n    logs;\n    result;\n    constructor({ contractCode, ...context }) {\n        this.context = context;\n        this.wasm = this.prepareWASM(Buffer.from(contractCode, 'base64'));\n        this.memory = new WebAssembly.Memory({ initial: 1024, maximum: 2048 });\n        this.registers = {};\n        this.logs = [];\n        this.result = Buffer.from([]);\n    }\n    readUTF16CStr(ptr) {\n        const arr = [];\n        const mem = new Uint16Array(this.memory.buffer);\n        let key = Number(ptr) / 2;\n        while (mem[key] != 0) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(Uint16Array.from(arr).buffer).toString('ucs2');\n    }\n    readUTF8CStr(len, ptr) {\n        const arr = [];\n        const mem = new Uint8Array(this.memory.buffer);\n        let key = Number(ptr);\n        for (let i = 0; i < len && mem[key] != 0; i++) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(arr).toString('utf8');\n    }\n    storageRead(keyLen, keyPtr) {\n        const storageKey = Buffer.from(new Uint8Array(this.memory.buffer, Number(keyPtr), Number(keyLen)));\n        const stateVal = this.context.contractState.filter((obj) => Buffer.compare(obj.key, storageKey) === 0).map((obj) => obj.value);\n        if (stateVal.length === 0)\n            return null;\n        return stateVal.length > 1 ? stateVal : stateVal[0];\n    }\n    prepareWASM(input) {\n        const parts = [];\n        const magic = input.subarray(0, 4);\n        if (magic.toString('utf8') !== '\\0asm') {\n            throw new Error('Invalid magic number');\n        }\n        const version = input.readUInt32LE(4);\n        if (version != 1) {\n            throw new Error('Invalid version: ' + version);\n        }\n        let offset = 8;\n        parts.push(input.subarray(0, offset));\n        function decodeLEB128() {\n            let result = 0;\n            let shift = 0;\n            let byte;\n            do {\n                byte = input[offset++];\n                result |= (byte & 0x7f) << shift;\n                shift += 7;\n            } while (byte & 0x80);\n            return result;\n        }\n        function decodeLimits() {\n            const flags = input[offset++];\n            const hasMax = flags & 0x1;\n            const initial = decodeLEB128();\n            const max = hasMax ? decodeLEB128() : null;\n            return { initial, max };\n        }\n        function decodeString() {\n            const length = decodeLEB128();\n            const result = input.subarray(offset, offset + length);\n            offset += length;\n            return result.toString('utf8');\n        }\n        function encodeLEB128(value) {\n            const result = [];\n            do {\n                let byte = value & 0x7f;\n                value >>= 7;\n                if (value !== 0) {\n                    byte |= 0x80;\n                }\n                result.push(byte);\n            } while (value !== 0);\n            return Buffer.from(result);\n        }\n        function encodeString(value) {\n            const result = Buffer.from(value, 'utf8');\n            return Buffer.concat([encodeLEB128(result.length), result]);\n        }\n        do {\n            const sectionStart = offset;\n            const sectionId = input.readUInt8(offset);\n            offset++;\n            const sectionSize = decodeLEB128();\n            const sectionEnd = offset + sectionSize;\n            if (sectionId == 5) {\n                // Memory section\n                // Make sure it's empty and only imported memory is used\n                parts.push(Buffer.from([5, 1, 0]));\n            }\n            else if (sectionId == 2) {\n                // Import section\n                const sectionParts = [];\n                const numImports = decodeLEB128();\n                for (let i = 0; i < numImports; i++) {\n                    const importStart = offset;\n                    decodeString();\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    let skipImport = false;\n                    switch (kind) {\n                        case 0:\n                            // Function import\n                            decodeLEB128(); // index\n                            break;\n                        case 1:\n                            // Table import\n                            offset++; // type\n                            decodeLimits();\n                            break;\n                        case 2:\n                            // Memory import\n                            decodeLimits();\n                            // NOTE: existing memory import is removed (so no need to add it to sectionParts)\n                            skipImport = true;\n                            break;\n                        case 3:\n                            // Global import\n                            offset++; // type\n                            offset++; // mutability\n                            break;\n                        default:\n                            throw new Error('Invalid import kind: ' + kind);\n                    }\n                    if (!skipImport) {\n                        sectionParts.push(input.subarray(importStart, offset));\n                    }\n                }\n                const importMemory = Buffer.concat([\n                    encodeString('env'),\n                    encodeString('memory'),\n                    Buffer.from([2]), // Memory import\n                    Buffer.from([0]),\n                    encodeLEB128(1),\n                ]);\n                sectionParts.push(importMemory);\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([2]), // Import section\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else if (sectionId == 7) {\n                // Export section\n                const sectionParts = [];\n                const numExports = decodeLEB128();\n                for (let i = 0; i < numExports; i++) {\n                    const exportStart = offset;\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    decodeLEB128();\n                    if (kind !== 2) {\n                        // Pass through all exports except memory\n                        sectionParts.push(input.subarray(exportStart, offset));\n                    }\n                }\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([7]), // Export section\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else {\n                parts.push(input.subarray(sectionStart, sectionEnd));\n            }\n            offset = sectionEnd;\n        } while (offset < input.length);\n        return Buffer.concat(parts);\n    }\n    // Host functions\n    getRegisterLength(registerId) {\n        return BigInt(this.registers[registerId.toString()] ? this.registers[registerId.toString()].length : Number.MAX_SAFE_INTEGER);\n    }\n    readFromRegister(registerId, ptr) {\n        const mem = new Uint8Array(this.memory.buffer);\n        mem.set(this.registers[registerId.toString()] || Buffer.from([]), Number(ptr));\n    }\n    getCurrentAccountId(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.contractId);\n    }\n    inputMethodArgs(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.methodArgs);\n    }\n    getBlockHeight() {\n        return BigInt(this.context.blockHeight);\n    }\n    getBlockTimestamp() {\n        return BigInt(this.context.blockTimestamp);\n    }\n    sha256(valueLen, valuePtr, registerId) {\n        const value = new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen));\n        this.registers[registerId.toString()] = (0, sha256_1.sha256)(value);\n    }\n    returnValue(valueLen, valuePtr) {\n        this.result = Buffer.from(new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen)));\n    }\n    panic(message) {\n        throw new Error('panic: ' + message);\n    }\n    abort(msg_ptr, filename_ptr, line, col) {\n        const msg = this.readUTF16CStr(msg_ptr);\n        const filename = this.readUTF16CStr(filename_ptr);\n        const message = `${msg} ${filename}:${line}:${col}`;\n        if (!msg || !filename) {\n            throw new Error('abort: ' + 'String encoding is bad UTF-16 sequence.');\n        }\n        throw new Error('abort: ' + message);\n    }\n    appendToLog(len, ptr) {\n        this.logs.push(this.readUTF8CStr(len, ptr));\n    }\n    readStorage(key_len, key_ptr, register_id) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return 0n;\n        }\n        this.registers[register_id] = result;\n        return 1n;\n    }\n    hasStorageKey(key_len, key_ptr) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return 0n;\n        }\n        return 1n;\n    }\n    getHostImports() {\n        return {\n            register_len: this.getRegisterLength.bind(this),\n            read_register: this.readFromRegister.bind(this),\n            current_account_id: this.getCurrentAccountId.bind(this),\n            input: this.inputMethodArgs.bind(this),\n            block_index: this.getBlockHeight.bind(this),\n            block_timestamp: this.getBlockTimestamp.bind(this),\n            sha256: this.sha256.bind(this),\n            value_return: this.returnValue.bind(this),\n            abort: this.abort.bind(this),\n            log_utf8: this.appendToLog.bind(this),\n            log_utf16: this.appendToLog.bind(this),\n            storage_read: this.readStorage.bind(this),\n            storage_has_key: this.hasStorageKey.bind(this),\n            panic: () => this.panic('explicit guest panic'),\n            panic_utf8: (len, ptr) => this.panic(this.readUTF8CStr(len, ptr)),\n            // Not implemented\n            epoch_height: notImplemented('epoch_height'),\n            storage_usage: notImplemented('storage_usage'),\n            account_balance: notImplemented('account_balance'),\n            account_locked_balance: notImplemented('account_locked_balance'),\n            random_seed: notImplemented('random_seed'),\n            ripemd160: notImplemented('ripemd160'),\n            keccak256: notImplemented('keccak256'),\n            keccak512: notImplemented('keccak512'),\n            ecrecover: notImplemented('ecrecover'),\n            validator_stake: notImplemented('validator_stake'),\n            validator_total_stake: notImplemented('validator_total_stake'),\n            // Prohibited\n            write_register: prohibitedInView('write_register'),\n            signer_account_id: prohibitedInView('signer_account_id'),\n            signer_account_pk: prohibitedInView('signer_account_pk'),\n            predecessor_account_id: prohibitedInView('predecessor_account_id'),\n            attached_deposit: prohibitedInView('attached_deposit'),\n            prepaid_gas: prohibitedInView('prepaid_gas'),\n            used_gas: prohibitedInView('used_gas'),\n            promise_create: prohibitedInView('promise_create'),\n            promise_then: prohibitedInView('promise_then'),\n            promise_and: prohibitedInView('promise_and'),\n            promise_batch_create: prohibitedInView('promise_batch_create'),\n            promise_batch_then: prohibitedInView('promise_batch_then'),\n            promise_batch_action_create_account: prohibitedInView('promise_batch_action_create_account'),\n            promise_batch_action_deploy_contract: prohibitedInView('promise_batch_action_deploy_contract'),\n            promise_batch_action_function_call: prohibitedInView('promise_batch_action_function_call'),\n            promise_batch_action_function_call_weight: prohibitedInView('promise_batch_action_function_call_weight'),\n            promise_batch_action_transfer: prohibitedInView('promise_batch_action_transfer'),\n            promise_batch_action_stake: prohibitedInView('promise_batch_action_stake'),\n            promise_batch_action_add_key_with_full_access: prohibitedInView('promise_batch_action_add_key_with_full_access'),\n            promise_batch_action_add_key_with_function_call: prohibitedInView('promise_batch_action_add_key_with_function_call'),\n            promise_batch_action_delete_key: prohibitedInView('promise_batch_action_delete_key'),\n            promise_batch_action_delete_account: prohibitedInView('promise_batch_action_delete_account'),\n            promise_results_count: prohibitedInView('promise_results_count'),\n            promise_result: prohibitedInView('promise_result'),\n            promise_return: prohibitedInView('promise_return'),\n            storage_write: prohibitedInView('storage_write'),\n            storage_remove: prohibitedInView('storage_remove'),\n        };\n    }\n    async execute(methodName) {\n        const module = await WebAssembly.compile(this.wasm);\n        const instance = await WebAssembly.instantiate(module, { env: { ...this.getHostImports(), memory: this.memory } });\n        const callMethod = instance.exports[methodName];\n        if (callMethod == undefined) {\n            throw new Error(`Contract method '${methodName}' does not exists in contract ${this.context.contractId} for block id ${this.context.blockHeight}`);\n        }\n        callMethod();\n        return {\n            result: this.result,\n            logs: this.logs\n        };\n    }\n}\nexports.Runtime = Runtime;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalViewExecution = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst storage_1 = require(\"./storage.cjs\");\nconst runtime_1 = require(\"./runtime.cjs\");\nconst utils_2 = require(\"../utils.cjs\");\nclass LocalViewExecution {\n    connection;\n    storage;\n    constructor(connection) {\n        this.connection = connection.getConnection();\n        this.storage = new storage_1.Storage();\n    }\n    async fetchContractCode(contractId, blockQuery) {\n        const result = await this.connection.provider.query({\n            request_type: 'view_code',\n            account_id: contractId,\n            ...blockQuery,\n        });\n        return result.code_base64;\n    }\n    async fetchContractState(contractId, blockQuery) {\n        return (0, utils_2.viewState)(this.connection, contractId, '', blockQuery);\n    }\n    async fetch(contractId, blockQuery) {\n        const block = await this.connection.provider.block(blockQuery);\n        const blockHash = block.header.hash;\n        const blockHeight = block.header.height;\n        const blockTimestamp = block.header.timestamp;\n        const contractCode = await this.fetchContractCode(contractId, blockQuery);\n        const contractState = await this.fetchContractState(contractId, blockQuery);\n        return {\n            blockHash,\n            blockHeight,\n            blockTimestamp,\n            contractCode,\n            contractState,\n        };\n    }\n    async loadOrFetch(contractId, blockQuery) {\n        const stored = this.storage.load(blockQuery);\n        if (stored) {\n            return stored;\n        }\n        const { blockHash, ...fetched } = await this.fetch(contractId, blockQuery);\n        this.storage.save(blockHash, fetched);\n        return fetched;\n    }\n    /**\n     * Calls a view function on a contract, fetching the contract code and state if needed.\n     * @param options Options for calling the view function.\n     * @param options.contractId The contract account ID.\n     * @param options.methodName The name of the view function to call.\n     * @param options.args The arguments to pass to the view function.\n     * @param options.blockQuery The block query options.\n     * @returns {Promise<any>} - A promise that resolves to the result of the view function.\n     */\n    async viewFunction({ contractId, methodName, args = {}, blockQuery = { finality: 'optimistic' } }) {\n        const methodArgs = JSON.stringify(args);\n        const { contractCode, contractState, blockHeight, blockTimestamp } = await this.loadOrFetch(contractId, blockQuery);\n        const runtime = new runtime_1.Runtime({ contractId, contractCode, contractState, blockHeight, blockTimestamp, methodArgs });\n        const { result, logs } = await runtime.execute(methodName);\n        if (logs) {\n            (0, utils_1.printTxOutcomeLogs)({ contractId, logs });\n        }\n        return JSON.parse(Buffer.from(result).toString());\n    }\n}\nexports.LocalViewExecution = LocalViewExecution;\n", "\"use strict\"\nfunction isProperty(str) {\n  return /^[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(str)\n}\nmodule.exports = isProperty", "var isProperty = require('is-property')\n\nvar gen = function(obj, prop) {\n  return isProperty(prop) ? obj+'.'+prop : obj+'['+JSON.stringify(prop)+']'\n}\n\ngen.valid = isProperty\ngen.property = function (prop) {\n return isProperty(prop) ? prop : JSON.stringify(prop)\n}\n\nmodule.exports = gen\n", "var util = require('util')\nvar isProperty = require('is-property')\n\nvar INDENT_START = /[\\{\\[]/\nvar INDENT_END = /[\\}\\]]/\n\n// from https://mathiasbynens.be/notes/reserved-keywords\nvar RESERVED = [\n  'do',\n  'if',\n  'in',\n  'for',\n  'let',\n  'new',\n  'try',\n  'var',\n  'case',\n  'else',\n  'enum',\n  'eval',\n  'null',\n  'this',\n  'true',\n  'void',\n  'with',\n  'await',\n  'break',\n  'catch',\n  'class',\n  'const',\n  'false',\n  'super',\n  'throw',\n  'while',\n  'yield',\n  'delete',\n  'export',\n  'import',\n  'public',\n  'return',\n  'static',\n  'switch',\n  'typeof',\n  'default',\n  'extends',\n  'finally',\n  'package',\n  'private',\n  'continue',\n  'debugger',\n  'function',\n  'arguments',\n  'interface',\n  'protected',\n  'implements',\n  'instanceof',\n  'NaN',\n  'undefined'\n]\n\nvar RESERVED_MAP = {}\n\nfor (var i = 0; i < RESERVED.length; i++) {\n  RESERVED_MAP[RESERVED[i]] = true\n}\n\nvar isVariable = function (name) {\n  return isProperty(name) && !RESERVED_MAP.hasOwnProperty(name)\n}\n\nvar formats = {\n  s: function(s) {\n    return '' + s\n  },\n  d: function(d) {\n    return '' + Number(d)\n  },\n  o: function(o) {\n    return JSON.stringify(o)\n  }\n}\n\nvar genfun = function() {\n  var lines = []\n  var indent = 0\n  var vars = {}\n\n  var push = function(str) {\n    var spaces = ''\n    while (spaces.length < indent*2) spaces += '  '\n    lines.push(spaces+str)\n  }\n\n  var pushLine = function(line) {\n    if (INDENT_END.test(line.trim()[0]) && INDENT_START.test(line[line.length-1])) {\n      indent--\n      push(line)\n      indent++\n      return\n    }\n    if (INDENT_START.test(line[line.length-1])) {\n      push(line)\n      indent++\n      return\n    }\n    if (INDENT_END.test(line.trim()[0])) {\n      indent--\n      push(line)\n      return\n    }\n\n    push(line)\n  }\n\n  var line = function(fmt) {\n    if (!fmt) return line\n\n    if (arguments.length === 1 && fmt.indexOf('\\n') > -1) {\n      var lines = fmt.trim().split('\\n')\n      for (var i = 0; i < lines.length; i++) {\n        pushLine(lines[i].trim())\n      }\n    } else {\n      pushLine(util.format.apply(util, arguments))\n    }\n\n    return line\n  }\n\n  line.scope = {}\n  line.formats = formats\n\n  line.sym = function(name) {\n    if (!name || !isVariable(name)) name = 'tmp'\n    if (!vars[name]) vars[name] = 0\n    return name + (vars[name]++ || '')\n  }\n\n  line.property = function(obj, name) {\n    if (arguments.length === 1) {\n      name = obj\n      obj = ''\n    }\n\n    name = name + ''\n\n    if (isProperty(name)) return (obj ? obj + '.' + name : name)\n    return obj ? obj + '[' + JSON.stringify(name) + ']' : JSON.stringify(name)\n  }\n\n  line.toString = function() {\n    return lines.join('\\n')\n  }\n\n  line.toFunction = function(scope) {\n    if (!scope) scope = {}\n\n    var src = 'return ('+line.toString()+')'\n\n    Object.keys(line.scope).forEach(function (key) {\n      if (!scope[key]) scope[key] = line.scope[key]\n    })\n\n    var keys = Object.keys(scope).map(function(key) {\n      return key\n    })\n\n    var vals = keys.map(function(key) {\n      return scope[key]\n    })\n\n    return Function.apply(null, keys.concat(src)).apply(null, vals)\n  }\n\n  if (arguments.length) line.apply(null, arguments)\n\n  return line\n}\n\ngenfun.formats = formats\nmodule.exports = genfun\n", "var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    for (const part of pointer) {\n      if (typeof part !== 'string' && typeof part !== 'number') {\n        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n      }\n    }\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object' || obj === null) return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n", "var reIpv4FirstPass = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/\n\nvar reSubnetString = /\\/\\d{1,3}(?=%|$)/\nvar reForwardSlash = /\\//\nvar reZone = /%.*$/\nvar reBadCharacters = /([^0-9a-f:/%])/i\nvar reBadAddress = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/i\n\nfunction validate4 (input) {\n  if (!(reIpv4FirstPass.test(input))) return false\n\n  var parts = input.split('.')\n\n  if (parts.length !== 4) return false\n\n  if (parts[0][0] === '0' && parts[0].length > 1) return false\n  if (parts[1][0] === '0' && parts[1].length > 1) return false\n  if (parts[2][0] === '0' && parts[2].length > 1) return false\n  if (parts[3][0] === '0' && parts[3].length > 1) return false\n\n  var n0 = Number(parts[0])\n  var n1 = Number(parts[1])\n  var n2 = Number(parts[2])\n  var n3 = Number(parts[3])\n\n  return (n0 >= 0 && n0 < 256 && n1 >= 0 && n1 < 256 && n2 >= 0 && n2 < 256 && n3 >= 0 && n3 < 256)\n}\n\nfunction validate6 (input) {\n  var withoutSubnet = input.replace(reSubnetString, '')\n  var hasSubnet = (input.length !== withoutSubnet.length)\n\n  // FIXME: this should probably be an option in the future\n  if (hasSubnet) return false\n\n  if (!hasSubnet) {\n    if (reForwardSlash.test(input)) return false\n  }\n\n  var withoutZone = withoutSubnet.replace(reZone, '')\n  var lastPartSeparator = withoutZone.lastIndexOf(':')\n\n  if (lastPartSeparator === -1) return false\n\n  var lastPart = withoutZone.substring(lastPartSeparator + 1)\n  var hasV4Part = validate4(lastPart)\n  var address = (hasV4Part ? withoutZone.substring(0, lastPartSeparator + 1) + '1234:5678' : withoutZone)\n\n  if (reBadCharacters.test(address)) return false\n  if (reBadAddress.test(address)) return false\n\n  var halves = address.split('::')\n\n  if (halves.length > 2) return false\n\n  if (halves.length === 2) {\n    var first = (halves[0] === '' ? [] : halves[0].split(':'))\n    var last = (halves[1] === '' ? [] : halves[1].split(':'))\n    var remainingLength = 8 - (first.length + last.length)\n\n    if (remainingLength <= 0) return false\n  } else {\n    if (address.split(':').length !== 8) return false\n  }\n\n  return true\n}\n\nfunction validate (input) {\n  return validate4(input) || validate6(input)\n}\n\nmodule.exports = function validator (options) {\n  if (!options) options = {}\n\n  if (options.version === 4) return validate4\n  if (options.version === 6) return validate6\n  if (options.version == null) return validate\n\n  throw new Error('Unknown version: ' + options.version)\n}\n\nmodule.exports['__all_regexes__'] = [\n  reIpv4FirstPass,\n  reSubnetString,\n  reForwardSlash,\n  reZone,\n  reBadCharacters,\n  reBadAddress\n]\n", "var createIpValidator = require('is-my-ip-valid')\n\nvar reEmailWhitespace = /\\s/\nvar reHostnameFirstPass = /^[a-zA-Z0-9.-]+$/\nvar reHostnamePart = /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/\nvar rePhoneFirstPass = /^\\+[0-9][0-9 ]{5,27}[0-9]$/\nvar rePhoneDoubleSpace = / {2}/\nvar rePhoneGlobalSpace = / /g\n\nexports['date-time'] = /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}[tT ]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+|)([zZ]|[+-]\\d{2}:\\d{2})$/\nexports['date'] = /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}$/\nexports['time'] = /^\\d{2}:\\d{2}:\\d{2}$/\nexports['email'] = function (input) { return (input.indexOf('@') !== -1) && (!reEmailWhitespace.test(input)) }\nexports['ip-address'] = exports['ipv4'] = createIpValidator({ version: 4 })\nexports['ipv6'] = createIpValidator({ version: 6 })\nexports['uri'] = /^[a-zA-Z][a-zA-Z0-9+\\-.]*:[^\\s]*$/\nexports['color'] = /(#?([0-9A-Fa-f]{3,6})\\b)|(aqua)|(black)|(blue)|(fuchsia)|(gray)|(green)|(lime)|(maroon)|(navy)|(olive)|(orange)|(purple)|(red)|(silver)|(teal)|(white)|(yellow)|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\))/\nexports['hostname'] = function (input) {\n  if (!(reHostnameFirstPass.test(input))) return false\n\n  var parts = input.split('.')\n\n  for (var i = 0; i < parts.length; i++) {\n    if (!(reHostnamePart.test(parts[i]))) return false\n  }\n\n  return true\n}\nexports['alpha'] = /^[a-zA-Z]+$/\nexports['alphanumeric'] = /^[a-zA-Z0-9]+$/\nexports['style'] = /.:\\s*[^;]/g\nexports['phone'] = function (input) {\n  if (!(rePhoneFirstPass.test(input))) return false\n  if (rePhoneDoubleSpace.test(input)) return false\n\n  var digits = input.substring(1).replace(rePhoneGlobalSpace, '').length\n\n  return (digits >= 7 && digits <= 15)\n}\nexports['utc-millisec'] = /^[0-9]{1,15}\\.?[0-9]{0,15}$/\n", "var genobj = require('generate-object-property')\nvar genfun = require('generate-function')\nvar jsonpointer = require('jsonpointer')\nvar xtend = require('xtend')\nvar formats = require('./formats')\n\nvar get = function(obj, additionalSchemas, ptr) {\n\n  var visit = function(sub) {\n    if (sub && sub.id === ptr) return sub\n    if (typeof sub !== 'object' || !sub) return null\n    return Object.keys(sub).reduce(function(res, k) {\n      return res || visit(sub[k])\n    }, null)\n  }\n\n  var res = visit(obj)\n  if (res) return res\n\n  ptr = ptr.replace(/^#/, '')\n  ptr = ptr.replace(/\\/$/, '')\n\n  try {\n    return jsonpointer.get(obj, decodeURI(ptr))\n  } catch (err) {\n    var end = ptr.indexOf('#')\n    var other\n    // external reference\n    if (end !== 0) {\n      // fragment doesn't exist.\n      if (end === -1) {\n        other = additionalSchemas[ptr]\n      } else {\n        var ext = ptr.slice(0, end)\n        other = additionalSchemas[ext]\n        var fragment = ptr.slice(end).replace(/^#/, '')\n        try {\n          return jsonpointer.get(other, fragment)\n        } catch (err) {}\n      }\n    } else {\n      other = additionalSchemas[ptr]\n    }\n    return other || null\n  }\n}\n\nvar types = {}\n\ntypes.any = function() {\n  return 'true'\n}\n\ntypes.null = function(name) {\n  return name+' === null'\n}\n\ntypes.boolean = function(name) {\n  return 'typeof '+name+' === \"boolean\"'\n}\n\ntypes.array = function(name) {\n  return 'Array.isArray('+name+')'\n}\n\ntypes.object = function(name) {\n  return 'typeof '+name+' === \"object\" && '+name+' && !Array.isArray('+name+')'\n}\n\ntypes.number = function(name) {\n  return 'typeof '+name+' === \"number\" && isFinite('+name+')'\n}\n\ntypes.integer = function(name) {\n  return 'typeof '+name+' === \"number\" && (Math.floor('+name+') === '+name+' || '+name+' > 9007199254740992 || '+name+' < -9007199254740992)'\n}\n\ntypes.string = function(name) {\n  return 'typeof '+name+' === \"string\"'\n}\n\nvar unique = function(array, len) {\n  len = Math.min(len === -1 ? array.length : len, array.length)\n  var list = []\n  for (var i = 0; i < len; i++) {\n    list.push(typeof array[i] === 'object' ? JSON.stringify(array[i]) : array[i])\n  }\n  for (var i = 1; i < list.length; i++) {\n    if (list.indexOf(list[i]) !== i) return false\n  }\n  return true\n}\n\nvar isMultipleOf = function(name, multipleOf) {\n  var res;\n  var factor = ((multipleOf | 0) !== multipleOf) ? Math.pow(10, multipleOf.toString().split('.').pop().length) : 1\n  if (factor > 1) {\n    var factorName = ((name | 0) !== name) ? Math.pow(10, name.toString().split('.').pop().length) : 1\n    if (factorName > factor) res = true\n    else res = Math.round(factor * name) % (factor * multipleOf)\n  }\n  else res = name % multipleOf;\n  return !res;\n}\n\nvar testLimitedRegex = function (r, s, maxLength) {\n  if (maxLength > -1 && s.length > maxLength) return true\n  return r.test(s)\n}\n\nvar compile = function(schema, cache, root, reporter, opts) {\n  var fmts = opts ? xtend(formats, opts.formats) : formats\n  var scope = {unique:unique, formats:fmts, isMultipleOf:isMultipleOf, testLimitedRegex:testLimitedRegex}\n  var verbose = opts ? !!opts.verbose : false;\n  var greedy = opts && opts.greedy !== undefined ?\n    opts.greedy : false;\n\n  var syms = {}\n  var allocated = []\n  var gensym = function(name) {\n    var res = name+(syms[name] = (syms[name] || 0)+1)\n    allocated.push(res)\n    return res\n  }\n\n  var formatName = function(field) {\n    var s = JSON.stringify(field)\n    try {\n      var pattern = /\\[([^\\[\\]\"]+)\\]/\n      while (pattern.test(s)) s = s.replace(pattern, replacer)\n      return s\n    } catch (_) {\n      return JSON.stringify(field)\n    }\n\n    function replacer (match, v) {\n      if (allocated.indexOf(v) === -1) throw new Error('Unreplaceable')\n      return '.\" + ' + v + ' + \"'\n    }\n  }\n\n  var reversePatterns = {}\n  var patterns = function(p) {\n    if (reversePatterns[p]) return reversePatterns[p]\n    var n = gensym('pattern')\n    scope[n] = new RegExp(p)\n    reversePatterns[p] = n\n    return n\n  }\n\n  var vars = ['i','j','k','l','m','n','o','p','q','r','s','t','u','v','x','y','z']\n  var genloop = function() {\n    var v = vars.shift()\n    vars.push(v+v[0])\n    allocated.push(v)\n    return v\n  }\n\n  var visit = function(name, node, reporter, filter, schemaPath) {\n    var properties = node.properties\n    var type = node.type\n    var tuple = false\n\n    if (Array.isArray(node.items)) { // tuple type\n      properties = {}\n      node.items.forEach(function(item, i) {\n        properties[i] = item\n      })\n      type = 'array'\n      tuple = true\n    }\n\n    var indent = 0\n    var error = function(msg, prop, value) {\n      validate('errors++')\n      if (reporter === true) {\n        validate('if (validate.errors === null) validate.errors = []')\n        if (verbose) {\n          validate(\n            'validate.errors.push({field:%s,message:%s,value:%s,type:%s,schemaPath:%s})',\n            formatName(prop || name),\n            JSON.stringify(msg),\n            value || name,\n            JSON.stringify(type),\n            JSON.stringify(schemaPath)\n          )\n        } else {\n          validate('validate.errors.push({field:%s,message:%s})', formatName(prop || name), JSON.stringify(msg))\n        }\n      }\n    }\n\n    if (node.required === true) {\n      indent++\n      validate('if (%s === undefined) {', name)\n      error('is required')\n      validate('} else {')\n    } else {\n      indent++\n      validate('if (%s !== undefined) {', name)\n    }\n\n    var valid = [].concat(type)\n      .map(function(t) {\n        if (t && !types.hasOwnProperty(t)) {\n          throw new Error('Unknown type: ' + t)\n        }\n\n        return types[t || 'any'](name)\n      })\n      .join(' || ') || 'true'\n\n    if (valid !== 'true') {\n      indent++\n      validate('if (!(%s)) {', valid)\n      error('is the wrong type')\n      validate('} else {')\n    }\n\n    if (tuple) {\n      if (node.additionalItems === false) {\n        validate('if (%s.length > %d) {', name, node.items.length)\n        error('has additional items')\n        validate('}')\n      } else if (node.additionalItems) {\n        var i = genloop()\n        validate('for (var %s = %d; %s < %s.length; %s++) {', i, node.items.length, i, name, i)\n        visit(name+'['+i+']', node.additionalItems, reporter, filter, schemaPath.concat('additionalItems'))\n        validate('}')\n      }\n    }\n\n    if (node.format && fmts[node.format]) {\n      if (type !== 'string' && formats[node.format]) validate('if (%s) {', types.string(name))\n      var n = gensym('format')\n      scope[n] = fmts[node.format]\n\n      if (typeof scope[n] === 'function') validate('if (!%s(%s)) {', n, name)\n      else validate('if (!testLimitedRegex(%s, %s, %d)) {', n, name, typeof node.maxLength === 'undefined' ? -1 : node.maxLength)\n      error('must be '+node.format+' format')\n      validate('}')\n      if (type !== 'string' && formats[node.format]) validate('}')\n    }\n\n    if (Array.isArray(node.required)) {\n      var n = gensym('missing')\n      validate('var %s = 0', n)\n      var checkRequired = function (req) {\n        var prop = genobj(name, req);\n        validate('if (%s === undefined) {', prop)\n        error('is required', prop)\n        validate('%s++', n)\n        validate('}')\n      }\n      validate('if ((%s)) {', type !== 'object' ? types.object(name) : 'true')\n      node.required.map(checkRequired)\n      validate('}');\n      if (!greedy) {\n        validate('if (%s === 0) {', n)\n        indent++\n      }\n    }\n\n    if (node.uniqueItems) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n      validate('if (!(unique(%s, %d))) {', name, node.maxItems || -1)\n      error('must be unique')\n      validate('}')\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.enum) {\n      var complex = node.enum.some(function(e) {\n        return typeof e === 'object'\n      })\n\n      var compare = complex ?\n        function(e) {\n          return 'JSON.stringify('+name+')'+' !== JSON.stringify('+JSON.stringify(e)+')'\n        } :\n        function(e) {\n          return name+' !== '+JSON.stringify(e)\n        }\n\n      validate('if (%s) {', node.enum.map(compare).join(' && ') || 'false')\n      error('must be an enum value')\n      validate('}')\n    }\n\n    if (node.dependencies) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      Object.keys(node.dependencies).forEach(function(key) {\n        var deps = node.dependencies[key]\n        if (typeof deps === 'string') deps = [deps]\n\n        var exists = function(k) {\n          return genobj(name, k) + ' !== undefined'\n        }\n\n        if (Array.isArray(deps)) {\n          validate('if (%s !== undefined && !(%s)) {', genobj(name, key), deps.map(exists).join(' && ') || 'true')\n          error('dependencies not set')\n          validate('}')\n        }\n        if (typeof deps === 'object') {\n          validate('if (%s !== undefined) {', genobj(name, key))\n          visit(name, deps, reporter, filter, schemaPath.concat(['dependencies', key]))\n          validate('}')\n        }\n      })\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.additionalProperties || node.additionalProperties === false) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      var i = genloop()\n      var keys = gensym('keys')\n\n      var toCompare = function(p) {\n        return keys+'['+i+'] !== '+JSON.stringify(p)\n      }\n\n      var toTest = function(p) {\n        return '!'+patterns(p)+'.test('+keys+'['+i+'])'\n      }\n\n      var additionalProp = Object.keys(properties || {}).map(toCompare)\n        .concat(Object.keys(node.patternProperties || {}).map(toTest))\n        .join(' && ') || 'true'\n\n      validate('var %s = Object.keys(%s)', keys, name)\n        ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)\n          ('if (%s) {', additionalProp)\n\n      if (node.additionalProperties === false) {\n        if (filter) validate('delete %s', name+'['+keys+'['+i+']]')\n        error('has additional properties', null, JSON.stringify(name+'.') + ' + ' + keys + '['+i+']')\n      } else {\n        visit(name+'['+keys+'['+i+']]', node.additionalProperties, reporter, filter, schemaPath.concat(['additionalProperties']))\n      }\n\n      validate\n          ('}')\n        ('}')\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.$ref) {\n      var sub = get(root, opts && opts.schemas || {}, node.$ref)\n      if (sub) {\n        var fn = cache[node.$ref]\n        if (!fn) {\n          cache[node.$ref] = function proxy(data) {\n            return fn(data)\n          }\n          fn = compile(sub, cache, root, false, opts)\n        }\n        var n = gensym('ref')\n        scope[n] = fn\n        validate('if (!(%s(%s))) {', n, name)\n        error('referenced schema does not match')\n        validate('}')\n      }\n    }\n\n    if (node.not) {\n      var prev = gensym('prev')\n      validate('var %s = errors', prev)\n      visit(name, node.not, false, filter, schemaPath.concat('not'))\n      validate('if (%s === errors) {', prev)\n      error('negative schema matches')\n      validate('} else {')\n        ('errors = %s', prev)\n      ('}')\n    }\n\n    if (node.items && !tuple) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n\n      var i = genloop()\n      validate('for (var %s = 0; %s < %s.length; %s++) {', i, i, name, i)\n      visit(name+'['+i+']', node.items, reporter, filter, schemaPath.concat('items'))\n      validate('}')\n\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.patternProperties) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n      var keys = gensym('keys')\n      var i = genloop()\n      validate\n        ('var %s = Object.keys(%s)', keys, name)\n        ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)\n\n      Object.keys(node.patternProperties).forEach(function(key) {\n        var p = patterns(key)\n        validate('if (%s.test(%s)) {', p, keys+'['+i+']')\n        visit(name+'['+keys+'['+i+']]', node.patternProperties[key], reporter, filter, schemaPath.concat(['patternProperties', key]))\n        validate('}')\n      })\n\n      validate('}')\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.pattern) {\n      var p = patterns(node.pattern)\n      if (type !== 'string') validate('if (%s) {', types.string(name))\n      validate('if (!(testLimitedRegex(%s, %s, %d))) {', p, name, typeof node.maxLength === 'undefined' ? -1 : node.maxLength)\n      error('pattern mismatch')\n      validate('}')\n      if (type !== 'string') validate('}')\n    }\n\n    if (node.allOf) {\n      node.allOf.forEach(function(sch, key) {\n        visit(name, sch, reporter, filter, schemaPath.concat(['allOf', key]))\n      })\n    }\n\n    if (node.anyOf && node.anyOf.length) {\n      var prev = gensym('prev')\n\n      node.anyOf.forEach(function(sch, i) {\n        if (i === 0) {\n          validate('var %s = errors', prev)\n        } else {\n          validate('if (errors !== %s) {', prev)\n            ('errors = %s', prev)\n        }\n        visit(name, sch, false, false, schemaPath)\n      })\n      node.anyOf.forEach(function(sch, i) {\n        if (i) validate('}')\n      })\n      validate('if (%s !== errors) {', prev)\n      error('no schemas match')\n      validate('}')\n    }\n\n    if (node.oneOf && node.oneOf.length) {\n      var prev = gensym('prev')\n      var passes = gensym('passes')\n\n      validate\n        ('var %s = errors', prev)\n        ('var %s = 0', passes)\n\n      node.oneOf.forEach(function(sch, i) {\n        visit(name, sch, false, false, schemaPath)\n        validate('if (%s === errors) {', prev)\n          ('%s++', passes)\n        ('} else {')\n          ('errors = %s', prev)\n        ('}')\n      })\n\n      validate('if (%s !== 1) {', passes)\n      error('no (or more than one) schemas match')\n      validate('}')\n    }\n\n    if (node.multipleOf !== undefined) {\n      if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))\n\n      validate('if (!isMultipleOf(%s, %d)) {', name, node.multipleOf)\n\n      error('has a remainder')\n      validate('}')\n\n      if (type !== 'number' && type !== 'integer') validate('}')\n    }\n\n    if (node.maxProperties !== undefined) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      validate('if (Object.keys(%s).length > %d) {', name, node.maxProperties)\n      error('has more properties than allowed')\n      validate('}')\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.minProperties !== undefined) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      validate('if (Object.keys(%s).length < %d) {', name, node.minProperties)\n      error('has less properties than allowed')\n      validate('}')\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.maxItems !== undefined) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n\n      validate('if (%s.length > %d) {', name, node.maxItems)\n      error('has more items than allowed')\n      validate('}')\n\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.minItems !== undefined) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n\n      validate('if (%s.length < %d) {', name, node.minItems)\n      error('has less items than allowed')\n      validate('}')\n\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.maxLength !== undefined) {\n      if (type !== 'string') validate('if (%s) {', types.string(name))\n\n      validate('if (%s.length > %d) {', name, node.maxLength)\n      error('has longer length than allowed')\n      validate('}')\n\n      if (type !== 'string') validate('}')\n    }\n\n    if (node.minLength !== undefined) {\n      if (type !== 'string') validate('if (%s) {', types.string(name))\n\n      validate('if (%s.length < %d) {', name, node.minLength)\n      error('has less length than allowed')\n      validate('}')\n\n      if (type !== 'string') validate('}')\n    }\n\n    if (node.minimum !== undefined) {\n      if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))\n\n      validate('if (%s %s %d) {', name, node.exclusiveMinimum ? '<=' : '<', node.minimum)\n      error('is less than minimum')\n      validate('}')\n\n      if (type !== 'number' && type !== 'integer') validate('}')\n    }\n\n    if (node.maximum !== undefined) {\n      if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))\n\n      validate('if (%s %s %d) {', name, node.exclusiveMaximum ? '>=' : '>', node.maximum)\n      error('is more than maximum')\n      validate('}')\n\n      if (type !== 'number' && type !== 'integer') validate('}')\n    }\n\n    if (properties) {\n      Object.keys(properties).forEach(function(p) {\n        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('if (%s !== null) {', name)\n\n        visit(\n          genobj(name, p),\n          properties[p],\n          reporter,\n          filter,\n          schemaPath.concat(tuple ? p : ['properties', p])\n        )\n\n        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('}')\n      })\n    }\n\n    while (indent--) validate('}')\n  }\n\n  var validate = genfun\n    ('function validate(data) {')\n      // Since undefined is not a valid JSON value, we coerce to null and other checks will catch this\n      ('if (data === undefined) data = null')\n      ('validate.errors = null')\n      ('var errors = 0')\n\n  visit('data', schema, reporter, opts && opts.filter, [])\n\n  validate\n      ('return errors === 0')\n    ('}')\n\n  validate = validate.toFunction(scope)\n  validate.errors = null\n\n  if (Object.defineProperty) {\n    Object.defineProperty(validate, 'error', {\n      get: function() {\n        if (!validate.errors) return ''\n        return validate.errors.map(function(err) {\n          return err.field + ' ' + err.message;\n        }).join('\\n')\n      }\n    })\n  }\n\n  validate.toJSON = function() {\n    return schema\n  }\n\n  return validate\n}\n\nmodule.exports = function(schema, opts) {\n  if (typeof schema === 'string') schema = JSON.parse(schema)\n  return compile(schema, {}, schema, true, opts)\n}\n\nmodule.exports.filter = function(schema, opts) {\n  var validate = module.exports(schema, xtend(opts, {filter: true}))\n  return function(sch) {\n    validate(sch)\n    return sch\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbiSerializationType = exports.AbiFunctionModifier = exports.AbiFunctionKind = exports.SCHEMA_VERSION = void 0;\nexports.SCHEMA_VERSION = \"0.4.0\";\n/**\n * Function kind regulates whether this function's invocation requires a transaction (so-called\n * call functions) or not (view functions).\n */\nvar AbiFunctionKind;\n(function (AbiFunctionKind) {\n    AbiFunctionKind[\"View\"] = \"view\";\n    AbiFunctionKind[\"Call\"] = \"call\";\n})(AbiFunctionKind = exports.AbiFunctionKind || (exports.AbiFunctionKind = {}));\n/** Function can have multiple modifiers that can change its semantics. */\nvar AbiFunctionModifier;\n(function (AbiFunctionModifier) {\n    /** Init functions can be used to initialize the state of the contract. */\n    AbiFunctionModifier[\"Init\"] = \"init\";\n    /**\n     * Private functions can only be called from the contract containing them. Usually, when a\n     * contract has to have a callback for a remote cross-contract call, this callback method\n     * should only be called by the contract itself.\n     */\n    AbiFunctionModifier[\"Private\"] = \"private\";\n    /** Payable functions can accept token transfer together with the function call.\n     * This is done so that contracts can define a fee in tokens that needs to be payed when\n     * they are used.\n     */\n    AbiFunctionModifier[\"Payable\"] = \"payable\";\n})(AbiFunctionModifier = exports.AbiFunctionModifier || (exports.AbiFunctionModifier = {}));\n/** Supported serialization formats. */\nvar AbiSerializationType;\n(function (AbiSerializationType) {\n    AbiSerializationType[\"Json\"] = \"json\";\n    AbiSerializationType[\"Borsh\"] = \"borsh\";\n})(AbiSerializationType = exports.AbiSerializationType || (exports.AbiSerializationType = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConflictingOptions = exports.ArgumentSchemaError = exports.UnknownArgumentError = exports.UnsupportedSerializationError = void 0;\nclass UnsupportedSerializationError extends Error {\n    constructor(methodName, serializationType) {\n        super(`Contract method '${methodName}' is using an unsupported serialization type ${serializationType}`);\n    }\n}\nexports.UnsupportedSerializationError = UnsupportedSerializationError;\nclass UnknownArgumentError extends Error {\n    constructor(actualArgName, expectedArgNames) {\n        super(`Unrecognized argument '${actualArgName}', expected '${JSON.stringify(expectedArgNames)}'`);\n    }\n}\nexports.UnknownArgumentError = UnknownArgumentError;\nclass ArgumentSchemaError extends Error {\n    constructor(argName, errors) {\n        super(`Argument '${argName}' does not conform to the specified ABI schema: '${JSON.stringify(errors)}'`);\n    }\n}\nexports.ArgumentSchemaError = ArgumentSchemaError;\nclass ConflictingOptions extends Error {\n    constructor() {\n        super('Conflicting contract method options have been passed. You can either specify ABI or a list of view/call methods.');\n    }\n}\nexports.ConflictingOptions = ConflictingOptions;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst types_1 = require(\"@near-js/types\");\nconst local_view_execution_1 = require(\"./local-view-execution/index.cjs\");\nconst is_my_json_valid_1 = __importDefault(require(\"is-my-json-valid\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst near_abi_1 = require(\"near-abi\");\nconst account_1 = require(\"./account.cjs\");\nconst errors_1 = require(\"./errors.cjs\");\nconst utils_2 = require(\"./utils.cjs\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        },\n    }[name];\n}\nfunction validateArguments(args, abiFunction, abiRoot) {\n    if (!isObject(args))\n        return;\n    if (abiFunction.params &&\n        abiFunction.params.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.params.serialization_type);\n    }\n    if (abiFunction.result &&\n        abiFunction.result.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.result.serialization_type);\n    }\n    const params = abiFunction.params?.args || [];\n    for (const p of params) {\n        const arg = args[p.name];\n        const typeSchema = p.type_schema;\n        typeSchema.definitions = abiRoot.body.root_schema.definitions;\n        const validate = (0, is_my_json_valid_1.default)(typeSchema);\n        const valid = validate(arg);\n        if (!valid) {\n            throw new errors_1.ArgumentSchemaError(p.name, validate.errors);\n        }\n    }\n    // Check there are no extra unknown arguments passed\n    for (const argName of Object.keys(args)) {\n        const param = params.find((p) => p.name === argName);\n        if (!param) {\n            throw new errors_1.UnknownArgumentError(argName, params.map((p) => p.name));\n        }\n    }\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === \"[object Object]\";\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#contract](https://docs.near.org/tools/near-api-js/quick-reference#contract)\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /** @deprecated */\n    account;\n    connection;\n    contractId;\n    lve;\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(connection, contractId, options) {\n        this.connection = connection.getConnection();\n        if (connection instanceof account_1.Account) {\n            const deprecate = (0, depd_1.default)(\"new Contract(account, contractId, options)\");\n            deprecate(\"use `new Contract(connection, contractId, options)` instead\");\n            this.account = connection;\n        }\n        this.contractId = contractId;\n        this.lve = new local_view_execution_1.LocalViewExecution(connection);\n        const { viewMethods = [], changeMethods = [], abi: abiRoot, useLocalViewExecution, } = options;\n        let viewMethodsWithAbi = viewMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        let changeMethodsWithAbi = changeMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        if (abiRoot) {\n            if (viewMethodsWithAbi.length > 0 ||\n                changeMethodsWithAbi.length > 0) {\n                throw new errors_1.ConflictingOptions();\n            }\n            viewMethodsWithAbi = abiRoot.body.functions\n                .filter((m) => m.kind === near_abi_1.AbiFunctionKind.View)\n                .map((m) => ({ name: m.name, abi: m }));\n            changeMethodsWithAbi = abiRoot.body.functions\n                .filter((methodAbi) => methodAbi.kind === near_abi_1.AbiFunctionKind.Call)\n                .map((methodAbi) => ({ name: methodAbi.name, abi: methodAbi }));\n        }\n        viewMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length ||\n                        !(isObject(args) || isUint8Array(args)) ||\n                        !isObject(options)) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (abi) {\n                        validateArguments(args, abi, abiRoot);\n                    }\n                    if (useLocalViewExecution) {\n                        try {\n                            return await this.lve.viewFunction({\n                                contractId: this.contractId,\n                                methodName: name,\n                                args,\n                                ...options,\n                            });\n                        }\n                        catch (error) {\n                            utils_1.Logger.warn(`Local view execution failed with: \"${error.message}\"`);\n                            utils_1.Logger.warn(`Fallback to normal RPC call`);\n                        }\n                    }\n                    if (this.account) {\n                        return this.account.viewFunction({\n                            contractId: this.contractId,\n                            methodName: name,\n                            args,\n                            ...options,\n                        });\n                    }\n                    return (0, utils_2.viewFunction)(this.connection, {\n                        contractId: this.contractId,\n                        methodName: name,\n                        args,\n                        ...options,\n                    });\n                }),\n            });\n        });\n        changeMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, async (...args) => {\n                    if (args.length &&\n                        (args.length > 3 ||\n                            !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)(\"contract.methodName(args, gas, amount)\");\n                        deprecate(\"use `contract.methodName({ signerAccount, args, gas?, amount?, callbackUrl?, meta? })` instead\");\n                        args[0] = {\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2],\n                        };\n                    }\n                    if (abi) {\n                        validateArguments(args[0].args, abi, abiRoot);\n                    }\n                    return this._changeMethod({ methodName: name, ...args[0] });\n                }),\n            });\n        });\n    }\n    async _changeMethod({ signerAccount, args, methodName, gas, amount, meta, callbackUrl, }) {\n        validateBNLike({ gas, amount });\n        const account = this.account || signerAccount;\n        if (!account)\n            throw new Error(`signerAccount must be specified`);\n        const rawResult = await account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl,\n        });\n        return (0, utils_1.getTransactionLastResult)(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Throws if an argument is not in BigInt format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = \"number, decimal string or BigInt\";\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && typeof argValue !== \"bigint\" && isNaN(argValue)) {\n            throw new types_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = exports.UnsupportedSerializationError = exports.UnknownArgumentError = exports.ConflictingOptions = exports.ArgumentSchemaError = exports.Contract = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = exports.Connection = exports.AccountMultisig = exports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = exports.Account2FA = exports.Account = void 0;\nvar account_1 = require(\"./account.cjs\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return account_1.Account; } });\nvar account_2fa_1 = require(\"./account_2fa.cjs\");\nObject.defineProperty(exports, \"Account2FA\", { enumerable: true, get: function () { return account_2fa_1.Account2FA; } });\nvar account_creator_1 = require(\"./account_creator.cjs\");\nObject.defineProperty(exports, \"AccountCreator\", { enumerable: true, get: function () { return account_creator_1.AccountCreator; } });\nObject.defineProperty(exports, \"LocalAccountCreator\", { enumerable: true, get: function () { return account_creator_1.LocalAccountCreator; } });\nObject.defineProperty(exports, \"UrlAccountCreator\", { enumerable: true, get: function () { return account_creator_1.UrlAccountCreator; } });\nvar account_multisig_1 = require(\"./account_multisig.cjs\");\nObject.defineProperty(exports, \"AccountMultisig\", { enumerable: true, get: function () { return account_multisig_1.AccountMultisig; } });\nvar connection_1 = require(\"./connection.cjs\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return connection_1.Connection; } });\nvar constants_1 = require(\"./constants.cjs\");\nObject.defineProperty(exports, \"MULTISIG_STORAGE_KEY\", { enumerable: true, get: function () { return constants_1.MULTISIG_STORAGE_KEY; } });\nObject.defineProperty(exports, \"MULTISIG_ALLOWANCE\", { enumerable: true, get: function () { return constants_1.MULTISIG_ALLOWANCE; } });\nObject.defineProperty(exports, \"MULTISIG_GAS\", { enumerable: true, get: function () { return constants_1.MULTISIG_GAS; } });\nObject.defineProperty(exports, \"MULTISIG_DEPOSIT\", { enumerable: true, get: function () { return constants_1.MULTISIG_DEPOSIT; } });\nObject.defineProperty(exports, \"MULTISIG_CHANGE_METHODS\", { enumerable: true, get: function () { return constants_1.MULTISIG_CHANGE_METHODS; } });\nObject.defineProperty(exports, \"MULTISIG_CONFIRM_METHODS\", { enumerable: true, get: function () { return constants_1.MULTISIG_CONFIRM_METHODS; } });\nvar contract_1 = require(\"./contract.cjs\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\nvar errors_1 = require(\"./errors.cjs\");\nObject.defineProperty(exports, \"ArgumentSchemaError\", { enumerable: true, get: function () { return errors_1.ArgumentSchemaError; } });\nObject.defineProperty(exports, \"ConflictingOptions\", { enumerable: true, get: function () { return errors_1.ConflictingOptions; } });\nObject.defineProperty(exports, \"UnknownArgumentError\", { enumerable: true, get: function () { return errors_1.UnknownArgumentError; } });\nObject.defineProperty(exports, \"UnsupportedSerializationError\", { enumerable: true, get: function () { return errors_1.UnsupportedSerializationError; } });\nvar types_1 = require(\"./types.cjs\");\nObject.defineProperty(exports, \"MultisigDeleteRequestRejectionError\", { enumerable: true, get: function () { return types_1.MultisigDeleteRequestRejectionError; } });\nObject.defineProperty(exports, \"MultisigStateStatus\", { enumerable: true, get: function () { return types_1.MultisigStateStatus; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nvar accounts_1 = require(\"@near-js/accounts\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return accounts_1.Account; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = exports.AccountMultisig = exports.Account2FA = void 0;\nvar accounts_1 = require(\"@near-js/accounts\");\nObject.defineProperty(exports, \"Account2FA\", { enumerable: true, get: function () { return accounts_1.Account2FA; } });\nObject.defineProperty(exports, \"AccountMultisig\", { enumerable: true, get: function () { return accounts_1.AccountMultisig; } });\nObject.defineProperty(exports, \"MULTISIG_STORAGE_KEY\", { enumerable: true, get: function () { return accounts_1.MULTISIG_STORAGE_KEY; } });\nObject.defineProperty(exports, \"MULTISIG_ALLOWANCE\", { enumerable: true, get: function () { return accounts_1.MULTISIG_ALLOWANCE; } });\nObject.defineProperty(exports, \"MULTISIG_GAS\", { enumerable: true, get: function () { return accounts_1.MULTISIG_GAS; } });\nObject.defineProperty(exports, \"MULTISIG_DEPOSIT\", { enumerable: true, get: function () { return accounts_1.MULTISIG_DEPOSIT; } });\nObject.defineProperty(exports, \"MULTISIG_CHANGE_METHODS\", { enumerable: true, get: function () { return accounts_1.MULTISIG_CHANGE_METHODS; } });\nObject.defineProperty(exports, \"MULTISIG_CONFIRM_METHODS\", { enumerable: true, get: function () { return accounts_1.MULTISIG_CONFIRM_METHODS; } });\nObject.defineProperty(exports, \"MultisigDeleteRequestRejectionError\", { enumerable: true, get: function () { return accounts_1.MultisigDeleteRequestRejectionError; } });\nObject.defineProperty(exports, \"MultisigStateStatus\", { enumerable: true, get: function () { return accounts_1.MultisigStateStatus; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nvar accounts_1 = require(\"@near-js/accounts\");\nObject.defineProperty(exports, \"AccountCreator\", { enumerable: true, get: function () { return accounts_1.AccountCreator; } });\nObject.defineProperty(exports, \"LocalAccountCreator\", { enumerable: true, get: function () { return accounts_1.LocalAccountCreator; } });\nObject.defineProperty(exports, \"UrlAccountCreator\", { enumerable: true, get: function () { return accounts_1.UrlAccountCreator; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nvar accounts_1 = require(\"@near-js/accounts\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return accounts_1.Connection; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signer = exports.InMemorySigner = void 0;\nvar signers_1 = require(\"@near-js/signers\");\nObject.defineProperty(exports, \"InMemorySigner\", { enumerable: true, get: function () { return signers_1.InMemorySigner; } });\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signers_1.Signer; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nvar accounts_1 = require(\"@near-js/accounts\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return accounts_1.Contract; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link \"@near-js/accounts\".account.Account | Account} through the {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#account](https://docs.near.org/tools/near-api-js/quick-reference#account)\n *\n * @module near\n */\nconst accounts_1 = require(\"@near-js/accounts\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    config;\n    connection;\n    accountCreator;\n    constructor(config) {\n        this.config = config;\n        this.connection = accounts_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: config.provider || { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps?.keyStore },\n            jsvmAccountId: config.jsvmAccountId || `jsvm.${config.networkId}`\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? BigInt(config.initialBalance) : 500000000000000000000000000n;\n            this.accountCreator = new accounts_1.LocalAccountCreator(new accounts_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new accounts_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new accounts_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig#masterAccount} and {@link NearConfig#helperUrl}\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new accounts_1.Account(this.connection, accountId);\n    }\n}\nexports.Near = Near;\n", "\"use strict\";\nexports.__esModule = true;\nexports.integers = void 0;\nexports.integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n", "\"use strict\";\nexports.__esModule = true;\nexports.DecodeBuffer = exports.EncodeBuffer = void 0;\nvar EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexports.EncodeBuffer = EncodeBuffer;\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexports.DecodeBuffer = DecodeBuffer;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.validate_schema = exports.ErrorSchema = exports.expect_enum = exports.expect_same_size = exports.expect_bigint = exports.expect_type = exports.isArrayLike = void 0;\nvar types_js_1 = require(\"./types.js\");\nfunction isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexports.isArrayLike = isArrayLike;\nfunction expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_type = expect_type;\nfunction expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_bigint = expect_bigint;\nfunction expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_same_size = expect_same_size;\nfunction expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_enum = expect_enum;\n// Validate Schema\nvar VALID_STRING_TYPES = types_js_1.integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexports.ErrorSchema = ErrorSchema;\nfunction validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nexports.validate_schema = validate_schema;\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.BorshSerializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new buffer_js_1.EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexports.BorshSerializer = BorshSerializer;\n", "\"use strict\";\nexports.__esModule = true;\nexports.BorshDeserializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new buffer_js_1.DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexports.BorshDeserializer = BorshDeserializer;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.deserialize = exports.serialize = void 0;\nvar serialize_js_1 = require(\"./serialize.js\");\nvar deserialize_js_1 = require(\"./deserialize.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nfunction serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new serialize_js_1.BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexports.serialize = serialize;\nfunction deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new deserialize_js_1.BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\nexports.deserialize = deserialize;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectedWalletAccount = exports.WalletConnection = void 0;\n/**\n * This module exposes two classes:\n * * {@link WalletConnection} which redirects users to [NEAR Wallet](https://wallet.near.org/) for key management.\n * * {@link ConnectedWalletAccount} is an {@link \"@near-js/accounts\".account.Account | Account} implementation that uses {@link WalletConnection} to get keys\n *\n * @module walletAccount\n */\nconst accounts_1 = require(\"@near-js/accounts\");\nconst crypto_1 = require(\"@near-js/crypto\");\nconst utils_1 = require(\"@near-js/utils\");\nconst transactions_1 = require(\"@near-js/transactions\");\nconst borsh_1 = require(\"borsh\");\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\n/**\n * This class is not intended for use outside the browser. Without `window` (i.e. in server contexts), it will instantiate but will throw a clear error when used.\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#wallet](https://docs.near.org/tools/near-api-js/quick-reference#wallet)\n * @example\n * ```js\n * // create new WalletConnection instance\n * const wallet = new WalletConnection(near, 'my-app');\n *\n * // If not signed in redirect to the NEAR wallet to sign in\n * // keys will be stored in the BrowserLocalStorageKeyStore\n * if(!wallet.isSignedIn()) return wallet.requestSignIn()\n * ```\n */\nclass WalletConnection {\n    /** @hidden */\n    _walletBaseUrl;\n    /** @hidden */\n    _authDataKey;\n    /** @hidden */\n    _keyStore;\n    /** @hidden */\n    _authData;\n    /** @hidden */\n    _networkId;\n    /** @hidden */\n    // _near: Near;\n    _near;\n    /** @hidden */\n    _connectedAccount;\n    /** @hidden */\n    _completeSignInPromise;\n    constructor(near, appKeyPrefix) {\n        if (typeof (appKeyPrefix) !== 'string') {\n            throw new Error('Please define a clear appKeyPrefix for this WalletConnection instance as the second argument to the constructor');\n        }\n        if (typeof window === 'undefined') {\n            return new Proxy(this, {\n                get(target, property) {\n                    if (property === 'isSignedIn') {\n                        return () => false;\n                    }\n                    if (property === 'getAccountId') {\n                        return () => '';\n                    }\n                    if (target[property] && typeof target[property] === 'function') {\n                        return () => {\n                            throw new Error('No window found in context, please ensure you are using WalletConnection on the browser');\n                        };\n                    }\n                    return target[property];\n                }\n            });\n        }\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInPromise = this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletConnection is authorized with the wallet.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn();\n     * ```\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns promise of completing signing in after redirecting from wallet\n     * @example\n     * ```js\n     * // on login callback page\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn(); // false\n     * await wallet.isSignedInAsync(); // true\n     * ```\n     */\n    async isSignedInAsync() {\n        if (!this._completeSignInPromise) {\n            return this.isSignedIn();\n        }\n        await this._completeSignInPromise;\n        return this.isSignedIn();\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.getAccountId();\n     * ```\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Constructs string URL to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // return string URL to the NEAR Wallet\n     * const url = await wallet.requestSignInUrl({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    async requestSignInUrl({ contractId, methodNames, successUrl, failureUrl, keyType = 'ed25519' }) {\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n        newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n        newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n        if (contractId) {\n            /* Throws exception if contract account does not exist */\n            const contractAccount = await this._near.account(contractId);\n            await contractAccount.state();\n            newUrl.searchParams.set('contract_id', contractId);\n            const accessKey = crypto_1.KeyPair.fromRandom(keyType);\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            await this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n        }\n        if (methodNames) {\n            methodNames.forEach(methodName => {\n                newUrl.searchParams.append('methodNames', methodName);\n            });\n        }\n        return newUrl.toString();\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // redirects to the NEAR Wallet\n     * wallet.requestSignIn({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    async requestSignIn(options) {\n        const url = await this.requestSignInUrl(options);\n        window.location.assign(url);\n    }\n    /**\n     * Constructs string URL to the wallet to sign a transaction or batch of transactions.\n     *\n     * @param options A required options object\n     * @param options.transactions List of transactions to sign\n     * @param options.callbackUrl URL to redirect upon success. Default: current url\n     * @param options.meta Meta information the wallet will send back to the application. `meta` will be attached to the `callbackUrl` as a url search param\n     *\n     */\n    requestSignTransactionsUrl({ transactions, meta, callbackUrl }) {\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL('sign', this._walletBaseUrl);\n        newUrl.searchParams.set('transactions', transactions\n            .map(transaction => (0, borsh_1.serialize)(transactions_1.SCHEMA.Transaction, transaction))\n            .map(serialized => Buffer.from(serialized).toString('base64'))\n            .join(','));\n        newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n        if (meta)\n            newUrl.searchParams.set('meta', meta);\n        return newUrl.toString();\n    }\n    /**\n     * Requests the user to quickly sign for a transaction or batch of transactions by redirecting to the wallet.\n     *\n     * @param options A required options object\n     * @param options.transactions List of transactions to sign\n     * @param options.callbackUrl URL to redirect upon success. Default: current url\n     * @param options.meta Meta information the wallet will send back to the application. `meta` will be attached to the `callbackUrl` as a url search param\n     *\n     */\n    requestSignTransactions(options) {\n        const url = this.requestSignTransactionsUrl(options);\n        window.location.assign(url);\n    }\n    /**\n     * @hidden\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    async _completeSignInWithAccessKey() {\n        const currentUrl = new URL(window.location.href);\n        const publicKey = currentUrl.searchParams.get('public_key') || '';\n        const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n        const accountId = currentUrl.searchParams.get('account_id') || '';\n        // TODO: Handle errors during login\n        if (accountId) {\n            const authData = {\n                accountId,\n                allKeys\n            };\n            window.localStorage.setItem(this._authDataKey, JSON.stringify(authData));\n            if (publicKey) {\n                await this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n            this._authData = authData;\n        }\n        currentUrl.searchParams.delete('public_key');\n        currentUrl.searchParams.delete('all_keys');\n        currentUrl.searchParams.delete('account_id');\n        currentUrl.searchParams.delete('meta');\n        currentUrl.searchParams.delete('transactionHashes');\n        window.history.replaceState({}, document.title, currentUrl.toString());\n    }\n    /**\n     * @hidden\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    async _moveKeyFromTempToPermanent(accountId, publicKey) {\n        const keyPair = await this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        await this._keyStore.setKey(this._networkId, accountId, keyPair);\n        await this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletConnection.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexports.WalletConnection = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using {@link WalletConnection} when no local key is available.\n */\nclass ConnectedWalletAccount extends accounts_1.Account {\n    walletConnection;\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    /**\n     * Sign a transaction by redirecting to the NEAR Wallet\n     * @see {@link WalletConnection#requestSignTransactions}\n     * @param options An optional options object\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions An array of transaction actions to be performed.\n     * @param options.walletMeta Additional metadata to be included in the wallet signing request.\n     * @param options.walletCallbackUrl URL to redirect upon completion of the wallet signing process. Default: current URL.\n     */\n    async signAndSendTransaction({ receiverId, actions, walletMeta, walletCallbackUrl = window.location.href }) {\n        const localKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        let accessKey = await this.accessKeyForTransaction(receiverId, actions, localKey);\n        if (!accessKey) {\n            throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n        }\n        if (localKey && localKey.toString() === accessKey.public_key) {\n            try {\n                return await super.signAndSendTransaction({ receiverId, actions });\n            }\n            catch (e) {\n                if (e.type === 'NotEnoughAllowance') {\n                    accessKey = await this.accessKeyForTransaction(receiverId, actions);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = (0, utils_1.baseDecode)(block.header.hash);\n        const publicKey = crypto_1.PublicKey.from(accessKey.public_key);\n        // TODO: Cache & listen for nonce updates for given access key\n        const nonce = accessKey.access_key.nonce + 1n;\n        const transaction = (0, transactions_1.createTransaction)(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n        await this.walletConnection.requestSignTransactions({\n            transactions: [transaction],\n            meta: walletMeta,\n            callbackUrl: walletCallbackUrl\n        });\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                reject(new Error('Failed to redirect to sign transaction'));\n            }, 1000);\n        });\n        // TODO: Aggregate multiple transaction request with \"debounce\".\n        // TODO: Introduce TransactionQueue which also can be used to watch for status?\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of \\{access_key: AccessKey, public_key: PublicKey\\} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    async accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        const { access_key: { permission } } = accessKey;\n        if (permission === 'FullAccess') {\n            return true;\n        }\n        if (permission.FunctionCall) {\n            const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n            /********************************\n            Accept multisig access keys and let wallets attempt to signAndSendTransaction\n            If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n            ********************************/\n            if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                return true;\n            }\n            if (allowedReceiverId === receiverId) {\n                if (actions.length !== 1) {\n                    return false;\n                }\n                const [{ functionCall }] = actions;\n                return functionCall &&\n                    (!functionCall.deposit || functionCall.deposit.toString() === '0') && // TODO: Should support charging amount smaller than allowance?\n                    (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                // TODO: Handle cases when allowance doesn't have enough to pay for gas\n            }\n        }\n        // TODO: Support other permissions than FunctionCall\n        return false;\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     */\n    async accessKeyForTransaction(receiverId, actions, localKey) {\n        const accessKeys = await this.getAccessKeys();\n        if (localKey) {\n            const accessKey = accessKeys.find(key => key.public_key.toString() === localKey.toString());\n            if (accessKey && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        const walletKeys = this.walletConnection._authData.allKeys;\n        for (const accessKey of accessKeys) {\n            if (walletKeys.indexOf(accessKey.public_key) !== -1 && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        return null;\n    }\n}\nexports.ConnectedWalletAccount = ConnectedWalletAccount;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnection = exports.ConnectedWalletAccount = exports.Near = void 0;\nvar near_1 = require(\"./near.cjs\");\nObject.defineProperty(exports, \"Near\", { enumerable: true, get: function () { return near_1.Near; } });\nvar wallet_account_1 = require(\"./wallet_account.cjs\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", { enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } });\nObject.defineProperty(exports, \"WalletConnection\", { enumerable: true, get: function () { return wallet_account_1.WalletConnection; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\nvar wallet_account_1 = require(\"@near-js/wallet-account\");\nObject.defineProperty(exports, \"Near\", { enumerable: true, get: function () { return wallet_account_1.Near; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnection = exports.ConnectedWalletAccount = void 0;\nvar wallet_account_1 = require(\"@near-js/wallet-account\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", { enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } });\nObject.defineProperty(exports, \"WalletConnection\", { enumerable: true, get: function () { return wallet_account_1.WalletConnection; } });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnection = exports.ConnectedWalletAccount = exports.Near = exports.KeyPair = exports.Signer = exports.InMemorySigner = exports.Contract = exports.Connection = exports.Account = exports.multisig = exports.validators = exports.transactions = exports.utils = exports.providers = exports.accountCreator = void 0;\n/** @hidden @module */\nconst providers = __importStar(require(\"./providers\"));\nexports.providers = providers;\nconst utils = __importStar(require(\"./utils\"));\nexports.utils = utils;\nconst transactions = __importStar(require(\"./transaction\"));\nexports.transactions = transactions;\nconst validators = __importStar(require(\"./validators\"));\nexports.validators = validators;\nconst account_1 = require(\"./account\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return account_1.Account; } });\nconst multisig = __importStar(require(\"./account_multisig\"));\nexports.multisig = multisig;\nconst accountCreator = __importStar(require(\"./account_creator\"));\nexports.accountCreator = accountCreator;\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return connection_1.Connection; } });\nconst signer_1 = require(\"./signer\");\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signer_1.Signer; } });\nObject.defineProperty(exports, \"InMemorySigner\", { enumerable: true, get: function () { return signer_1.InMemorySigner; } });\nconst contract_1 = require(\"./contract\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\nconst key_pair_1 = require(\"./utils/key_pair\");\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nconst near_1 = require(\"./near\");\nObject.defineProperty(exports, \"Near\", { enumerable: true, get: function () { return near_1.Near; } });\nconst wallet_account_1 = require(\"./wallet-account\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", { enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } });\nObject.defineProperty(exports, \"WalletConnection\", { enumerable: true, get: function () { return wallet_account_1.WalletConnection; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connect = void 0;\n/**\n * Connect to NEAR using the provided configuration.\n *\n * {@link ConnectConfig#networkId} and {@link ConnectConfig#nodeUrl} are required.\n *\n * To sign transactions you can also pass: {@link ConnectConfig#keyStore}\n *\n * Both are passed they are prioritize in that order.\n *\n * @see {@link ConnectConfig}\n * @example\n * ```js\n * async function initNear() {\n *   const near = await connect({\n *      networkId: 'testnet',\n *      nodeUrl: 'https://rpc.testnet.near.org'\n *   })\n * }\n * ```\n *\n * @module browserConnect\n */\nconst near_1 = require(\"./near\");\n/**\n * Initialize connection to Near network.\n */\nasync function connect(config) {\n    return new near_1.Near(config);\n}\nexports.connect = connect;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keyStores = void 0;\n/** @hidden @module */\nexports.keyStores = __importStar(require(\"./key_stores/browser-index\"));\n__exportStar(require(\"./common-index\"), exports);\n__exportStar(require(\"./browser-connect\"), exports);\n"],
  "mappings": "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",
  "names": ["import_dist", "import_dist", "import_dist", "import_dist", "require_commonjs", "import_dist", "require_keystore", "import_dist", "require_in_memory_key_store", "import_dist", "import_dist", "import_dist", "require_commonjs", "import_dist", "require_browser_local_storage_key_store", "import_dist", "require_merge_key_store", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "stake", "import_dist", "import_dist", "EncodeBuffer", "DecodeBuffer", "import_dist", "d", "b", "ErrorSchema", "import_dist", "BorshSerializer", "import_dist", "BorshDeserializer", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "publicKey", "import_dist", "import_dist", "require_commonjs", "import_dist", "exports", "import_dist", "Delay", "SkipFirstDelay", "AlwaysDelay", "backOff", "BackOff", "import_dist", "retryConfig", "import_dist", "import_dist", "require_commonjs", "import_dist", "require_provider", "import_dist", "require_json_rpc_provider", "import_dist", "require_failover_rpc_provider", "import_dist", "import_dist", "require_types", "import_dist", "require_buffer", "import_dist", "EncodeBuffer", "DecodeBuffer", "require_utils", "import_dist", "d", "b", "ErrorSchema", "require_serialize", "import_dist", "BorshSerializer", "require_deserialize", "import_dist", "BorshDeserializer", "require_cjs", "import_dist", "require_serialize", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "require_utils", "import_dist", "import_dist", "stake", "import_dist", "require_utils", "import_dist", "import_dist", "import_dist", "require_types", "import_dist", "MultisigDeleteRequestRejectionError", "MultisigStateStatus", "import_dist", "MultisigCodeStatus", "import_dist", "import_dist", "hash", "import_dist", "import_dist", "require_commonjs", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "module", "import_dist", "import_dist", "import_dist", "import_dist", "line", "lines", "i", "import_dist", "import_dist", "import_dist", "import_dist", "res", "err", "reporter", "i", "p", "import_dist", "AbiFunctionKind", "AbiFunctionModifier", "AbiSerializationType", "import_dist", "import_dist", "options", "require_commonjs", "import_dist", "require_account", "import_dist", "require_account_multisig", "import_dist", "require_account_creator", "import_dist", "require_connection", "import_dist", "require_signer", "import_dist", "require_contract", "import_dist", "import_dist", "require_types", "import_dist", "require_buffer", "import_dist", "EncodeBuffer", "DecodeBuffer", "require_utils", "import_dist", "d", "b", "ErrorSchema", "require_serialize", "import_dist", "BorshSerializer", "require_deserialize", "import_dist", "BorshDeserializer", "require_cjs", "import_dist", "import_dist", "require_commonjs", "import_dist", "require_near", "import_dist", "require_wallet_account", "import_dist", "import_dist", "import_dist", "require_browser_index", "import_dist", "exports"]
}
