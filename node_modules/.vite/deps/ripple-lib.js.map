{
  "version": 3,
  "sources": ["../../ripple-lib/src/common/txflags.ts", "../../ripple-lib/src/common/constants.ts", "../../ripple-lib/src/common/browser-hacks.ts", "../../ripple-lib/src/common/errors.ts", "../../assert/build/internal/errors.js", "../../assert/build/internal/assert/assertion_error.js", "../../object-keys/isArguments.js", "../../object-keys/implementation.js", "../../object-keys/index.js", "../../object.assign/implementation.js", "../../object.assign/polyfill.js", "../../object-is/implementation.js", "../../object-is/polyfill.js", "../../define-properties/index.js", "../../object-is/shim.js", "../../object-is/index.js", "../../is-nan/implementation.js", "../../is-nan/polyfill.js", "../../is-nan/shim.js", "../../is-nan/index.js", "../../assert/build/internal/util/comparisons.js", "../../assert/build/assert.js", "../../punycode/punycode.js", "../../object-inspect/index.js", "../../side-channel-list/index.js", "../../side-channel-map/index.js", "../../side-channel-weakmap/index.js", "../../side-channel/index.js", "../../qs/lib/formats.js", "../../qs/lib/utils.js", "../../qs/lib/stringify.js", "../../qs/lib/parse.js", "../../qs/lib/index.js", "../../node-stdlib-browser/node_modules/url/url.js", "../../node-stdlib-browser/node_modules/rollup-plugin-node-builtins/src/es6/path.js", "../../node-stdlib-browser/proxy/url.js", "../../jsonschema/lib/helpers.js", "../../jsonschema/lib/attribute.js", "../../jsonschema/lib/validator.js", "../../jsonschema/lib/index.js", "../../ripple-address-codec/src/utils.ts", "../../ripple-address-codec/src/xrp-codec.ts", "../../ripple-address-codec/src/index.ts", "../../bignumber.js/bignumber.js", "../../ripple-keypairs/src/Sha512.ts", "../../ripple-keypairs/src/secp256k1.ts", "../../ripple-keypairs/src/utils.ts", "../../ripple-keypairs/src/index.ts", "../../ripple-lib/src/common/utils.ts", "../../ripple-lib/dist/npm/common/schemas/objects/tx-json.json", "../../ripple-lib/dist/npm/common/schemas/objects/transaction-type.json", "../../ripple-lib/dist/npm/common/schemas/objects/hash128.json", "../../ripple-lib/dist/npm/common/schemas/objects/hash256.json", "../../ripple-lib/dist/npm/common/schemas/objects/sequence.json", "../../ripple-lib/dist/npm/common/schemas/objects/ticket-sequence.json", "../../ripple-lib/dist/npm/common/schemas/objects/signature.json", "../../ripple-lib/dist/npm/common/schemas/objects/issue.json", "../../ripple-lib/dist/npm/common/schemas/objects/ledger-version.json", "../../ripple-lib/dist/npm/common/schemas/objects/max-adjustment.json", "../../ripple-lib/dist/npm/common/schemas/objects/memo.json", "../../ripple-lib/dist/npm/common/schemas/objects/memos.json", "../../ripple-lib/dist/npm/common/schemas/objects/public-key.json", "../../ripple-lib/dist/npm/common/schemas/objects/private-key.json", "../../ripple-lib/dist/npm/common/schemas/objects/uint32.json", "../../ripple-lib/dist/npm/common/schemas/objects/value.json", "../../ripple-lib/dist/npm/common/schemas/objects/source-adjustment.json", "../../ripple-lib/dist/npm/common/schemas/objects/destination-adjustment.json", "../../ripple-lib/dist/npm/common/schemas/objects/tag.json", "../../ripple-lib/dist/npm/common/schemas/objects/lax-amount.json", "../../ripple-lib/dist/npm/common/schemas/objects/lax-lax-amount.json", "../../ripple-lib/dist/npm/common/schemas/objects/min-adjustment.json", "../../ripple-lib/dist/npm/common/schemas/objects/source-exact-adjustment.json", "../../ripple-lib/dist/npm/common/schemas/objects/destination-exact-adjustment.json", "../../ripple-lib/dist/npm/common/schemas/objects/destination-address-tag.json", "../../ripple-lib/dist/npm/common/schemas/objects/transaction-hash.json", "../../ripple-lib/dist/npm/common/schemas/objects/address.json", "../../ripple-lib/dist/npm/common/schemas/objects/x-address.json", "../../ripple-lib/dist/npm/common/schemas/objects/classic-address.json", "../../ripple-lib/dist/npm/common/schemas/objects/adjustment.json", "../../ripple-lib/dist/npm/common/schemas/objects/quality.json", "../../ripple-lib/dist/npm/common/schemas/objects/amount.json", "../../ripple-lib/dist/npm/common/schemas/objects/amountbase.json", "../../ripple-lib/dist/npm/common/schemas/objects/balance.json", "../../ripple-lib/dist/npm/common/schemas/objects/blob.json", "../../ripple-lib/dist/npm/common/schemas/objects/currency.json", "../../ripple-lib/dist/npm/common/schemas/objects/signed-value.json", "../../ripple-lib/dist/npm/common/schemas/objects/orderbook.json", "../../ripple-lib/dist/npm/common/schemas/objects/instructions.json", "../../ripple-lib/dist/npm/common/schemas/objects/settings-plus-memos.json", "../../ripple-lib/dist/npm/common/schemas/specifications/settings.json", "../../ripple-lib/dist/npm/common/schemas/specifications/payment.json", "../../ripple-lib/dist/npm/common/schemas/specifications/get-payment.json", "../../ripple-lib/dist/npm/common/schemas/specifications/escrow-cancellation.json", "../../ripple-lib/dist/npm/common/schemas/specifications/order-cancellation.json", "../../ripple-lib/dist/npm/common/schemas/specifications/order.json", "../../ripple-lib/dist/npm/common/schemas/specifications/escrow-execution.json", "../../ripple-lib/dist/npm/common/schemas/specifications/escrow-creation.json", "../../ripple-lib/dist/npm/common/schemas/specifications/payment-channel-create.json", "../../ripple-lib/dist/npm/common/schemas/specifications/payment-channel-fund.json", "../../ripple-lib/dist/npm/common/schemas/specifications/payment-channel-claim.json", "../../ripple-lib/dist/npm/common/schemas/specifications/check-create.json", "../../ripple-lib/dist/npm/common/schemas/specifications/check-cash.json", "../../ripple-lib/dist/npm/common/schemas/specifications/check-cancel.json", "../../ripple-lib/dist/npm/common/schemas/specifications/trustline.json", "../../ripple-lib/dist/npm/common/schemas/specifications/deposit-preauth.json", "../../ripple-lib/dist/npm/common/schemas/specifications/account-delete.json", "../../ripple-lib/dist/npm/common/schemas/output/sign.json", "../../ripple-lib/dist/npm/common/schemas/output/submit.json", "../../ripple-lib/dist/npm/common/schemas/output/get-account-info.json", "../../ripple-lib/dist/npm/common/schemas/output/get-account-objects.json", "../../ripple-lib/dist/npm/common/schemas/output/get-balances.json", "../../ripple-lib/dist/npm/common/schemas/output/get-balance-sheet.json", "../../ripple-lib/dist/npm/common/schemas/output/get-ledger.json", "../../ripple-lib/dist/npm/common/schemas/output/get-orderbook.json", "../../ripple-lib/dist/npm/common/schemas/output/get-orders.json", "../../ripple-lib/dist/npm/common/schemas/output/order-change.json", "../../ripple-lib/dist/npm/common/schemas/output/get-payment-channel.json", "../../ripple-lib/dist/npm/common/schemas/output/prepare.json", "../../ripple-lib/dist/npm/common/schemas/output/ledger-event.json", "../../ripple-lib/dist/npm/common/schemas/output/get-paths.json", "../../ripple-lib/dist/npm/common/schemas/output/get-server-info.json", "../../ripple-lib/dist/npm/common/schemas/output/get-settings.json", "../../ripple-lib/dist/npm/common/schemas/output/orderbook-orders.json", "../../ripple-lib/dist/npm/common/schemas/output/outcome.json", "../../ripple-lib/dist/npm/common/schemas/output/get-transaction.json", "../../ripple-lib/dist/npm/common/schemas/output/get-transactions.json", "../../ripple-lib/dist/npm/common/schemas/output/get-trustlines.json", "../../ripple-lib/dist/npm/common/schemas/output/sign-payment-channel-claim.json", "../../ripple-lib/dist/npm/common/schemas/output/verify-payment-channel-claim.json", "../../ripple-lib/dist/npm/common/schemas/input/get-balances.json", "../../ripple-lib/dist/npm/common/schemas/input/get-balance-sheet.json", "../../ripple-lib/dist/npm/common/schemas/input/get-ledger.json", "../../ripple-lib/dist/npm/common/schemas/input/get-orders.json", "../../ripple-lib/dist/npm/common/schemas/input/get-orderbook.json", "../../ripple-lib/dist/npm/common/schemas/input/get-paths.json", "../../ripple-lib/dist/npm/common/schemas/input/get-payment-channel.json", "../../ripple-lib/dist/npm/common/schemas/input/api-options.json", "../../ripple-lib/dist/npm/common/schemas/input/get-settings.json", "../../ripple-lib/dist/npm/common/schemas/input/get-account-info.json", "../../ripple-lib/dist/npm/common/schemas/input/get-account-objects.json", "../../ripple-lib/dist/npm/common/schemas/input/get-transaction.json", "../../ripple-lib/dist/npm/common/schemas/input/get-transactions.json", "../../ripple-lib/dist/npm/common/schemas/input/get-trustlines.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-payment.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-order.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-trustline.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-order-cancellation.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-settings.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-escrow-creation.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-escrow-cancellation.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-escrow-execution.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-payment-channel-create.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-payment-channel-fund.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-payment-channel-claim.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-check-create.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-check-cash.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-check-cancel.json", "../../ripple-lib/dist/npm/common/schemas/input/prepare-ticket-create.json", "../../ripple-lib/dist/npm/common/schemas/input/compute-ledger-hash.json", "../../ripple-lib/dist/npm/common/schemas/input/sign.json", "../../ripple-lib/dist/npm/common/schemas/input/submit.json", "../../ripple-lib/dist/npm/common/schemas/input/generate-address.json", "../../ripple-lib/dist/npm/common/schemas/input/sign-payment-channel-claim.json", "../../ripple-lib/dist/npm/common/schemas/input/verify-payment-channel-claim.json", "../../ripple-lib/dist/npm/common/schemas/input/combine.json", "../../ripple-lib/src/common/schema-validator.ts", "../../ripple-lib/src/common/validate.ts", "../../ripple-lib/src/common/serverinfo.ts", "../../ripple-lib/src/common/wswrapper.ts", "../../ripple-lib/src/common/rangeset.ts", "../../ripple-lib/src/common/backoff.ts", "browser-external:https-proxy-agent", "../../ripple-lib/src/common/connection.ts", "../../ripple-lib/src/common/index.ts", "../../ripple-lib/src/server/server.ts", "../../ripple-lib/src/ledger/utils.ts", "../../ripple-lib-transactionparser/src/utils.js", "../../ripple-lib-transactionparser/src/balancechanges.js", "../../ripple-lib-transactionparser/src/quality.js", "../../ripple-lib-transactionparser/src/orderbookchanges.js", "../../ripple-lib-transactionparser/src/channelchanges.js", "../../ripple-lib-transactionparser/src/index.js", "../../ripple-lib/src/ledger/parse/amount.ts", "../../ripple-lib/src/ledger/parse/utils.ts", "../../ripple-lib/src/ledger/parse/fields.ts", "../../ripple-lib/src/ledger/parse/settings.ts", "../../ripple-lib/src/ledger/parse/account-delete.ts", "../../ripple-lib/src/ledger/parse/check-cancel.ts", "../../ripple-lib/src/ledger/parse/check-cash.ts", "../../ripple-lib/src/ledger/parse/check-create.ts", "../../ripple-lib/src/ledger/parse/deposit-preauth.ts", "../../ripple-lib/src/ledger/parse/escrow-cancellation.ts", "../../ripple-lib/src/ledger/parse/escrow-creation.ts", "../../ripple-lib/src/ledger/parse/escrow-execution.ts", "../../ripple-lib/src/ledger/parse/cancellation.ts", "../../ripple-lib/src/ledger/parse/order.ts", "../../ripple-lib/src/ledger/parse/payment.ts", "../../ripple-lib/src/ledger/parse/payment-channel-claim.ts", "../../ripple-lib/src/ledger/parse/payment-channel-create.ts", "../../ripple-lib/src/ledger/parse/payment-channel-fund.ts", "../../ripple-lib/src/ledger/parse/ticket-create.ts", "../../ripple-lib/src/ledger/parse/trustline.ts", "../../ripple-lib/src/ledger/parse/amendment.ts", "../../ripple-lib/src/ledger/parse/fee-update.ts", "../../ripple-lib/src/ledger/parse/transaction.ts", "../../ripple-lib/src/ledger/transaction.ts", "../../ripple-binary-codec/dist/enums/definitions.json", "../../ripple-binary-codec/src/enums/bytes.ts", "../../ripple-binary-codec/src/serdes/binary-serializer.ts", "../../ripple-binary-codec/src/types/serialized-type.ts", "../../ripple-binary-codec/src/enums/constants.ts", "../../ripple-binary-codec/src/enums/field.ts", "../../ripple-binary-codec/src/enums/xrpl-definitions-base.ts", "../../ripple-binary-codec/src/enums/index.ts", "../../ripple-binary-codec/src/types/hash.ts", "../../ripple-binary-codec/src/types/hash-160.ts", "../../ripple-binary-codec/src/types/account-id.ts", "../../decimal.js/decimal.js", "../../ripple-binary-codec/src/serdes/binary-parser.ts", "../../ripple-binary-codec/src/types/currency.ts", "../../big-integer/BigInteger.js", "../../ripple-binary-codec/src/types/amount.ts", "../../ripple-binary-codec/src/types/blob.ts", "../../ripple-binary-codec/src/types/hash-128.ts", "../../ripple-binary-codec/src/types/hash-256.ts", "../../ripple-binary-codec/src/types/issue.ts", "../../ripple-binary-codec/src/types/path-set.ts", "../../ripple-binary-codec/src/types/st-object.ts", "../../ripple-binary-codec/src/types/st-array.ts", "../../ripple-binary-codec/src/types/uint.ts", "../../ripple-binary-codec/src/types/uint-16.ts", "../../ripple-binary-codec/src/types/uint-32.ts", "../../ripple-binary-codec/src/types/uint-64.ts", "../../ripple-binary-codec/src/types/uint-8.ts", "../../ripple-binary-codec/src/types/vector-256.ts", "../../ripple-binary-codec/src/types/xchain-bridge.ts", "../../ripple-binary-codec/src/types/index.ts", "../../ripple-binary-codec/src/hash-prefixes.ts", "../../ripple-binary-codec/src/hashes.ts", "../../ripple-binary-codec/src/binary.ts", "../../ripple-binary-codec/src/shamap.ts", "../../ripple-binary-codec/src/ledger-hashes.ts", "../../ripple-binary-codec/src/quality.ts", "../../ripple-binary-codec/src/coretypes.ts", "../../ripple-binary-codec/src/enums/xrpl-definitions.ts", "../../ripple-binary-codec/src/index.ts", "../../ripple-lib/src/common/hashes/sha512Half.ts", "../../ripple-lib/src/common/hashes/hash-prefix.ts", "../../ripple-lib/src/common/hashes/shamap.ts", "../../ripple-lib/src/common/hashes/ledgerspaces.ts", "../../ripple-lib/src/common/hashes/index.ts", "../../ripple-lib/src/ledger/transactions.ts", "../../ripple-lib/src/ledger/parse/account-trustline.ts", "../../ripple-lib/src/ledger/trustlines.ts", "../../ripple-lib/src/ledger/balances.ts", "../../ripple-lib/src/ledger/balance-sheet.ts", "../../ripple-lib/src/ledger/parse/pathfind.ts", "../../ripple-lib/src/ledger/pathfind.ts", "../../ripple-lib/src/ledger/parse/flags.ts", "../../ripple-lib/src/ledger/parse/account-order.ts", "../../ripple-lib/src/ledger/orders.ts", "../../ripple-lib/src/ledger/parse/orderbook-order.ts", "../../ripple-lib/src/ledger/orderbook.ts", "../../ripple-lib/src/ledger/settings.ts", "../../ripple-lib/src/ledger/accountinfo.ts", "../../ripple-lib/src/ledger/accountobjects.ts", "../../ripple-lib/src/ledger/parse/payment-channel.ts", "../../ripple-lib/src/ledger/payment-channel.ts", "../../ripple-lib/src/transaction/utils.ts", "../../ripple-lib/src/transaction/payment.ts", "../../ripple-lib/src/transaction/trustline.ts", "../../ripple-lib/src/transaction/order.ts", "../../ripple-lib/src/transaction/ordercancellation.ts", "../../ripple-lib/src/transaction/escrow-creation.ts", "../../ripple-lib/src/transaction/escrow-execution.ts", "../../ripple-lib/src/transaction/escrow-cancellation.ts", "../../ripple-lib/src/transaction/payment-channel-create.ts", "../../ripple-lib/src/transaction/payment-channel-fund.ts", "../../ripple-lib/src/transaction/payment-channel-claim.ts", "../../ripple-lib/src/transaction/check-create.ts", "../../ripple-lib/src/transaction/check-cancel.ts", "../../ripple-lib/src/transaction/check-cash.ts", "../../ripple-lib/src/transaction/settings.ts", "../../ripple-lib/src/transaction/ticket.ts", "../../ripple-lib/src/transaction/sign.ts", "../../ripple-lib/src/transaction/combine.ts", "../../ripple-lib/src/transaction/submit.ts", "../../ripple-lib/src/offline/derive.ts", "../../ripple-lib/src/offline/ledgerhash.ts", "../../ripple-lib/src/offline/sign-payment-channel-claim.ts", "../../ripple-lib/src/offline/verify-payment-channel-claim.ts", "../../ripple-lib/src/offline/generate-address.ts", "../../ripple-lib/src/offline/utils.ts", "../../ripple-lib/src/ledger/parse/ledger.ts", "../../ripple-lib/src/ledger/ledger.ts", "../../stream-http/lib/capability.js", "../../readable-stream/readable-browser.js", "../../stream-http/lib/response.js", "../../stream-http/lib/request.js", "../../builtin-status-codes/browser.js", "../../stream-http/index.js", "../../https-browserify/index.js", "../../ripple-lib/src/wallet/wallet-generation.ts", "../../ripple-lib/src/api.ts", "../../ripple-lib/dist/npm/transaction/types.js", "../../ripple-lib/dist/npm/common/types/objects/ledger.js", "../../ripple-lib/src/broadcast.ts", "../../ripple-lib/src/index.ts"],
  "sourcesContent": [null, null, null, null, "// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n/* eslint node-core/alphabetize-errors: \"error\" */\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar codes = {};\n\n// Lazy loaded\nvar assert;\nvar util;\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _super.call(this, getMessage(arg1, arg2, arg3));\n      _this.code = code;\n      return _this;\n    }\n    return _createClass(NodeError);\n  }(Base);\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\");\n\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n  var msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  // TODO(BridgeAR): Improve the output by showing `null` and similar.\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;", "// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n'use strict';\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _require = require('util/'),\n  inspect = _require.inspect;\nvar _require2 = require('../errors'),\n  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n  while (count) {\n    str += str;\n    count--;\n  }\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nvar kMaxShortLength = 10;\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = '';\n\n  // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  }\n\n  // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length;\n    // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n  var maxLines = Math.max(actualLines.length, expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the expected line to the cache.\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++;\n      // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the actual line to the result.\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++;\n      // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i];\n      // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        }\n        // Mark the current line as the last diverging one.\n        lastPos = i;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2;\n        // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~20 rows max)\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\nvar AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError(options) {\n    var _this;\n    _classCallCheck(this, AssertionError);\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    var message = options.message,\n      operator = options.operator,\n      stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n      expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    if (message != null) {\n      _this = _super.call(this, String(message));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _super.call(this, createErrDiff(actual, expected, operator));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n');\n\n        // In case \"actual\" is an object, it should not be reference equal.\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n          while (res.length > 27) {\n            res.pop();\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          _this = _super.call(this, \"\".concat(base, \" \").concat(res[0]));\n        } else {\n          _this = _super.call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\"));\n        }\n      } else {\n        var _res = inspectValue(actual);\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n        _this = _super.call(this, \"\".concat(_res).concat(other));\n      }\n    }\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    }\n    // Create error message including the error code in the name.\n    _this.stack;\n    // Reset the name.\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: _inspect$custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);\nmodule.exports = AssertionError;", "'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n", "'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n", "'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n", "'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n", "'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n", "'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar regexFlagsSupported = /a/g.flags !== undefined;\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\nvar _require$types = require('util/').types,\n  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n  isArrayBufferView = _require$types.isArrayBufferView,\n  isDate = _require$types.isDate,\n  isMap = _require$types.isMap,\n  isRegExp = _require$types.isRegExp,\n  isSet = _require$types.isSet,\n  isNativeError = _require$types.isNativeError,\n  isBoxedPrimitive = _require$types.isBoxedPrimitive,\n  isNumberObject = _require$types.isNumberObject,\n  isStringObject = _require$types.isStringObject,\n  isBooleanObject = _require$types.isBooleanObject,\n  isBigIntObject = _require$types.isBigIntObject,\n  isSymbolObject = _require$types.isSymbolObject,\n  isFloat32Array = _require$types.isFloat32Array,\n  isFloat64Array = _require$types.isFloat64Array;\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  }\n  // The maximum size for an array is 2 ** 32 -1.\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n}\n\n// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3;\n\n// Check if they have the same source and flags\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n}\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n      return false;\n    }\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n  // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2);\n\n    // The pair must have the same number of owned properties.\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  var i = 0;\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  }\n\n  // Use memos to handle cycles.\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n    memos.position++;\n  }\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n  return false;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n    case 'symbol':\n      return false;\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n  }\n  return true;\n}\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = b.get(altValue);\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i];\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false;\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(val);\n    }\n  }\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i];\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n  return false;\n}\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n      key = _aEntries$i[0],\n      item1 = _aEntries$i[1];\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false;\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n        if (set === null) {\n          set = new Set();\n        }\n        set.add(key);\n      }\n    }\n  }\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n        _key = _bEntries$_i[0],\n        item = _bEntries$_i[1];\n      if (_typeof(_key) === 'object' && _key !== null) {\n        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i++) {\n    var _key2 = keys[i];\n    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};", "// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar _require = require('./internal/errors'),\n  _require$codes = _require.codes,\n  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\nvar AssertionError = require('./internal/assert/assertion_error');\nvar _require2 = require('util/'),\n  inspect = _require2.inspect;\nvar _require$types = require('util/').types,\n  isPromise = _require$types.isPromise,\n  isRegExp = _require$types.isRegExp;\nvar objectAssign = require('object.assign/polyfill')();\nvar objectIs = require('object-is/polyfill')();\nvar RegExpPrototypeTest = require('call-bind/callBound')('RegExp.prototype.test');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\nvar warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n    if (argsLen === 2) operator = '!=';\n  }\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n  var err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n  throw err;\n}\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n// Pure assertion tests whether a value is truthy, as determined\n// by !!value.\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\nassert.ok = ok;\n\n// The equality assertion tests shallow, coercive equality with ==.\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n};\n\n// The non-equality assertion tests for whether two objects are not\n// equal with !=.\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n};\n\n// The equivalence assertion tests a deep equality relation.\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n// The non-equivalence assertion tests for any deep inequality.\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\nvar Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {\n  var _this = this;\n  _classCallCheck(this, Comparison);\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n});\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);\n    // assert.doesNotThrow does not accept objects.\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    }\n\n    // Handle primitives properly.\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n    var keys = Object.keys(expected);\n    // Special handle errors to make sure the name and the message are compared\n    // as well.\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {\n        return;\n      }\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n  return expected.call({}, actual) === true;\n}\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn();\n      // Fail in case no promise is returned.\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n  throw actual;\n}\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    var origStack = err.stack;\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift();\n      // Filter all frames existing in err.stack.\n      var tmp1 = newErr.stack.split('\\n');\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n    throw newErr;\n  }\n};\n\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb\nfunction internalMatch(string, regexp, message, fn, fnName) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);\n  }\n  var match = fnName === 'match';\n  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    var generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ? 'The \"string\" argument must be of type string. Received type ' + \"\".concat(_typeof(string), \" (\").concat(inspect(string), \")\") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + \"\".concat(inspect(regexp), \". Input:\\n\\n\").concat(inspect(string), \"\\n\"));\n    var err = new AssertionError({\n      actual: string,\n      expected: regexp,\n      message: message,\n      operator: fnName,\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\nassert.match = function match(string, regexp, message) {\n  internalMatch(string, regexp, message, match, 'match');\n};\nassert.doesNotMatch = function doesNotMatch(string, regexp, message) {\n  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');\n};\n\n// Expose a strict only variant of assert\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;", "/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false,\n    throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > limit) {\n        throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n    }\n\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n\n            val = utils.maybeMap(\n                parseArrayValue(\n                    part.slice(pos + 1),\n                    options,\n                    isArray(obj[key]) ? obj[key].length : 0\n                ),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : utils.combine([], leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n        throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n    }\n\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode/');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n", "/* globals unknown */\n\n/**\n * @typedef {import('url').URLFormatOptions} URLFormatOptions\n * @typedef {import('url').UrlObject} UrlObject\n * @typedef {import('url').format} formatImport\n * @typedef {import('url').parse} parseImport\n * @typedef {import('url').resolve} resolveImport\n * @typedef {import('url').Url} UrlImport\n * @typedef {import('url').fileURLToPath} fileURLToPath\n * @typedef {import('url').pathToFileURL} pathToFileURL\n * @typedef {import('url').domainToUnicode} domainToUnicode\n * @typedef {import('url').domainToASCII} domainToASCII\n */\n\n// @ts-ignore\nimport { format, parse, resolve, resolveObject, Url } from 'url';\nimport { resolve as pathResolve } from 'path';\n\nconst formatImport = /** @type {formatImport}*/ (format);\nconst parseImport = /** @type {parseImport}*/ (parse);\nconst resolveImport = /** @type {resolveImport}*/ (resolve);\n// @ts-ignore\nconst UrlImport = /** @type {UrlImport}*/ (Url);\n\nconst URL = globalThis.URL;\n/* eslint-disable-next-line unicorn/prevent-abbreviations */\nconst URLSearchParams = globalThis.URLSearchParams;\n\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\nconst CHAR_FORWARD_SLASH = 47;\n\n/**\n * @param {unknown} instance\n */\nfunction isURLInstance(instance) {\n\tconst resolved = /** @type {URL|null} */ (instance ?? null);\n\treturn Boolean(resolved !== null && resolved?.href && resolved?.origin);\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n\tif (url.hostname !== '') {\n\t\tthrow new TypeError(\n\t\t\t`File URL host must be \"localhost\" or empty on browser`\n\t\t);\n\t}\n\tconst pathname = url.pathname;\n\tfor (let n = 0; n < pathname.length; n++) {\n\t\tif (pathname[n] === '%') {\n\t\t\t// @ts-ignore\n\t\t\tconst third = pathname.codePointAt(n + 2) | 0x20;\n\t\t\tif (pathname[n + 1] === '2' && third === 102) {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t'File URL path must not include encoded / characters'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\treturn decodeURIComponent(pathname);\n}\n\n/**\n * @param {string} filepath\n */\nfunction encodePathChars(filepath) {\n\tif (filepath.includes('%')) {\n\t\tfilepath = filepath.replace(percentRegEx, '%25');\n\t}\n\tif (filepath.includes('\\\\')) {\n\t\tfilepath = filepath.replace(backslashRegEx, '%5C');\n\t}\n\tif (filepath.includes('\\n')) {\n\t\tfilepath = filepath.replace(newlineRegEx, '%0A');\n\t}\n\tif (filepath.includes('\\r')) {\n\t\tfilepath = filepath.replace(carriageReturnRegEx, '%0D');\n\t}\n\tif (filepath.includes('\\t')) {\n\t\tfilepath = filepath.replace(tabRegEx, '%09');\n\t}\n\treturn filepath;\n}\n\nconst domainToASCII =\n\t/**\n\t * @type {domainToASCII}\n\t */\n\tfunction (domain) {\n\t\tif (typeof domain === 'undefined') {\n\t\t\tthrow new TypeError('The \"domain\" argument must be specified');\n\t\t}\n\t\treturn new URL(`http://${domain}`).hostname;\n\t};\n\nconst domainToUnicode =\n\t/**\n\t * @type {domainToUnicode}\n\t */\n\tfunction (domain) {\n\t\tif (typeof domain === 'undefined') {\n\t\t\tthrow new TypeError('The \"domain\" argument must be specified');\n\t\t}\n\t\treturn new URL(`http://${domain}`).hostname;\n\t};\n\nconst pathToFileURL =\n\t/**\n\t * @type {(url: string) => URL}\n\t */\n\tfunction (filepath) {\n\t\tconst outURL = new URL('file://');\n\t\tlet resolved = pathResolve(filepath);\n\t\tconst filePathLast = filepath.charCodeAt(filepath.length - 1);\n\t\tif (\n\t\t\tfilePathLast === CHAR_FORWARD_SLASH &&\n\t\t\tresolved[resolved.length - 1] !== '/'\n\t\t) {\n\t\t\tresolved += '/';\n\t\t}\n\t\toutURL.pathname = encodePathChars(resolved);\n\t\treturn outURL;\n\t};\n\nconst fileURLToPath =\n\t/**\n\t * @type {fileURLToPath & ((path: string | URL) => string)}\n\t */\n\tfunction (path) {\n\t\tif (!isURLInstance(path) && typeof path !== 'string') {\n\t\t\tthrow new TypeError(\n\t\t\t\t`The \"path\" argument must be of type string or an instance of URL. Received type ${typeof path} (${path})`\n\t\t\t);\n\t\t}\n\t\tconst resolved = new URL(path);\n\t\tif (resolved.protocol !== 'file:') {\n\t\t\tthrow new TypeError('The URL must be of scheme file');\n\t\t}\n\t\treturn getPathFromURLPosix(resolved);\n\t};\n\nconst formatImportWithOverloads =\n\t/**\n\t * @type {(\n\t *   ((urlObject: URL, options?: URLFormatOptions) => string) &\n\t *   ((urlObject: UrlObject | string, options?: never) => string)\n\t * )}\n\t */\n\tfunction (urlObject, options = {}) {\n\t\tif (!(urlObject instanceof URL)) {\n\t\t\treturn formatImport(urlObject);\n\t\t}\n\n\t\tif (typeof options !== 'object' || options === null) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'The \"options\" argument must be of type object.'\n\t\t\t);\n\t\t}\n\n\t\tconst auth = options.auth ?? true;\n\t\tconst fragment = options.fragment ?? true;\n\t\tconst search = options.search ?? true;\n\t\tconst unicode = options.unicode ?? false;\n\n\t\tconst parsed = new URL(urlObject.toString());\n\n\t\tif (!auth) {\n\t\t\tparsed.username = '';\n\t\t\tparsed.password = '';\n\t\t}\n\n\t\tif (!fragment) {\n\t\t\tparsed.hash = '';\n\t\t}\n\n\t\tif (!search) {\n\t\t\tparsed.search = '';\n\t\t}\n\n\t\tif (unicode) {\n\t\t\t// Not implemented\n\t\t}\n\n\t\treturn parsed.toString();\n\t};\n\nconst api = {\n\tformat: formatImportWithOverloads,\n\tparse: parseImport,\n\tresolve: resolveImport,\n\tresolveObject,\n\tUrl: UrlImport,\n\tURL,\n\tURLSearchParams,\n\tdomainToASCII,\n\tdomainToUnicode,\n\tpathToFileURL,\n\tfileURLToPath\n};\n\nexport default api;\n\nexport {\n\tformatImportWithOverloads as format,\n\tparseImport as parse,\n\tresolveImport as resolve,\n\tresolveObject,\n\tUrlImport as Url,\n\tURL,\n\tURLSearchParams,\n\tdomainToASCII,\n\tdomainToUnicode,\n\tpathToFileURL,\n\tfileURLToPath\n};\n", "'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, propertyPath, name, argument) {\n  if (propertyPath) {\n    this.property = propertyPath;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    if (schema.id) {\n      this.schema = schema.id;\n    } else {\n      this.schema = schema;\n    }\n  }\n  if (instance) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.propertyPath);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.propertyPath, detail.name, detail.argument);\n  }\n\n  if (this.throwError) {\n    throw err;\n  }\n  this.errors.push(err);\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    Array.prototype.push.apply(this.errors, res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  { constructor: {value: SchemaError, enumerable: false}\n  , name: {value: 'SchemaError', enumerable: false}\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, propertyPath, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  this.propertyPath = propertyPath;\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var propertyPath = (propertyName===undefined) ? this.propertyPath : this.propertyPath+makeSuffix(propertyName);\n  var base = uri.resolve(this.base, schema.id||'');\n  var ctx = new SchemaContext(schema, this.options, propertyPath, base, Object.create(this.schemas));\n  if(schema.id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n}\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n  'uri': /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\\s]*$/,\n\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n  'style': /\\s*(.+?):\\s*([^;]+);?/g,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a instanceof Array) {\n    if (!(b instanceof Array)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e)\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e)\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key])\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n};\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n\t// ~ must be encoded explicitly because hacks\n\t// the slash is encoded by encodeURIComponent\n\treturn a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\n", "'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'exclusiveMinimum': true,\n  'exclusiveMaximum': true,\n  'additionalItems': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      return v.id && ('<' + v.id + '>') || (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchema(instance, options, ctx, callback, schema){\n  var res = this.validateSchema(instance, schema, options, ctx);\n  if (! res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchema.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n      ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var msg = (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchema.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n      ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(instance === undefined || !(instance instanceof Object)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, properties[property], options, ctx);\n    }\n\n    var prop = (instance || undefined) && instance[property];\n    var res = this.validateSchema(prop, properties[property], options, ctx.makeChild(properties[property], property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existance tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"additionalProperty \" + JSON.stringify(property) + \" exists in instance when not allowed\",\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(instance === undefined) return;\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var expr = new RegExp(pattern);\n      if (!expr.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, patternProperties[pattern], options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], patternProperties[pattern], options, ctx.makeChild(patternProperties[pattern], property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(instance === undefined) return;\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!instance || typeof instance !== 'object') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    })\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!instance || typeof instance !== 'object') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var self = this;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined || !schema.items) {\n    return result;\n  }\n  instance.every(function (value, i) {\n    var items = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (typeof instance !== 'number') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = true;\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    valid = instance > schema.minimum;\n  } else {\n    valid = instance >= schema.minimum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'minimum',\n      argument: schema.minimum,\n      message: \"must have a minimum value of \" + schema.minimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (typeof instance !== 'number') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid;\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    valid = instance < schema.maximum;\n  } else {\n    valid = instance <= schema.maximum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'maximum',\n      argument: schema.maximum,\n      message: \"must have a maximum value of \" + schema.maximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (typeof instance !== 'number') {\n    return null;\n  }\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument)\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n return validateMultipleOfOrDivisbleBy(instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy(instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatability with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\"\n    });\n  } else if (instance && typeof instance==='object' && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(instance[n]===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (typeof instance !== 'string') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.match(schema.pattern)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!(typeof instance === 'string')) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!(typeof instance === 'string')) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates that every item in an instance array is unique, when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(instance)) {\n    return result;\n  }\n  function testArrays (v, i, a) {\n    for (var j = i + 1; j < a.length; j++) if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n    return true;\n  }\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!instance || typeof instance != 'object') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var schemaId = type && type.id && ('<' + type.id + '>') || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n", "'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar ValidatorResult = helpers.ValidatorResult;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, uri) {\n  if (!schema) {\n    return null;\n  }\n  var ourUri = uri || schema.id;\n  this.addSubSchema(ourUri, schema);\n  if (ourUri) {\n    this.schemas[ourUri] = schema;\n  }\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchema = function addSubSchema(baseuri, schema) {\n  if(!schema || typeof schema!='object') return;\n  // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n  if(schema.$ref){\n    var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n    // Only mark unknown schemas as unresolved\n    if (this.schemas[resolvedUri] === undefined) {\n      this.schemas[resolvedUri] = null;\n      this.unresolvedRefs.push(resolvedUri);\n    }\n    return;\n  }\n  var ourUri = schema.id && urilib.resolve(baseuri, schema.id);\n  var ourBase = ourUri || baseuri;\n  if (ourUri) {\n    if(this.schemas[ourUri]){\n      if(!helpers.deepCompareStrict(this.schemas[ourUri], schema)){\n        throw new Error('Schema <'+schema+'> already exists with different definition');\n      }\n      return this.schemas[ourUri];\n    }\n    this.schemas[ourUri] = schema;\n    var documentUri = ourUri.replace(/^([^#]*)#$/, '$1');\n    this.schemas[documentUri] = schema;\n  }\n  this.addSubSchemaArray(ourBase, ((schema.items instanceof Array)?schema.items:[schema.items]));\n  this.addSubSchemaArray(ourBase, ((schema.extends instanceof Array)?schema.extends:[schema.extends]));\n  this.addSubSchema(ourBase, schema.additionalItems);\n  this.addSubSchemaObject(ourBase, schema.properties);\n  this.addSubSchema(ourBase, schema.additionalProperties);\n  this.addSubSchemaObject(ourBase, schema.definitions);\n  this.addSubSchemaObject(ourBase, schema.patternProperties);\n  this.addSubSchemaObject(ourBase, schema.dependencies);\n  this.addSubSchemaArray(ourBase, schema.disallow);\n  this.addSubSchemaArray(ourBase, schema.allOf);\n  this.addSubSchemaArray(ourBase, schema.anyOf);\n  this.addSubSchemaArray(ourBase, schema.oneOf);\n  this.addSubSchema(ourBase, schema.not);\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!(schemas instanceof Array)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if (!options) {\n    options = {};\n  }\n  var propertyName = options.propertyName || 'instance';\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var base = urilib.resolve(options.base||'/', schema.id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, propertyName, base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n  }\n  if (schema) {\n    var result = this.validateSchema(instance, schema, options, ctx);\n    if (!result) {\n      throw new Error('Result undefined');\n    }\n    return result;\n  }\n  throw new SchemaError('no schema specified', schema);\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema) {\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (schema['extends'] instanceof Array) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  var switchSchema;\n  if (switchSchema = shouldResolve(schema)) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.propertyPath, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n}\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref;\n  if(ref = shouldResolve(schema)) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n}\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance) === 'object' && !(instance instanceof Array) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n", "'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n", "type Sequence = number[] | Buffer | Uint8Array\n\n/**\n * Check whether two sequences (e.g. Arrays of numbers) are equal.\n *\n * @param arr1 - One of the arrays to compare.\n * @param arr2 - The other array to compare.\n */\nexport function seqEqual(arr1: Sequence, arr2: Sequence): boolean {\n  if (arr1.length !== arr2.length) {\n    return false\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Check whether a value is a sequence (e.g. Array of numbers).\n *\n * @param val - The value to check.\n */\nfunction isSequence(val: Sequence | number): val is Sequence {\n  return typeof val !== 'number'\n}\n\n/**\n * Concatenate all `arguments` into a single array. Each argument can be either\n * a single element or a sequence, which has a `length` property and supports\n * element retrieval via sequence[ix].\n *\n * > concatArgs(1, [2, 3], Buffer.from([4,5]), new Uint8Array([6, 7]));\n * [1,2,3,4,5,6,7]\n *\n * @param args - Concatenate of these args into a single array.\n * @returns Array of concatenated arguments\n */\nexport function concatArgs(...args: Array<number | Sequence>): number[] {\n  const ret: number[] = []\n\n  args.forEach((arg) => {\n    if (isSequence(arg)) {\n      for (const j of arg) {\n        ret.push(j)\n      }\n    } else {\n      ret.push(arg)\n    }\n  })\n  return ret\n}\n", "/**\n * Codec class\n */\n\nimport baseCodec = require('base-x')\nimport type { BaseConverter } from 'base-x'\nimport createHash = require('create-hash')\n\nimport { seqEqual, concatArgs } from './utils'\n\nclass Codec {\n  private readonly _sha256: (bytes: Uint8Array) => Buffer\n  private readonly _alphabet: string\n  private readonly _codec: BaseConverter\n\n  public constructor(options: {\n    sha256: (bytes: Uint8Array) => Buffer\n    alphabet: string\n  }) {\n    this._sha256 = options.sha256\n    this._alphabet = options.alphabet\n    this._codec = baseCodec(this._alphabet)\n  }\n\n  /**\n   * Encoder.\n   *\n   * @param bytes - Buffer of data to encode.\n   * @param opts - Options object including the version bytes and the expected length of the data to encode.\n   */\n  public encode(\n    bytes: Buffer,\n    opts: {\n      versions: number[]\n      expectedLength: number\n    },\n  ): string {\n    const versions = opts.versions\n    return this._encodeVersioned(bytes, versions, opts.expectedLength)\n  }\n\n  /**\n   * Decoder.\n   *\n   * @param base58string - Base58Check-encoded string to decode.\n   * @param opts - Options object including the version byte(s) and the expected length of the data after decoding.\n   */\n  /* eslint-disable max-lines-per-function --\n   * TODO refactor */\n  public decode(\n    base58string: string,\n    opts: {\n      versions: Array<number | number[]>\n      expectedLength?: number\n      versionTypes?: ['ed25519', 'secp256k1']\n    },\n  ): {\n    version: number[]\n    bytes: Buffer\n    type: 'ed25519' | 'secp256k1' | null\n  } {\n    const versions = opts.versions\n    const types = opts.versionTypes\n\n    const withoutSum = this.decodeChecked(base58string)\n\n    if (versions.length > 1 && !opts.expectedLength) {\n      throw new Error(\n        'expectedLength is required because there are >= 2 possible versions',\n      )\n    }\n    const versionLengthGuess =\n      typeof versions[0] === 'number' ? 1 : versions[0].length\n    const payloadLength =\n      opts.expectedLength ?? withoutSum.length - versionLengthGuess\n    const versionBytes = withoutSum.slice(0, -payloadLength)\n    const payload = withoutSum.slice(-payloadLength)\n\n    for (let i = 0; i < versions.length; i++) {\n      /* eslint-disable @typescript-eslint/consistent-type-assertions --\n       * TODO refactor */\n      const version: number[] = Array.isArray(versions[i])\n        ? (versions[i] as number[])\n        : [versions[i] as number]\n      if (seqEqual(versionBytes, version)) {\n        return {\n          version,\n          bytes: payload,\n          type: types ? types[i] : null,\n        }\n      }\n      /* eslint-enable @typescript-eslint/consistent-type-assertions */\n    }\n\n    throw new Error(\n      'version_invalid: version bytes do not match any of the provided version(s)',\n    )\n  }\n\n  public encodeChecked(buffer: Buffer): string {\n    const check = this._sha256(this._sha256(buffer)).slice(0, 4)\n    return this._encodeRaw(Buffer.from(concatArgs(buffer, check)))\n  }\n\n  public decodeChecked(base58string: string): Buffer {\n    const buffer = this._decodeRaw(base58string)\n    if (buffer.length < 5) {\n      throw new Error('invalid_input_size: decoded data must have length >= 5')\n    }\n    if (!this._verifyCheckSum(buffer)) {\n      throw new Error('checksum_invalid')\n    }\n    return buffer.slice(0, -4)\n  }\n\n  private _encodeVersioned(\n    bytes: Buffer,\n    versions: number[],\n    expectedLength: number,\n  ): string {\n    if (expectedLength && bytes.length !== expectedLength) {\n      throw new Error(\n        'unexpected_payload_length: bytes.length does not match expectedLength.' +\n          ' Ensure that the bytes are a Buffer.',\n      )\n    }\n    return this.encodeChecked(Buffer.from(concatArgs(versions, bytes)))\n  }\n\n  private _encodeRaw(bytes: Buffer): string {\n    return this._codec.encode(bytes)\n  }\n  /* eslint-enable max-lines-per-function */\n\n  private _decodeRaw(base58string: string): Buffer {\n    return this._codec.decode(base58string)\n  }\n\n  private _verifyCheckSum(bytes: Buffer): boolean {\n    const computed = this._sha256(this._sha256(bytes.slice(0, -4))).slice(0, 4)\n    const checksum = bytes.slice(-4)\n    return seqEqual(computed, checksum)\n  }\n}\n\n/**\n * XRP codec\n */\n\n// base58 encodings: https://xrpl.org/base58-encodings.html\n// Account address (20 bytes)\nconst ACCOUNT_ID = 0\n// Account public key (33 bytes)\nconst ACCOUNT_PUBLIC_KEY = 0x23\n// 33; Seed value (for secret keys) (16 bytes)\nconst FAMILY_SEED = 0x21\n// 28; Validation public key (33 bytes)\nconst NODE_PUBLIC = 0x1c\n\n// [1, 225, 75]\nconst ED25519_SEED = [0x01, 0xe1, 0x4b]\n\nconst codecOptions = {\n  sha256(bytes: Uint8Array): Buffer {\n    return createHash('sha256').update(Buffer.from(bytes)).digest()\n  },\n  alphabet: 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz',\n}\n\nconst codecWithXrpAlphabet = new Codec(codecOptions)\n\nexport const codec = codecWithXrpAlphabet\n\n// entropy is a Buffer of size 16\n// type is 'ed25519' or 'secp256k1'\nexport function encodeSeed(\n  entropy: Buffer,\n  type: 'ed25519' | 'secp256k1',\n): string {\n  if (entropy.length !== 16) {\n    throw new Error('entropy must have length 16')\n  }\n  const opts = {\n    expectedLength: 16,\n\n    // for secp256k1, use `FAMILY_SEED`\n    versions: type === 'ed25519' ? ED25519_SEED : [FAMILY_SEED],\n  }\n\n  // prefixes entropy with version bytes\n  return codecWithXrpAlphabet.encode(entropy, opts)\n}\n\nexport function decodeSeed(\n  seed: string,\n  opts: {\n    versionTypes: ['ed25519', 'secp256k1']\n    versions: Array<number | number[]>\n    expectedLength: number\n  } = {\n    versionTypes: ['ed25519', 'secp256k1'],\n    versions: [ED25519_SEED, FAMILY_SEED],\n    expectedLength: 16,\n  },\n): {\n  version: number[]\n  bytes: Buffer\n  type: 'ed25519' | 'secp256k1' | null\n} {\n  return codecWithXrpAlphabet.decode(seed, opts)\n}\n\nexport function encodeAccountID(bytes: Buffer): string {\n  const opts = { versions: [ACCOUNT_ID], expectedLength: 20 }\n  return codecWithXrpAlphabet.encode(bytes, opts)\n}\n\n/* eslint-disable import/no-unused-modules ---\n * unclear why this is aliased but we should keep it in case someone else is\n * importing it with the aliased name */\nexport const encodeAddress = encodeAccountID\n/* eslint-enable import/no-unused-modules */\n\nexport function decodeAccountID(accountId: string): Buffer {\n  const opts = { versions: [ACCOUNT_ID], expectedLength: 20 }\n  return codecWithXrpAlphabet.decode(accountId, opts).bytes\n}\n\n/* eslint-disable import/no-unused-modules ---\n * unclear why this is aliased but we should keep it in case someone else is\n * importing it with the aliased name */\nexport const decodeAddress = decodeAccountID\n/* eslint-enable import/no-unused-modules */\n\nexport function decodeNodePublic(base58string: string): Buffer {\n  const opts = { versions: [NODE_PUBLIC], expectedLength: 33 }\n  return codecWithXrpAlphabet.decode(base58string, opts).bytes\n}\n\nexport function encodeNodePublic(bytes: Buffer): string {\n  const opts = { versions: [NODE_PUBLIC], expectedLength: 33 }\n  return codecWithXrpAlphabet.encode(bytes, opts)\n}\n\nexport function encodeAccountPublic(bytes: Buffer): string {\n  const opts = { versions: [ACCOUNT_PUBLIC_KEY], expectedLength: 33 }\n  return codecWithXrpAlphabet.encode(bytes, opts)\n}\n\nexport function decodeAccountPublic(base58string: string): Buffer {\n  const opts = { versions: [ACCOUNT_PUBLIC_KEY], expectedLength: 33 }\n  return codecWithXrpAlphabet.decode(base58string, opts).bytes\n}\n\nexport function isValidClassicAddress(address: string): boolean {\n  try {\n    decodeAccountID(address)\n  } catch (_error) {\n    return false\n  }\n  return true\n}\n", "import * as assert from 'assert'\n\nimport {\n  codec,\n  encodeSeed,\n  decodeSeed,\n  encodeAccountID,\n  decodeAccountID,\n  encodeNodePublic,\n  decodeNodePublic,\n  encodeAccountPublic,\n  decodeAccountPublic,\n  isValidClassicAddress,\n} from './xrp-codec'\n\nconst PREFIX_BYTES = {\n  // 5, 68\n  main: Buffer.from([0x05, 0x44]),\n  // 4, 147\n  test: Buffer.from([0x04, 0x93]),\n}\n\nconst MAX_32_BIT_UNSIGNED_INT = 4294967295\n\nfunction classicAddressToXAddress(\n  classicAddress: string,\n  tag: number | false,\n  test: boolean,\n): string {\n  const accountId = decodeAccountID(classicAddress)\n  return encodeXAddress(accountId, tag, test)\n}\n\nfunction encodeXAddress(\n  accountId: Buffer,\n  tag: number | false,\n  test: boolean,\n): string {\n  if (accountId.length !== 20) {\n    // RIPEMD160 is 160 bits = 20 bytes\n    throw new Error('Account ID must be 20 bytes')\n  }\n  if (tag > MAX_32_BIT_UNSIGNED_INT) {\n    throw new Error('Invalid tag')\n  }\n  const theTag = tag || 0\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- Passing null is a common js mistake\n  const flag = tag === false || tag == null ? 0 : 1\n  /* eslint-disable no-bitwise ---\n   * need to use bitwise operations here */\n  const bytes = Buffer.concat([\n    test ? PREFIX_BYTES.test : PREFIX_BYTES.main,\n    accountId,\n    Buffer.from([\n      // 0x00 if no tag, 0x01 if 32-bit tag\n      flag,\n      // first byte\n      theTag & 0xff,\n      // second byte\n      (theTag >> 8) & 0xff,\n      // third byte\n      (theTag >> 16) & 0xff,\n      // fourth byte\n      (theTag >> 24) & 0xff,\n      0,\n      0,\n      0,\n      // four zero bytes (reserved for 64-bit tags)\n      0,\n    ]),\n  ])\n  /* eslint-enable no-bitwise */\n  return codec.encodeChecked(bytes)\n}\n\nfunction xAddressToClassicAddress(xAddress: string): {\n  classicAddress: string\n  tag: number | false\n  test: boolean\n} {\n  /* eslint-disable @typescript-eslint/naming-convention --\n   * TODO 'test' should be something like 'isTest', do this later\n   */\n  const { accountId, tag, test } = decodeXAddress(xAddress)\n  /* eslint-enable @typescript-eslint/naming-convention */\n  const classicAddress = encodeAccountID(accountId)\n  return {\n    classicAddress,\n    tag,\n    test,\n  }\n}\n\nfunction decodeXAddress(xAddress: string): {\n  accountId: Buffer\n  tag: number | false\n  test: boolean\n} {\n  const decoded = codec.decodeChecked(xAddress)\n  /* eslint-disable @typescript-eslint/naming-convention --\n   * TODO 'test' should be something like 'isTest', do this later\n   */\n  const test = isBufferForTestAddress(decoded)\n  /* eslint-enable @typescript-eslint/naming-convention */\n  const accountId = decoded.slice(2, 22)\n  const tag = tagFromBuffer(decoded)\n  return {\n    accountId,\n    tag,\n    test,\n  }\n}\n\nfunction isBufferForTestAddress(buf: Buffer): boolean {\n  const decodedPrefix = buf.slice(0, 2)\n  if (PREFIX_BYTES.main.equals(decodedPrefix)) {\n    return false\n  }\n  if (PREFIX_BYTES.test.equals(decodedPrefix)) {\n    return true\n  }\n\n  throw new Error('Invalid X-address: bad prefix')\n}\n\nfunction tagFromBuffer(buf: Buffer): number | false {\n  const flag = buf[22]\n  if (flag >= 2) {\n    // No support for 64-bit tags at this time\n    throw new Error('Unsupported X-address')\n  }\n  if (flag === 1) {\n    // Little-endian to big-endian\n    return buf[23] + buf[24] * 0x100 + buf[25] * 0x10000 + buf[26] * 0x1000000\n  }\n  assert.strictEqual(flag, 0, 'flag must be zero to indicate no tag')\n  assert.ok(\n    Buffer.from('0000000000000000', 'hex').equals(buf.slice(23, 23 + 8)),\n    'remaining bytes must be zero',\n  )\n  return false\n}\n\nfunction isValidXAddress(xAddress: string): boolean {\n  try {\n    decodeXAddress(xAddress)\n  } catch (_error) {\n    return false\n  }\n  return true\n}\n\nexport {\n  // Codec with XRP alphabet\n  codec,\n  // Encode entropy as a \"seed\"\n  encodeSeed,\n  // Decode a seed into an object with its version, type, and bytes\n  decodeSeed,\n  // Encode bytes as a classic address (r...)\n  encodeAccountID,\n  // Decode a classic address to its raw bytes\n  decodeAccountID,\n  // Encode bytes to XRP Ledger node public key format\n  encodeNodePublic,\n  // Decode an XRP Ledger node public key into its raw bytes\n  decodeNodePublic,\n  // Encode a public key, as for payment channels\n  encodeAccountPublic,\n  // Decode a public key, as for payment channels\n  decodeAccountPublic,\n  // Check whether a classic address (r...) is valid\n  isValidClassicAddress,\n  // Derive X-address from classic address, tag, and network ID\n  classicAddressToXAddress,\n  // Encode account ID, tag, and network ID to X-address\n  encodeXAddress,\n  // Decode X-address to account ID, tag, and network ID\n  xAddressToClassicAddress,\n  // Convert X-address to classic address, tag, and network ID\n  decodeXAddress,\n  // Check whether an X-address (X...) is valid\n  isValidXAddress,\n}\n", ";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.2.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // The index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n", "/* eslint-disable no-bitwise --\n * lots of bitwise operators necessary for this */\nimport * as hashjs from 'hash.js'\nimport BigNum = require('bn.js')\n\nexport default class Sha512 {\n  // TODO: type of `hash`?\n  hash: any\n\n  constructor() {\n    this.hash = hashjs.sha512()\n  }\n\n  add(bytes) {\n    this.hash.update(bytes)\n    return this\n  }\n\n  addU32(i) {\n    return this.add([\n      (i >>> 24) & 0xff,\n      (i >>> 16) & 0xff,\n      (i >>> 8) & 0xff,\n      i & 0xff,\n    ])\n  }\n\n  finish() {\n    return this.hash.digest()\n  }\n\n  first256() {\n    return this.finish().slice(0, 32)\n  }\n\n  first256BN() {\n    return new BigNum(this.first256())\n  }\n}\n", "import * as elliptic from 'elliptic'\n\nimport Sha512 from './Sha512'\n\nconst secp256k1 = elliptic.ec('secp256k1')\n\nfunction deriveScalar(bytes, discrim?: number) {\n  const order = secp256k1.curve.n\n  for (let i = 0; i <= 0xffffffff; i++) {\n    // We hash the bytes to find a 256 bit number, looping until we are sure it\n    // is less than the order of the curve.\n    const hasher = new Sha512().add(bytes)\n    // If the optional discriminator index was passed in, update the hash.\n    if (discrim !== undefined) {\n      hasher.addU32(discrim)\n    }\n    hasher.addU32(i)\n    const key = hasher.first256BN()\n    /* istanbul ignore else */\n    if (key.cmpn(0) > 0 && key.cmp(order) < 0) {\n      return key\n    }\n  }\n  // This error is practically impossible to reach.\n  // The order of the curve describes the (finite) amount of points on the curve\n  // https://github.com/indutny/elliptic/blob/master/lib/elliptic/curves.js#L182\n  // How often will an (essentially) random number generated by Sha512 be larger than that?\n  // There's 2^32 chances (the for loop) to get a number smaller than the order,\n  // and it's rare that you'll even get past the first loop iteration.\n  // Note that in TypeScript we actually need the throw, otherwise the function signature would be BN | undefined\n  //\n  /* istanbul ignore next */\n  throw new Error('impossible unicorn ;)')\n}\n\n/**\n * @param seed - Bytes.\n * @param [opts] - Object.\n * @param [opts.accountIndex=0] - The account number to generate.\n * @param [opts.validator=false] - Generate root key-pair,\n *                                              as used by validators.\n * @returns {bn.js} 256 bit scalar value.\n *\n */\nexport function derivePrivateKey(\n  seed,\n  opts: {\n    validator?: boolean\n    accountIndex?: number\n  } = {},\n) {\n  const root = opts.validator\n  const order = secp256k1.curve.n\n\n  // This private generator represents the `root` private key, and is what's\n  // used by validators for signing when a keypair is generated from a seed.\n  const privateGen = deriveScalar(seed)\n  if (root) {\n    // As returned by validation_create for a given seed\n    return privateGen\n  }\n  const publicGen = secp256k1.g.mul(privateGen)\n  // A seed can generate many keypairs as a function of the seed and a uint32.\n  // Almost everyone just uses the first account, `0`.\n  const accountIndex = opts.accountIndex || 0\n  return deriveScalar(publicGen.encodeCompressed(), accountIndex)\n    .add(privateGen)\n    .mod(order)\n}\n\nexport function accountPublicFromPublicGenerator(publicGenBytes) {\n  const rootPubPoint = secp256k1.curve.decodePoint(publicGenBytes)\n  const scalar = deriveScalar(publicGenBytes, 0)\n  const point = secp256k1.g.mul(scalar)\n  const offset = rootPubPoint.add(point)\n  return offset.encodeCompressed()\n}\n", "import * as assert from 'assert'\nimport * as hashjs from 'hash.js'\nimport BN = require('bn.js')\n\nfunction bytesToHex(a: Iterable<number> | ArrayLike<number>): string {\n  return Array.from(a, (byteValue) => {\n    const hex = byteValue.toString(16).toUpperCase()\n    return hex.length > 1 ? hex : `0${hex}`\n  }).join('')\n}\n\nfunction hexToBytes(a): number[] {\n  assert.ok(a.length % 2 === 0)\n  // Special-case length zero to return [].\n  // BN.toArray intentionally returns [0] rather than [] for length zero,\n  // which may make sense for BigNum data, but not for byte strings.\n  return a.length === 0 ? [] : new BN(a, 16).toArray(null, a.length / 2)\n}\n\nfunction computePublicKeyHash(publicKeyBytes: Buffer): Buffer {\n  const hash256 = hashjs.sha256().update(publicKeyBytes).digest()\n\n  const hash160 = hashjs.ripemd160().update(hash256).digest()\n  return Buffer.from(hash160)\n}\n\nexport { bytesToHex, hexToBytes, computePublicKeyHash }\n", "import * as assert from 'assert'\nimport brorand = require('brorand')\nimport * as hashjs from 'hash.js'\nimport * as elliptic from 'elliptic'\n\nimport * as addressCodec from 'ripple-address-codec'\nimport { derivePrivateKey, accountPublicFromPublicGenerator } from './secp256k1'\nimport * as utils from './utils'\n\nconst Ed25519 = elliptic.eddsa('ed25519')\nconst Secp256k1 = elliptic.ec('secp256k1')\n\nconst { hexToBytes } = utils\nconst { bytesToHex } = utils\n\nfunction generateSeed(\n  options: {\n    entropy?: Uint8Array\n    algorithm?: 'ed25519' | 'ecdsa-secp256k1'\n  } = {},\n): string {\n  assert.ok(\n    !options.entropy || options.entropy.length >= 16,\n    'entropy too short',\n  )\n  const entropy = options.entropy ? options.entropy.slice(0, 16) : brorand(16)\n  const type = options.algorithm === 'ed25519' ? 'ed25519' : 'secp256k1'\n  return addressCodec.encodeSeed(Buffer.from(entropy), type)\n}\n\nfunction hash(message): number[] {\n  return hashjs.sha512().update(message).digest().slice(0, 32)\n}\n\nconst secp256k1 = {\n  deriveKeypair(\n    entropy: Uint8Array,\n    options?: object,\n  ): {\n    privateKey: string\n    publicKey: string\n  } {\n    const prefix = '00'\n\n    const privateKey =\n      prefix + derivePrivateKey(entropy, options).toString(16, 64).toUpperCase()\n\n    const publicKey = bytesToHex(\n      Secp256k1.keyFromPrivate(privateKey.slice(2))\n        .getPublic()\n        .encodeCompressed(),\n    )\n    return { privateKey, publicKey }\n  },\n\n  sign(message, privateKey): string {\n    return bytesToHex(\n      Secp256k1.sign(hash(message), hexToBytes(privateKey), {\n        canonical: true,\n      }).toDER(),\n    )\n  },\n\n  verify(message, signature, publicKey): boolean {\n    return Secp256k1.verify(hash(message), signature, hexToBytes(publicKey))\n  },\n}\n\nconst ed25519 = {\n  deriveKeypair(entropy: Uint8Array): {\n    privateKey: string\n    publicKey: string\n  } {\n    const prefix = 'ED'\n    const rawPrivateKey = hash(entropy)\n    const privateKey = prefix + bytesToHex(rawPrivateKey)\n    const publicKey =\n      prefix + bytesToHex(Ed25519.keyFromSecret(rawPrivateKey).pubBytes())\n    return { privateKey, publicKey }\n  },\n\n  sign(message, privateKey): string {\n    // caution: Ed25519.sign interprets all strings as hex, stripping\n    // any non-hex characters without warning\n    assert.ok(Array.isArray(message), 'message must be array of octets')\n    return bytesToHex(\n      Ed25519.sign(message, hexToBytes(privateKey).slice(1)).toBytes(),\n    )\n  },\n\n  verify(message, signature, publicKey): boolean {\n    return Ed25519.verify(\n      message,\n      hexToBytes(signature),\n      hexToBytes(publicKey).slice(1),\n    )\n  },\n}\n\nfunction select(algorithm): any {\n  const methods = { 'ecdsa-secp256k1': secp256k1, ed25519 }\n  return methods[algorithm]\n}\n\nfunction deriveKeypair(\n  seed: string,\n  options?: object,\n): {\n  publicKey: string\n  privateKey: string\n} {\n  const decoded = addressCodec.decodeSeed(seed)\n  const algorithm = decoded.type === 'ed25519' ? 'ed25519' : 'ecdsa-secp256k1'\n  const method = select(algorithm)\n  const keypair = method.deriveKeypair(decoded.bytes, options)\n  const messageToVerify = hash('This test message should verify.')\n  const signature = method.sign(messageToVerify, keypair.privateKey)\n  /* istanbul ignore if */\n  if (method.verify(messageToVerify, signature, keypair.publicKey) !== true) {\n    throw new Error('derived keypair did not generate verifiable signature')\n  }\n  return keypair\n}\n\nfunction getAlgorithmFromKey(key): 'ed25519' | 'ecdsa-secp256k1' {\n  const bytes = hexToBytes(key)\n  return bytes.length === 33 && bytes[0] === 0xed\n    ? 'ed25519'\n    : 'ecdsa-secp256k1'\n}\n\nfunction sign(messageHex, privateKey): string {\n  const algorithm = getAlgorithmFromKey(privateKey)\n  return select(algorithm).sign(hexToBytes(messageHex), privateKey)\n}\n\nfunction verify(messageHex, signature, publicKey): boolean {\n  const algorithm = getAlgorithmFromKey(publicKey)\n  return select(algorithm).verify(hexToBytes(messageHex), signature, publicKey)\n}\n\nfunction deriveAddressFromBytes(publicKeyBytes: Buffer): string {\n  return addressCodec.encodeAccountID(\n    utils.computePublicKeyHash(publicKeyBytes),\n  )\n}\n\nfunction deriveAddress(publicKey): string {\n  return deriveAddressFromBytes(Buffer.from(hexToBytes(publicKey)))\n}\n\nfunction deriveNodeAddress(publicKey): string {\n  const generatorBytes = addressCodec.decodeNodePublic(publicKey)\n  const accountPublicBytes = accountPublicFromPublicGenerator(generatorBytes)\n  return deriveAddressFromBytes(accountPublicBytes)\n}\n\nconst { decodeSeed } = addressCodec\n\nexport {\n  generateSeed,\n  deriveKeypair,\n  sign,\n  verify,\n  deriveAddress,\n  deriveNodeAddress,\n  decodeSeed,\n}\n", null, "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"tx-json\",\n  \"link\": \"https://xrpl.org/transaction-formats.html\",\n  \"description\": \"An object in rippled txJSON format\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"Account\": {\"$ref\": \"address\"},\n    \"TransactionType\": {\"type\": \"string\"}\n  },\n  \"required\": [\"Account\", \"TransactionType\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"transactionType\",\n  \"link\": \"transaction-types\",\n  \"description\": \"The type of the transaction.\",\n  \"type\": \"string\",\n  \"enum\": [\n    \"payment\",\n    \"order\",\n    \"orderCancellation\",\n    \"trustline\",\n    \"settings\",\n    \"escrowCreation\",\n    \"escrowCancellation\",\n    \"escrowExecution\",\n    \"paymentChannelCreate\",\n    \"paymentChannelFund\",\n    \"paymentChannelClaim\",\n    \"checkCreate\",\n    \"checkCancel\",\n    \"checkCash\",\n    \"depositPreauth\",\n    \"accountDelete\"\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"hash128\",\n  \"description\": \"The hexadecimal representation of a 128-bit hash\",\n  \"type\": \"string\",\n  \"pattern\": \"^[A-F0-9]{32}$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"hash256\",\n  \"description\": \"The hexadecimal representation of a 256-bit hash\",\n  \"type\": \"string\",\n  \"pattern\": \"^[A-F0-9]{64}$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"sequence\",\n  \"link\": \"account-sequence-number\",\n  \"description\": \"An account transaction sequence number\",\n  \"type\": \"integer\",\n  \"minimum\": 0\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"ticket-sequence\",\n  \"link\": \"account-sequence-number\",\n  \"description\": \"An account transaction tickt sequence number\",\n  \"type\": \"integer\",\n  \"minimum\": 1\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"signature\",\n  \"description\": \"The hexadecimal representation of a signature.\",\n  \"type\": \"string\",\n  \"pattern\": \"^[A-F0-9]+$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"issue\",\n  \"description\": \"The currency code, and the counterparty if it's not XRP.\",\n  \"allOf\": [\n    {\"$ref\": \"amountbase\"},\n    {\"not\": {\"required\": [\"value\"]}}\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"ledgerVersion\",\n  \"description\": \"A ledger version number\",\n  \"oneOf\": [\n    {\n      \"type\": \"integer\",\n      \"minimum\": 1\n    },\n    {\n      \"type\": \"string\",\n      \"enum\": [\"validated\", \"closed\", \"current\"]\n    }\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"maxAdjustment\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address to send from.\"\n    },\n    \"maxAmount\": {\n      \"$ref\": \"laxAmount\",\n      \"description\": \"The maximum amount to send. (This field cannot be used with source.amount)\"\n    },\n    \"tag\": {\"$ref\": \"tag\"}\n  },\n  \"required\": [\"address\", \"maxAmount\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"memo\",\n  \"description\": \"Memo objects represent arbitrary data that can be included in a transaction\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"pattern\": \"^[A-Za-z0-9\\\\-._~:/?#[\\\\]@!$&'()*+,;=%]*$\",\n      \"description\": \"Conventionally, a unique relation (according to [RFC 5988](http://tools.ietf.org/html/rfc5988#section-4)) that defines the format of this memo. Only characters allowed in URLs are permitted.\"\n    },\n    \"format\": {\n      \"pattern\": \"^[A-Za-z0-9\\\\-._~:/?#[\\\\]@!$&'()*+,;=%]*$\",\n      \"description\": \"Conventionally containing information on how the memo is encoded, for example as a [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml). Only characters allowed in URLs are permitted.\"\n    },\n    \"data\": {\n      \"type\": \"string\",\n      \"description\": \"Arbitrary string, conventionally containing the content of the memo.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"anyOf\": [\n    {\"required\": [\"data\"]},\n    {\"required\": [\"type\"]}\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"memos\",\n  \"link\": \"transaction-memos\",\n  \"description\": \"Array of memos to attach to the transaction.\",\n  \"type\": \"array\",\n  \"items\": {\n    \"$ref\": \"memo\"\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"publicKey\",\n  \"description\": \"The hexadecimal representation of a secp256k1 or Ed25519 public key.\",\n  \"type\": \"string\",\n  \"pattern\": \"^[A-F0-9]+$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"privateKey\",\n  \"description\": \"The hexadecimal representation of a secp256k1 or Ed25519 private key.\",\n  \"type\": \"string\",\n  \"pattern\": \"^[A-F0-9]+$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"uint32\",\n  \"description\": \"A 32-bit unsigned integer\",\n  \"type\": \"integer\",\n  \"minimum\": 0,\n  \"maximum\": 4294967295\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"value\",\n  \"link\": \"value\",\n  \"description\": \"A string representation of a non-negative floating point number\",\n  \"type\": \"string\",\n  \"pattern\": \"^[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"sourceAdjustment\",\n  \"type\": \"object\",\n  \"oneOf\": [\n    {\"$ref\": \"sourceExactAdjustment\"},\n    {\"$ref\": \"maxAdjustment\"}\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"destinationAdjustment\",\n  \"type\": \"object\",\n  \"oneOf\": [\n    {\"$ref\": \"destinationExactAdjustment\"},\n    {\"$ref\": \"minAdjustment\"}\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"tag\",\n  \"description\": \"An arbitrary 32-bit unsigned integer. It typically maps to an off-ledger account; for example, a hosted wallet or exchange account.\",\n  \"type\": \"integer\",\n  \"$ref\": \"uint32\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"laxAmount\",\n  \"description\": \"Amount where counterparty is optional\",\n  \"link\": \"amount\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"currency\": {\"$ref\": \"currency\"},\n    \"counterparty\": {\"$ref\": \"address\"},\n    \"value\": {\"$ref\": \"value\"}\n  },\n  \"required\": [\"currency\", \"value\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"laxLaxAmount\",\n  \"description\": \"Amount where counterparty and value are optional\",\n  \"link\": \"amount\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"currency\": {\"$ref\": \"currency\"},\n    \"counterparty\": {\"$ref\": \"address\"},\n    \"value\": {\"$ref\": \"value\"}\n  },\n  \"required\": [\"currency\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"minAdjustment\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"An address representing the destination of the transaction.\"\n    },\n    \"minAmount\": {\n      \"$ref\": \"laxAmount\",\n      \"description\": \"The minimum amount to be delivered. (This field cannot be used with destination.amount)\"\n    },\n    \"tag\": {\"$ref\": \"tag\"}\n  },\n  \"required\": [\"address\", \"minAmount\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"sourceExactAdjustment\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address to send from.\"\n    },\n    \"amount\": {\n      \"$ref\": \"laxAmount\",\n      \"description\": \"An exact amount to send. If the counterparty is not specified, amounts with any counterparty may be used. (This field cannot be used with source.maxAmount)\"\n    },\n    \"tag\": {\"$ref\": \"tag\"}\n  },\n  \"required\": [\"address\", \"amount\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"destinationExactAdjustment\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"An address representing the destination of the transaction.\"\n    },\n    \"amount\": {\n      \"$ref\": \"laxAmount\",\n      \"description\": \"An exact amount to deliver to the recipient. If the counterparty is not specified, amounts with any counterparty may be used. (This field cannot be used with `destination.minAmount`.)\"\n    },\n    \"tag\": {\"$ref\": \"tag\"}\n  },\n  \"required\": [\"address\", \"amount\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"destinationAddressTag\",\n  \"description\": \"A destination address and optional tag, with no amount included. When parsing an incoming transaction, the original specification's amount is hidden to prevent misinterpretation. For the amount that the transaction delivered, see `outcome.deliveredAmount`.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"An address representing the destination of the transaction.\"\n    },\n    \"tag\": {\"$ref\": \"tag\"}\n  },\n  \"required\": [\"address\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"transactionHash\",\n  \"link\": \"transaction-id\",\n  \"description\": \"A hash of a transaction used to identify the transaction, represented in hexadecimal.\",\n  \"type\": \"string\",\n  \"pattern\": \"^[A-F0-9]{64}$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"address\",\n  \"description\": \"An account address on the XRP Ledger\",\n  \"type\": \"string\",\n  \"format\": \"address\",\n  \"link\": \"address\",\n  \"oneOf\": [\n    {\"$ref\": \"xAddress\"},\n    {\"$ref\": \"classicAddress\"}\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"xAddress\",\n  \"description\": \"An XRP Ledger address in X-address format\",\n  \"type\": \"string\",\n  \"format\": \"xAddress\",\n  \"link\": \"x-address\",\n  \"pattern\": \"^[XT][1-9A-HJ-NP-Za-km-z]{46}$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"classicAddress\",\n  \"description\": \"A classic address (Account ID) for the XRP Ledger\",\n  \"type\": \"string\",\n  \"format\": \"classicAddress\",\n  \"link\": \"classic-address\",\n  \"pattern\": \"^r[1-9A-HJ-NP-Za-km-z]{24,34}$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"adjustment\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\"$ref\": \"address\"},\n    \"amount\": {\"$ref\": \"amount\"},\n    \"tag\": {\"$ref\": \"tag\"}\n  },\n  \"required\": [\"address\", \"amount\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"quality\",\n  \"description\": \"Ratio for incoming/outgoing transit fees.\",\n  \"type\": \"number\",\n  \"minimum\": 0.000000001,\n  \"maximum\": 4.294967295\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"amount\",\n  \"link\": \"amount\",\n  \"description\": \"An Amount on the XRP Ledger\",\n  \"allOf\": [\n    {\"$ref\": \"amountbase\"},\n    {\"required\": [\"value\"]}\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"amountbase\",\n  \"description\": \"Base class for amount and issue\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"value\": {\n      \"description\": \"The quantity of the currency, denoted as a string so that it does not lose precision\",\n      \"$ref\": \"value\"\n    },\n    \"currency\": {\n      \"description\": \"The three-character code or hexadecimal string used to denote currencies, or \\\"drops\\\" for the smallest unit of XRP.\",\n      \"$ref\": \"currency\"\n    },\n    \"counterparty\": {\n      \"description\": \"The XRP Ledger address of the account that owes or is owed the funds (omitted if `currency` is \\\"XRP\\\" or \\\"drops\\\")\",\n      \"$ref\": \"address\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"currency\"],\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"currency\": {\n          \"not\": {\n            \"enum\": [\"XRP\", \"drops\"]\n          }\n        }\n      },\n      \"required\": [\"counterparty\"]\n    },\n    {\n      \"properties\": {\n        \"currency\": {\n          \"enum\": [\"XRP\", \"drops\"]\n        }\n      },\n      \"not\": {\n        \"required\": [\"counterparty\"]\n      }\n    }\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"balance\",\n  \"description\": \"Balance amount\",\n  \"link\": \"amount\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"value\": {\n      \"description\": \"The balance on the trustline\",\n      \"$ref\": \"signedValue\"\n    },\n    \"currency\": {\n      \"description\": \"The three-character code or hexadecimal string used to denote currencies\",\n      \"$ref\": \"currency\"\n    },\n    \"counterparty\": {\n      \"description\": \"The XRP Ledger address of the account that owes or is owed the funds.\",\n      \"$ref\": \"address\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"currency\", \"value\"],\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"currency\": {\n          \"not\": {\n            \"enum\": [\"XRP\"]\n          }\n        }\n      },\n      \"required\": [\"counterparty\"]\n    },\n    {\n      \"properties\": {\n        \"currency\": {\n          \"enum\": [\"XRP\"]\n        }\n      },\n      \"not\": {\n        \"required\": [\"counterparty\"]\n      }\n    }\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"blob\",\n  \"description\": \"An uppercase hexadecimal string representation of a transaction\",\n  \"type\": \"string\",\n  \"minLength\": 1,\n  \"pattern\": \"^[0-9A-F]*$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"currency\",\n  \"description\": \"The three-character code or hexadecimal string used to denote currencies\",\n  \"type\": \"string\",\n  \"link\": \"currency\",\n  \"pattern\": \"^([a-zA-Z0-9<>(){}[\\\\]|?!@#$%^&*]{3}|[A-F0-9]{40}|drops)$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"signedValue\",\n  \"description\": \"A string representation of a floating point number\",\n  \"type\": \"string\",\n  \"link\": \"value\",\n  \"pattern\": \"^[-]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?$\"\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"orderbook\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"base\": {\"$ref\": \"issue\"},\n    \"counter\": {\"$ref\": \"issue\"}\n  },\n  \"required\": [\"base\", \"counter\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"instructions\",\n  \"link\": \"transaction-instructions\",\n  \"description\": \"Instructions for executing the transaction\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sequence\": {\n      \"description\": \"The initiating account's sequence number for this transaction. `sequence` and `ticketSequence` are mutually exclusive, only one of them can be set.\",\n      \"$ref\": \"sequence\"\n    },\n    \"ticketSequence\": {\n      \"description\": \"The ticket sequence to be used for this transaction. `sequence` and `ticketSequence` are mutually exclusive, only one of them can be set.\",\n      \"$ref\": \"ticket-sequence\"\n    },\n    \"fee\": {\n      \"description\": \"An exact fee to pay for the transaction, before multiplying for multi-signed transactions. See [Transaction Fees](#transaction-fees) for more information.\",\n      \"$ref\": \"value\"\n    },\n    \"maxFee\": {\n      \"description\": \"Deprecated: Use `maxFeeXRP` in the RippleAPI constructor instead. The maximum fee to pay for this transaction. If this exceeds `maxFeeXRP`, use `maxFeeXRP` instead. See [Transaction Fees](#transaction-fees) for more information.\",\n      \"$ref\": \"value\"\n    },\n    \"maxLedgerVersion\": {\n      \"description\": \"The highest ledger version that the transaction can be included in. If this option and `maxLedgerVersionOffset` are both omitted, the default is 3 greater than the current validated ledger version (equivalent to `maxLedgerVersionOffset=3`). Use `null` to not set a maximum ledger version. If not null, this must be an integer greater than 0, or one of the following strings: 'validated', 'closed', 'current'.\",\n      \"oneOf\": [\n        {\"$ref\": \"ledgerVersion\"},\n        {\"type\": \"null\"}\n      ]\n    },\n    \"maxLedgerVersionOffset\": {\n      \"description\": \"Offset from current validated ledger version to highest ledger version that the transaction can be included in.\",\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"signersCount\": {\n      \"description\": \"Number of signers that can multi-sign this transaction.\",\n      \"type\": \"integer\",\n      \"minimum\": 1\n    }\n  },\n  \"additionalProperties\": false,\n  \"not\": {\n    \"anyOf\": [\n      {\n        \"description\": \"fee and maxFee are mutually exclusive\",\n        \"required\": [\"fee\", \"maxFee\"]\n      },\n      {\n        \"description\": \"maxLedgerVersion and maxLedgerVersionOffset are mutually exclusive\",\n        \"required\": [\"maxLedgerVersion\", \"maxLedgerVersionOffset\"]\n      },\n      {\n        \"description\": \"sequence and ticketSequence are mutually exclusive\",\n        \"required\": [\"sequence\", \"ticketSequence\"]\n      }\n    ]\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"settingsPlusMemos\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"defaultRipple\": {\n      \"type\": \"boolean\",\n      \"description\": \"Enable [rippling](https://xrpl.org/rippling.html) on this account’s trust lines by default. Currency issuers should enable this setting; most others should not.\"\n    },\n    \"depositAuth\": {\n      \"type\": \"boolean\",\n      \"description\": \"Enable [Deposit Authorization](https://xrpl.org/depositauth.html) on this account. If set, transactions cannot send value of any kind to this account unless the sender of those transactions is the account itself. (Requires the [DepositAuth amendment](https://xrpl.org/known-amendments.html#depositauth))\"\n    },\n    \"disableMasterKey\": {\n      \"type\": \"boolean\",\n      \"description\": \"Disallows use of the master key to sign transactions for this account. To disable the master key, you must authorize the transaction by signing it with the master key pair. You cannot use a regular key pair or a multi-signature. You can re-enable the master key pair using a regular key pair or multi-signature. See [AccountSet](https://xrpl.org/accountset.html).\"\n    },\n    \"disallowIncomingXRP\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates that client applications should not send XRP to this account. Not enforced by rippled.\"\n    },\n    \"domain\": {\n      \"type\": \"string\",\n      \"description\": \"The domain that owns this account, as a hexadecimal string representing the ASCII for the domain in lowercase.\"\n    },\n    \"emailHash\": {\n      \"description\": \"Hash of an email address to be used for generating an avatar image. Conventionally, clients use Gravatar to display this image. Use `null` to clear.\",\n      \"oneOf\": [\n        {\"type\": \"null\"},\n        {\"$ref\": \"hash128\"}\n      ]\n    },\n    \"walletLocator\": {\n      \"description\": \"Transaction hash or any other 64 character hexadecimal string, that may or may not represent the result of a hash operation. Use `null` to clear.\",\n      \"oneOf\": [\n        {\"type\": \"null\"},\n        {\"$ref\": \"hash256\"}\n      ]\n    },\n    \"enableTransactionIDTracking\": {\n      \"type\": \"boolean\",\n      \"description\": \"Track the ID of this account’s most recent transaction.\"\n    },\n    \"globalFreeze\": {\n      \"type\": \"boolean\",\n      \"description\": \"Freeze all assets issued by this account.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"},\n    \"messageKey\": {\n      \"type\": \"string\",\n      \"description\": \"Public key for sending encrypted messages to this account. Conventionally, it should be a secp256k1 key, the same encryption that is used by the rest of Ripple.\"\n    },\n    \"noFreeze\": {\n      \"type\": \"boolean\",\n      \"description\": \"Permanently give up the ability to freeze individual trust lines. This flag can never be disabled after being enabled.\"\n    },\n    \"passwordSpent\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates that the account has used its free SetRegularKey transaction.\"\n    },\n    \"regularKey\": {\n      \"oneOf\": [\n        {\"$ref\": \"address\"},\n        {\"type\": \"null\"}\n      ],\n      \"description\": \"The public key of a new keypair, to use as the regular key to this account, as a base-58-encoded string in the same format as an account address. Use `null` to remove the regular key.\"\n    },\n    \"requireAuthorization\": {\n      \"type\": \"boolean\",\n      \"description\": \"If set, this account must individually give other users permission to hold this account’s issued tokens.\"\n    },\n    \"requireDestinationTag\": {\n      \"type\": \"boolean\",\n      \"description\": \"Requires incoming payments to specify a destination tag.\"\n    },\n    \"signers\": {\n      \"type\": \"object\",\n      \"description\": \"Settings that determine what sets of accounts can be used to sign a transaction on behalf of this account using multisigning.\",\n      \"properties\": {\n        \"threshold\": {\n          \"$ref\": \"uint32\",\n          \"description\": \"A target number for the signer weights. A multi-signature from this list is valid only if the sum weights of the signatures provided is equal or greater than this value. To delete the signers setting, use the value `0`.\"\n        },\n        \"weights\": {\n          \"type\": \"array\",\n          \"description\": \"Weights of signatures for each signer.\",\n          \"items\": {\n            \"type\": \"object\",\n            \"description\": \"An association of an address and a weight.\",\n            \"properties\": {\n              \"address\": {\"$ref\": \"address\"},\n              \"weight\": {\n                \"$ref\": \"uint32\",\n                \"description\": \"The weight that the signature of this account counts as towards the threshold.\"\n              }\n            },\n            \"required\": [\"address\", \"weight\"],\n            \"additionalProperties\": false\n          },\n          \"minItems\": 1,\n          \"maxItems\": 8\n        }\n      },\n      \"required\": [\"threshold\"],\n      \"additionalProperties\": false\n    },\n    \"transferRate\": {\n      \"description\": \"The fee to charge when users transfer this account’s issuances, as the decimal amount that must be sent to deliver 1 unit. Has precision up to 9 digits beyond the decimal point. Use `null` to set no fee.\",\n      \"oneOf\": [\n        {\"type\": \"null\"},\n        {\"type\": \"number\", \"minimum\": 1, \"maximum\": 4.294967295}\n      ]\n    },\n    \"tickSize\": {\n      \"description\": \"Tick size to use for offers involving a currency issued by this address. The exchange rates of those offers is rounded to this many significant digits. Valid values are 3 to 15 inclusive, or 0 to disable.\",\n      \"enum\": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    }\n  },\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"settings\",\n  \"link\": \"settings\",\n  \"$ref\": \"settingsPlusMemos\",\n  \"oneOf\": [\n    {\n      \"required\": [\"memos\"],\n      \"minProperties\": 2,\n      \"maxProperties\": 2\n    },\n    {\n      \"not\": {\n        \"required\": [\"memos\"]\n      },\n      \"minProperties\": 1,\n      \"maxProperties\": 1\n    }\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"payment\",\n  \"link\": \"payment\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"source\": {\n      \"$ref\": \"sourceAdjustment\",\n      \"description\": \"The source of the funds to be sent.\"\n    },\n    \"destination\": {\n      \"$ref\": \"destinationAdjustment\",\n      \"description\": \"The destination of the funds to be sent.\"\n    },\n    \"paths\": {\n      \"type\": \"string\",\n      \"description\": \"The paths of trustlines and orders to use in executing the payment.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"},\n    \"invoiceID\": {\n      \"description\": \"A 256-bit hash that can be used to identify a particular payment.\",\n      \"$ref\": \"hash256\"\n    },\n    \"allowPartialPayment\": {\n      \"description\": \"If true, this payment can deliver less than the full amount.\",\n      \"type\": \"boolean\"\n    },\n    \"noDirectRipple\": {\n      \"description\": \"If true and paths are specified, the sender would like the XRP Ledger to disregard any direct paths from the source account to the destination account. This may be used to take advantage of an arbitrage opportunity or by gateways wishing to issue balances from a hot wallet to a user who has mistakenly set a trustline directly to the hot wallet.\",\n      \"type\": \"boolean\"\n    },\n    \"limitQuality\": {\n      \"description\": \"Only take paths where all the conversions have an input:output ratio that is equal or better than the ratio of destination.amount:source.maxAmount.\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\"source\", \"destination\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getPayment\",\n  \"description\": \"A specification of a payment in a response for getTransaction or getTransactions.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"source\": {\n      \"$ref\": \"sourceAdjustment\",\n      \"description\": \"The source of the funds to be sent.\"\n    },\n    \"destination\": {\n      \"$ref\": \"destinationAddressTag\",\n      \"description\": \"The destination of the funds to be sent. Since this is a payment response, the amount is not shown here. For the amount that the transaction delivered, see `outcome.deliveredAmount`.\"\n    },\n    \"paths\": {\n      \"type\": \"string\",\n      \"description\": \"The paths of trustlines and orders to use in executing the payment.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"},\n    \"invoiceID\": {\n      \"description\": \"A 256-bit hash that can be used to identify a particular payment.\",\n      \"$ref\": \"hash256\"\n    },\n    \"allowPartialPayment\": {\n      \"description\": \"If true, this payment can deliver less than the full amount.\",\n      \"type\": \"boolean\"\n    },\n    \"noDirectRipple\": {\n      \"description\": \"If true and paths are specified, the sender would like the XRP Ledger to disregard any direct paths from the source account to the destination account. This may be used to take advantage of an arbitrage opportunity or by gateways wishing to issue balances from a hot wallet to a user who has mistakenly set a trustline directly to the hot wallet.\",\n      \"type\": \"boolean\"\n    },\n    \"limitQuality\": {\n      \"description\": \"Only take paths where all the conversions have an input:output ratio that is equal or better than the ratio of destination.amount:source.maxAmount.\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\"source\", \"destination\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"escrowCancellation\",\n  \"link\": \"escrow-cancellation\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"memos\": {\"$ref\": \"memos\"},\n    \"owner\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the owner of the escrow to cancel.\"\n    },\n    \"escrowSequence\": {\n      \"$ref\": \"sequence\",\n      \"description\": \"The [account sequence number](#account-sequence-number) of the [Escrow Creation](#escrow-creation) transaction for the escrow to cancel.\"\n    }\n  },\n  \"required\": [\"owner\", \"escrowSequence\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"orderCancellation\",\n  \"link\": \"order-cancellation\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"orderSequence\": {\n      \"$ref\": \"sequence\",\n      \"description\": \"The [account sequence number](#account-sequence-number) of the order to cancel.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"orderSequence\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"order\",\n  \"link\": \"order\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"direction\": {\n      \"type\": \"string\",\n      \"enum\": [\"buy\", \"sell\"],\n      \"description\": \"Equal to \\\"buy\\\" for buy orders and \\\"sell\\\" for sell orders.\"\n    },\n    \"quantity\": {\n      \"$ref\": \"amount\",\n      \"description\": \"The amount of currency to buy or sell.\"\n    },\n    \"totalPrice\": {\n      \"$ref\": \"amount\",\n      \"description\": \"The total price to be paid for the `quantity` to be bought or sold.\"\n    },\n    \"immediateOrCancel\": {\n      \"type\": \"boolean\",\n      \"description\": \"Treat the offer as an [Immediate or Cancel order](http://en.wikipedia.org/wiki/Immediate_or_cancel). If enabled, do not create an object in the ledger that can be matched later: instead, only execute as much as can be fulfilled immediately. This cannot be used with `fillOrKill`.\"\n    },\n    \"fillOrKill\": {\n      \"type\": \"boolean\",\n      \"description\": \"Treat the offer as a [Fill or Kill order](http://en.wikipedia.org/wiki/Fill_or_kill). Only attempt to match existing offers in the ledger, and only do so if the entire quantity can be exchanged. This cannot be used with `immediateOrCancel`.\"\n    },\n    \"passive\": {\n      \"description\": \"If enabled, the offer does not consume offers that exactly match it, and instead becomes an Offer node in the ledger. It still consumes offers that cross it.\",\n      \"type\": \"boolean\"\n    },\n    \"expirationTime\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Time after which the offer is no longer active, as an [ISO 8601 date-time](https://en.wikipedia.org/wiki/ISO_8601).\"\n    },\n    \"orderToReplace\": {\n      \"$ref\": \"sequence\",\n      \"description\": \"The [account sequence number](#account-sequence-number) of an order to cancel before the new order is created, effectively replacing the old order.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"direction\", \"quantity\", \"totalPrice\"],\n  \"additionalProperties\": false,\n  \"not\": {\n    \"description\": \"immediateOrCancel and fillOrKill are mutually exclusive\",\n    \"required\": [\"immediateOrCancel\", \"fillOrKill\"]\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"escrowExecution\",\n  \"link\": \"escrow-execution\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"memos\": {\"$ref\": \"memos\"},\n    \"owner\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the owner of the escrow to execute.\"\n    },\n    \"escrowSequence\": {\n      \"$ref\": \"sequence\",\n      \"description\": \"The [account sequence number](#account-sequence-number) of the [Escrow Creation](#escrow-creation) transaction for the escrow to execute.\"\n    },\n    \"condition\": {\n      \"type\": \"string\",\n      \"description\": \"A hex value representing a [PREIMAGE-SHA-256 crypto-condition](https://tools.ietf.org/html/draft-thomas-crypto-conditions-02#section-8.1). This must match the original `condition` from the escrow creation transaction.\",\n      \"pattern\": \"^[A-F0-9]{0,256}$\"\n    },\n    \"fulfillment\": {\n      \"type\": \"string\",\n      \"description\": \"A hex value representing the [PREIMAGE-SHA-256 crypto-condition](https://tools.ietf.org/html/draft-thomas-crypto-conditions-02#section-8.1) fulfillment for `condition`.\",\n      \"pattern\": \"^[A-F0-9]+$\"\n    }\n  },\n  \"required\": [\"owner\", \"escrowSequence\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"escrowCreation\",\n  \"link\": \"escrow-creation\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"amount\": {\n      \"$ref\": \"value\",\n      \"description\": \"Amount of XRP for sender to escrow.\"\n    },\n    \"destination\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address to receive escrowed XRP.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"},\n    \"condition\": {\n      \"type\": \"string\",\n      \"description\": \"A hex value representing a [PREIMAGE-SHA-256 crypto-condition](https://tools.ietf.org/html/draft-thomas-crypto-conditions-02#section-8.1). If present, `fulfillment` is required upon execution.\",\n      \"pattern\": \"^[A-F0-9]{0,256}$\"\n    },\n    \"allowCancelAfter\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"If present, the escrow may be cancelled after this time.\"\n    },\n    \"allowExecuteAfter\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"If present, the escrow can not be executed before this time.\"\n    },\n    \"sourceTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"Source tag.\"\n    },\n    \"destinationTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"Destination tag.\"\n    }\n  },\n  \"required\": [\"amount\", \"destination\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"paymentChannelCreate\",\n  \"link\": \"payment-channel-create\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"amount\": {\n      \"$ref\": \"value\",\n      \"description\": \"Amount of XRP for sender to set aside in this channel.\"\n    },\n    \"destination\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address to receive XRP claims against this channel.\"\n    },\n    \"settleDelay\": {\n      \"type\": \"number\",\n      \"description\": \"Amount of seconds the source address must wait before closing the channel if it has unclaimed XRP.\"\n    },\n    \"publicKey\": {\n      \"$ref\": \"publicKey\",\n      \"description\": \"Public key of the key pair the source may use to sign claims against this channel.\"\n    },\n    \"cancelAfter\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Time when this channel expires. This expiration cannot be changed after creating the channel.\"\n    },\n    \"sourceTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"Source tag.\"\n    },\n    \"destinationTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"Destination tag.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"amount\", \"destination\", \"settleDelay\", \"publicKey\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"paymentChannelFund\",\n  \"link\": \"payment-channel-fund\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"amount\": {\n      \"$ref\": \"value\",\n      \"description\": \"Amount of XRP to fund the channel with.\"\n    },\n    \"channel\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"256-bit hexadecimal channel identifier.\"\n    },\n    \"expiration\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"New expiration for this channel. (This does not change the cancelAfter expiration, if the channel has one.) Cannot move the expiration sooner than settleDelay seconds from time of the request.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"amount\", \"channel\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"paymentChannelClaim\",\n  \"link\": \"payment-channel-claim\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"channel\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"256-bit hexadecimal channel identifier.\"\n    },\n    \"amount\": {\n      \"$ref\": \"value\",\n      \"description\": \"Amount of XRP authorized by this signature.\"\n    },\n    \"balance\": {\n      \"$ref\": \"value\",\n      \"description\": \"Total XRP balance delivered by this channel after claim is processed.\"\n    },\n    \"signature\": {\n      \"$ref\": \"signature\",\n      \"description\": \"Signed claim authorizing withdrawal of XRP from the channel. (Required except from the channel's source address.)\"\n    },\n    \"publicKey\": {\n      \"$ref\": \"publicKey\",\n      \"description\": \"Public key of the channel. (For verifying the signature.)\"\n    },\n    \"renew\": {\n      \"type\": \"boolean\",\n      \"description\": \"Clear the channel's expiration time.\"\n    },\n    \"close\": {\n      \"type\": \"boolean\",\n      \"description\": \"Request to close the channel. If the channel has no XRP remaining or the destination address requests it, closes the channel immediately (returning unclaimed XRP to the source address). Otherwise, sets the channel to expire after settleDelay seconds have passed.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"channel\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"checkCreate\",\n  \"link\": \"check-create\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"destination\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address of the account that can cash the check.\"\n    },\n    \"sendMax\": {\n      \"$ref\": \"laxAmount\",\n      \"description\": \"Amount of source currency the check is allowed to debit the sender, including transfer fees on non-XRP currencies.\"\n    },\n    \"destinationTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"Destination tag that identifies the reason for the check, or a hosted recipient to pay.\"\n    },\n    \"expiration\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Time after which the check is no longer valid.\"\n    },\n    \"invoiceID\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"256-bit hash, as a 64-character hexadecimal string, representing a specific reason or identifier for this check.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"destination\", \"sendMax\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"checkCash\",\n  \"link\": \"check-cash\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"checkID\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"The ID of the Check ledger object to cash, as a 64-character hexadecimal string.\"\n    },\n    \"amount\": {\n      \"$ref\": \"laxAmount\",\n      \"description\": \"Redeem the Check for exactly this amount, if possible. The currency must match that of the sendMax of the corresponding CheckCreate transaction. You must provide either this field or deliverMin.\"\n    },\n    \"deliverMin\": {\n      \"$ref\": \"laxAmount\",\n      \"description\": \"Redeem the Check for at least this amount and for as much as possible. The currency must match that of the sendMax of the corresponding CheckCreate transaction. You must provide either this field or amount.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"checkID\"],\n  \"oneOf\": [\n    {\"required\": [\"amount\"]},\n    {\"required\": [\"deliverMin\"]}\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"checkCancel\",\n  \"link\": \"check-cancel\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"checkID\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"The ID of the Check ledger object to cancel, as a 64-character hexadecimal string.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"checkID\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"trustline\",\n  \"link\": \"trustline\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"currency\": {\n      \"$ref\": \"currency\",\n      \"description\": \"The currency this trustline applies to.\"\n    },\n    \"counterparty\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account this trustline extends trust to.\"\n    },\n    \"limit\": {\n      \"$ref\": \"value\",\n      \"description\": \"The maximum amount that the owner of the trustline can be owed through the trustline.\"\n    },\n    \"qualityIn\": {\n      \"$ref\": \"quality\",\n      \"description\": \"Incoming balances on this trustline are valued at this ratio.\"\n    },\n    \"qualityOut\": {\n      \"$ref\": \"quality\",\n      \"description\": \"Outgoing balances on this trustline are valued at this ratio.\"\n    },\n    \"ripplingDisabled\": {\n      \"type\": \"boolean\",\n      \"description\": \"If true, payments cannot ripple through this trustline.\"\n    },\n    \"authorized\": {\n      \"type\": \"boolean\",\n      \"description\": \"If true, authorize the counterparty to hold issuances from this account.\"\n    },\n    \"frozen\": {\n      \"type\": \"boolean\",\n      \"description\": \"If true, the trustline is frozen, which means that funds can only be sent to the owner.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"required\": [\"currency\", \"counterparty\", \"limit\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"depositPreauth\",\n  \"link\": \"deposit-preauth\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"authorize\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address of the account that can cash the check.\"\n    },\n    \"unauthorize\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address of the account that can cash the check.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"oneOf\": [\n    {\"required\": [\"authorize\"]},\n    {\"required\": [\"unauthorize\"]}\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"accountDelete\",\n  \"link\": \"account-delete\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"destination\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address of an account to receive any leftover XRP after deleting the sending account. Must be a funded account in the ledger, and must not be the sending account.\"\n    },\n    \"destinationTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"(Optional) Arbitrary destination tag that identifies a hosted recipient or other information for the recipient of the deleted account's leftover XRP.\"\n    },\n    \"destinationXAddress\": {\n      \"$ref\": \"address\",\n      \"description\": \"X-address of an account to receive any leftover XRP after deleting the sending account. Must be a funded account in the ledger, and must not be the sending account.\"\n    },\n    \"memos\": {\"$ref\": \"memos\"}\n  },\n  \"anyOf\": [\n    {\n      \"required\": [\"destination\"]\n    },\n    {\n      \"required\": [\"destinationXAddress\"]\n    }\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"sign\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"signedTransaction\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[A-F0-9]+$\",\n      \"description\": \"The signed transaction represented as an uppercase hexadecimal string.\"\n    },\n    \"id\": {\n      \"$ref\": \"transactionHash\",\n      \"description\": \"The [Transaction ID](#transaction-id) of the signed transaction.\"\n    }\n  },\n  \"required\": [\"signedTransaction\", \"id\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"submit\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"resultCode\": {\n      \"type\": \"string\",\n      \"description\": \"Deprecated: Use `engine_result` instead.\"\n    },\n    \"resultMessage\": {\n      \"type\": \"string\",\n      \"description\": \"Deprecated: Use `engine_result_message` instead.\"\n    },\n    \"engine_result\": {\n      \"type\": \"string\",\n      \"description\": \"Code indicating the preliminary result of the transaction, for example `tesSUCCESS`. [List of transaction responses](https://xrpl.org/transaction-results.html)\"\n    },\n    \"engine_result_code\": {\n      \"type\": \"integer\",\n      \"description\": \"Numeric code indicating the preliminary result of the transaction, directly correlated to `engine_result`\"\n    },\n    \"engine_result_message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation of the transaction's preliminary result.\"\n    },\n    \"tx_blob\": {\n      \"type\": \"string\",\n      \"description\": \"The complete transaction in hex string format.\"\n    },\n    \"tx_json\": {\n      \"$ref\": \"tx-json\",\n      \"description\": \"The complete transaction in JSON format.\"\n    }\n  },\n  \"required\": [\"resultCode\", \"resultMessage\", \"engine_result\", \"engine_result_code\", \"engine_result_message\", \"tx_blob\", \"tx_json\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getAccountInfo\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sequence\": {\n      \"$ref\": \"sequence\",\n      \"description\": \"The next (smallest unused) sequence number for this account.\"\n    },\n    \"xrpBalance\": {\n      \"$ref\": \"value\",\n      \"description\": \"The XRP balance owned by the account.\"\n    },\n    \"ownerCount\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Number of other ledger entries (specifically, trust lines and offers) attributed to this account. This is used to calculate the total reserve required to use the account.\"\n    },\n    \"previousInitiatedTransactionID\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Hash value representing the most recent transaction that was initiated by this account.\"\n    },\n    \"previousAffectingTransactionID\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Hash value representing the most recent transaction that affected this account node directly. **Note:** This does not include changes to the account’s trust lines and offers.\"\n    },\n    \"previousAffectingTransactionLedgerVersion\": {\n      \"$ref\": \"ledgerVersion\",\n      \"description\": \"The ledger version that the transaction identified by the `previousAffectingTransactionID` was validated in.\"\n    }\n  },\n  \"required\": [\n    \"sequence\",\n    \"xrpBalance\",\n    \"ownerCount\",\n    \"previousAffectingTransactionID\",\n    \"previousAffectingTransactionLedgerVersion\"\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"AccountObjectsResponse\",\n  \"description\": \"Response format for account_objects\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"account\": {\n      \"$ref\": \"address\",\n      \"description\":\n        \"Unique address of the account this request corresponds to.\"\n    },\n    \"account_objects\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\"\n      },\n      \"description\":\n        \"Array of objects owned by this account. Each object is in its raw ledger format.\"\n    },\n    \"ledger_hash\": {\n      \"type\": \"string\",\n      \"description\":\n        \"(May be omitted) The identifying hash of the ledger that was used to generate this response.\"\n    },\n    \"ledger_index\": {\n      \"$ref\": \"ledgerVersion\",\n      \"description\":\n        \"(May be omitted) The sequence number of the ledger that was used to generate this response.\"\n    },\n    \"ledger_current_index\": {\n      \"$ref\": \"ledgerVersion\",\n      \"description\":\n        \"(May be omitted) The sequence number of the ledger that was used to generate this response.\"\n    },\n    \"limit\": {\n      \"type\": \"integer\",\n      \"description\":\n        \"(May be omitted) The limit that was used in this request, if any.\"\n    },\n    \"validated\": {\n      \"type\": \"boolean\",\n      \"description\":\n        \"If included and set to true, the information in this request comes from a validated ledger version. Otherwise, the information is subject to change.\"\n    }\n  },\n  \"required\": [\"account\", \"account_objects\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getBalances\",\n  \"type\": \"array\",\n  \"items\": {\"$ref\": \"balance\"}\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getBalanceSheet\",\n  \"description\": \"getBalanceSheet response\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"balances\": {\n      \"type\": \"array\",\n      \"items\": {\"$ref\": \"amount\"},\n      \"description\": \"Amounts issued to the \\\"hotwallet\\\" accounts from the request. The keys are the accounts' addresses, and the values are arrays of currency amounts they hold. The issuer (omitted from the currency amounts) is the account from the request.\"\n    },\n    \"assets\": {\n      \"type\": \"array\",\n      \"items\": {\"$ref\": \"amount\"},\n      \"description\": \"Total amounts held that are issued by others. For the recommended gateway configuration, there should be none.\"\n    },\n    \"obligations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"required\": [\"currency\", \"value\"],\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"currency\": {\"$ref\": \"currency\"},\n          \"value\": {\"$ref\": \"value\"}\n        },\n        \"description\": \"An amount that is owed.\"\n      },\n      \"description\": \"Total amounts issued to accounts that are not hot wallets, as a map of currencies to the total value issued.\"\n    }\n  },\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getLedger\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"stateHash\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Hash of all state information in this ledger.\"\n    },\n    \"closeTime\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"The approximate time when this ledger was closed. This number is rounded based on the `closeTimeResolution`. If it would have been rounded to the same time as a previous ledger, the close time is recorded as 1 second later instead.\"\n    },\n    \"closeTimeResolution\": {\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"A number of seconds, indicating how much the `closeTime` could be rounded. Ledger close times are approximate so that small differences in servers clocks don't hinder consensus.\"\n    },\n    \"closeFlags\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"A bit-map of flags relating to the closing of this ledger. Currently, the ledger has only one flag defined for `closeFlags`: **sLCF_NoConsensusTime** (value 1). If this flag is enabled, it means that validators disagreed on the correct close time for the ledger, but built otherwise the same ledger, so they declared consensus while \\\"agreeing to disagree\\\" on the close time. In this case, the consensus ledger contains a `closeTime` value that is 1 second after that of the previous ledger. (In this case, there is no official close time, but the actual real-world close time is probably 3-6 seconds later than the specified `closeTime`.)\"\n    },\n    \"ledgerHash\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Unique identifying hash of the entire ledger.\"\n    },\n    \"ledgerVersion\": {\n      \"$ref\": \"ledgerVersion\",\n      \"description\": \"The ledger version of this ledger.\"\n    },\n    \"parentLedgerHash\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Unique identifying hash of the ledger that came immediately before this one.\"\n    },\n    \"parentCloseTime\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"The previous ledger's recorded close time.\"\n    },\n    \"totalDrops\": {\n      \"$ref\": \"value\",\n      \"description\": \"Total number of drops (1/1,000,000th of an XRP) in the network, as a quoted integer. (This decreases as transaction fees cause XRP to be destroyed.)\"\n    },\n    \"transactionHash\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Hash of the transaction information included in this ledger.\"\n    },\n    \"transactions\": {\n      \"description\": \"Array of all transactions that were validated in this ledger. Transactions are represented in the same format as the return value of [getTransaction](#gettransaction).\",\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"getTransaction\",\n        \"description\": \"A transaction in the same format as the return value of [getTransaction](#gettransaction).\"\n      }\n    },\n    \"transactionHashes\": {\n      \"description\": \"An array of hashes of all transactions that were validated in this ledger.\",\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"transactionHash\"\n      }\n    },\n    \"rawState\": {\n      \"type\": \"string\",\n      \"description\": \"A JSON string containing all state data for this ledger in rippled JSON format.\"\n    },\n    \"stateHashes\": {\n      \"description\": \"An array of hashes of all state data in this ledger.\",\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"hash256\"\n      }\n    }\n  },\n  \"required\": [\n    \"stateHash\",\n    \"closeTime\",\n    \"closeTimeResolution\",\n    \"closeFlags\",\n    \"ledgerHash\",\n    \"ledgerVersion\",\n    \"parentLedgerHash\",\n    \"parentCloseTime\",\n    \"totalDrops\",\n    \"transactionHash\"\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getOrderbook\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"bids\": {\n      \"$ref\": \"orderbookOrders\",\n      \"description\": \"The buy orders in the order book.\"\n    },\n    \"asks\": {\n      \"$ref\": \"orderbookOrders\",\n      \"description\": \"The sell orders in the order book.\"\n    }\n  },\n  \"required\": [\"bids\", \"asks\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getOrders\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"specification\": {\n        \"$ref\": \"order\",\n        \"description\": \"An order specification that would create an order equivalent to the current state of this order.\"\n      },\n      \"properties\": {\n        \"description\": \"Properties of the order not in the specification.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"maker\": {\n            \"$ref\": \"address\",\n            \"description\": \"The address of the account that submitted the order.\"\n          },\n          \"sequence\": {\n            \"$ref\": \"sequence\",\n            \"description\": \"The account sequence number of the transaction that created this order.\"\n          },\n          \"makerExchangeRate\": {\n            \"$ref\": \"value\",\n            \"description\": \"The exchange rate from the point of view of the account that submitted the order (also known as \\\"quality\\\").\"\n          }\n        },\n        \"required\": [\"maker\", \"sequence\", \"makerExchangeRate\"],\n        \"addtionalProperties\": false\n      }\n    },\n    \"required\": [\"specification\", \"properties\"],\n    \"additionalProperties\": false\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"orderChange\",\n  \"type\": \"object\",\n  \"description\": \"A change to an order.\",\n  \"properties\": {\n    \"direction\": {\n      \"type\": \"string\",\n      \"enum\": [\"buy\", \"sell\"],\n      \"description\": \"Equal to \\\"buy\\\" for buy orders and \\\"sell\\\" for sell orders.\"\n    },\n    \"quantity\": {\n      \"$ref\": \"amount\",\n      \"description\": \"The amount to be bought or sold by the maker.\"\n    },\n    \"totalPrice\": {\n      \"$ref\": \"amount\",\n      \"description\": \"The total amount to be paid or received by the taker.\"\n    },\n    \"makerExchangeRate\": {\n      \"$ref\": \"value\",\n      \"description\": \"The exchange rate between the `quantity` currency and the `totalPrice` currency from the point of view of the maker.\"\n    },\n    \"sequence\": {\n      \"$ref\": \"sequence\",\n      \"description\": \"The order sequence number, used to identify the order for cancellation\"\n    },\n    \"status\": {\n      \"enum\": [\"created\", \"filled\", \"partially-filled\", \"cancelled\"],\n      \"description\": \"The status of the order. One of \\\"created\\\", \\\"filled\\\", \\\"partially-filled\\\", \\\"cancelled\\\".\"\n    },\n    \"expirationTime\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"The time after which the order expires, if any.\"\n    }\n  },\n  \"required\": [\"direction\", \"quantity\", \"totalPrice\", \"sequence\", \"status\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getPaymentChannel\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"account\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address that created the payment channel.\"\n    },\n    \"destination\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address to receive XRP claims against this channel.\"\n    },\n    \"amount\": {\n      \"$ref\": \"value\",\n      \"description\": \"The total amount of XRP funded in this channel.\"\n    },\n    \"balance\": {\n      \"$ref\": \"value\",\n      \"description\": \"The total amount of XRP delivered by this channel.\"\n    },\n    \"settleDelay\": {\n      \"type\": \"number\",\n      \"description\": \"Amount of seconds the source address must wait before closing the channel if it has unclaimed XRP.\"\n    },\n    \"expiration\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Time when this channel expires.\"\n    },\n    \"publicKey\": {\n      \"$ref\": \"publicKey\",\n      \"description\": \"Public key of the key pair the source uses to sign claims against this channel.\"\n    },\n    \"cancelAfter\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Time when this channel expires as specified at creation.\"\n    },\n    \"sourceTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"Source tag.\"\n    },\n    \"destinationTag\": {\n      \"$ref\": \"tag\",\n      \"description\": \"Destination tag.\"\n    },\n    \"previousAffectingTransactionID\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Hash value representing the most recent transaction that affected this payment channel.\"\n    },\n    \"previousAffectingTransactionLedgerVersion\": {\n      \"$ref\": \"ledgerVersion\",\n      \"description\": \"The ledger version that the transaction identified by the `previousAffectingTransactionID` was validated in.\"\n    }\n  },\n  \"required\": [\n    \"account\",\n    \"destination\",\n    \"amount\",\n    \"balance\",\n    \"settleDelay\",\n    \"previousAffectingTransactionID\",\n    \"previousAffectingTransactionLedgerVersion\"\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepare\",\n  \"description\": \"Result of prepare function\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"txJSON\": {\n      \"type\": \"string\",\n      \"description\": \"The prepared transaction in rippled JSON format.\"\n    },\n    \"instructions\": {\n      \"description\": \"The instructions for how to execute the transaction after adding automatic defaults.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"fee\": {\n          \"$ref\": \"value\",\n          \"description\": \"The fee to pay for the transaction. See [Transaction Fees](#transaction-fees) for more information. For multi-signed transactions, this fee is multiplied by (N+1), where N is the number of signatures you plan to provide.\"\n        },\n        \"sequence\": {\n          \"$ref\": \"sequence\",\n          \"description\": \"The initiating account's sequence number for this transaction. `sequence` and `ticketSequence` are mutually exclusive, only one of them can be set.\"\n        },\n        \"ticketSequence\": {\n          \"$ref\": \"ticket-sequence\",\n          \"description\": \"The initiating account's ticket sequence number for this transaction. `sequence` and `ticketSequence` are mutually exclusive, only one of them can be set.\"\n        },\n        \"maxLedgerVersion\": {\n          \"oneOf\": [\n            {\"$ref\": \"ledgerVersion\"},\n            {\"type\": \"null\"}\n          ],\n          \"description\": \"The highest ledger version that the transaction can be included in. Set to `null` if there is no maximum. If not null, this must be an integer greater than 0, or one of the following strings: 'validated', 'closed', 'current'.\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"fee\", \"maxLedgerVersion\"],\n      \"anyOf\": [\n          { \"required\":\n            [ \"sequence\" ] },\n          { \"required\":\n            [ \"ticketSequence\" ] }\n        ]\n      }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"txJSON\", \"instructions\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"ledgerEvent\",\n  \"description\": \"A ledger event message\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"baseFeeXRP\": {\n      \"$ref\": \"value\",\n      \"description\": \"Base fee, in XRP.\"\n    },\n    \"ledgerHash\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"Unique hash of the ledger that was closed, as hex.\"\n    },\n    \"ledgerVersion\": {\n      \"$ref\": \"ledgerVersion\",\n      \"description\": \"Ledger version of the ledger that closed.\"\n    },\n    \"ledgerTimestamp\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"The time at which this ledger closed.\"\n    },\n    \"reserveBaseXRP\": {\n      \"$ref\": \"value\",\n      \"description\": \"The minimum reserve, in XRP, that is required for an account.\"\n    },\n    \"reserveIncrementXRP\": {\n      \"$ref\": \"value\",\n      \"description\": \"The increase in account reserve that is added for each item the account owns, such as offers or trust lines.\"\n    },\n    \"transactionCount\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Number of new transactions included in this ledger.\"\n    },\n    \"validatedLedgerVersions\": {\n      \"type\": \"string\",\n      \"description\": \"Range of ledgers that the server has available. This may be discontiguous.\"\n    }\n  },\n  \"addtionalProperties\": false,\n  \"required\": [\"baseFeeXRP\", \"ledgerHash\", \"ledgerTimestamp\",\n    \"reserveBaseXRP\", \"reserveIncrementXRP\", \"transactionCount\",\n    \"ledgerVersion\", \"validatedLedgerVersions\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getPaths\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"source\": {\n        \"$ref\": \"sourceAdjustment\",\n        \"description\": \"Properties of the source of the payment.\"\n      },\n      \"destination\": {\n        \"$ref\": \"destinationAdjustment\",\n        \"description\": \"Properties of the destination of the payment.\"\n      },\n      \"paths\": {\n        \"type\": \"string\",\n        \"description\": \"The paths of trustlines and orders to use in executing the payment.\"\n      }\n    },\n    \"required\": [\"source\", \"destination\", \"paths\"],\n    \"additionalProperties\": false\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getServerInfo\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"buildVersion\": {\n      \"type\": \"string\",\n      \"description\": \"The version number of the running rippled version.\"\n    },\n    \"completeLedgers\": {\n      \"type\": \"string\",\n      \"pattern\": \"[0-9,-]+\",\n      \"description\": \"Range expression indicating the sequence numbers of the ledger versions the local rippled has in its database. It is possible to be a disjoint sequence, e.g. “2500-5000,32570-7695432”.\"\n    },\n    \"hostID\": {\n      \"type\": \"string\",\n      \"description\": \"On an admin request, returns the hostname of the server running the rippled instance; otherwise, returns a unique four letter word.\"\n    },\n    \"ioLatencyMs\": {\n      \"type\": \"number\",\n      \"description\": \"Amount of time spent waiting for I/O operations, in milliseconds. If this number is not very, very low, then the rippled server is probably having serious load issues.\"\n    },\n    \"load\": {\n      \"type\": \"object\",\n      \"description\": \"*(Admin only)* Detailed information about the current load state of the server.\",\n      \"properties\": {\n        \"jobTypes\": {\n          \"type\": \"array\",\n          \"description\": \"*(Admin only)* Information about the rate of different types of jobs the server is doing and how much time it spends on each.\",\n          \"items\": {\"type\": \"object\"}\n        },\n        \"threads\": {\n          \"type\": \"number\",\n          \"description\": \"*(Admin only)* The number of threads in the server’s main job pool, performing various operations.\"\n        }\n      },\n      \"required\": [\"jobTypes\", \"threads\"]\n    },\n    \"lastClose\": {\n      \"type\": \"object\",\n      \"description\": \"Information about the last time the server closed a ledger.\",\n      \"properties\": {\n        \"convergeTimeS\": {\n          \"type\": \"number\",\n          \"description\": \"The time it took to reach a consensus for the last ledger closing, in seconds.\"\n        },\n        \"proposers\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"description\": \"Number of trusted validators participating in the ledger closing.\"}\n      },\n      \"required\": [\"convergeTimeS\", \"proposers\"]\n    },\n    \"loadFactor\": {\n      \"type\": \"number\",\n      \"description\": \"The load factor the server is currently enforcing, as a multiplier on the base transaction fee. The load factor is determined by the highest of the individual server’s load factor, cluster’s load factor, and the overall network’s load factor.\"\n    },\n    \"peers\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"How many other rippled servers the node is currently connected to.\"\n    },\n    \"pubkeyNode\": {\n      \"type\": \"string\",\n      \"description\": \"Public key used to verify this node for internal communications; this key is automatically generated by the server the first time it starts up.\"\n    },\n    \"pubkeyValidator\": {\n      \"type\": \"string\",\n      \"description\": \"*(Admin only)* Public key used by this node to sign ledger validations.\"\n    },\n    \"serverState\": {\n      \"type\": \"string\",\n      \"description\": \"A string indicating to what extent the server is participating in the network. See [Possible Server States](https://xrpl.org/rippled-server-states.html) for more details.\",\n      \"enum\": [\"disconnected\", \"connected\", \"syncing\", \"tracking\", \"full\", \"validating\", \"proposing\"]\n    },\n    \"validatedLedger\": {\n      \"type\": \"object\",\n      \"description\": \"Information about the fully-validated ledger with the highest sequence number (the most recent).\",\n      \"properties\": {\n        \"age\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"description\": \"The time since the ledger was closed, in seconds.\"\n        },\n        \"baseFeeXRP\": {\n          \"$ref\": \"value\",\n          \"description\": \"Base fee, in XRP. This may be represented in scientific notation such as 1e-05 for 0.00005.\"\n        },\n        \"hash\": {\n          \"$ref\": \"hash256\",\n          \"description\": \"Unique hash for the ledger, as an uppercase hexadecimal string.\"\n        },\n        \"reserveBaseXRP\": {\n          \"$ref\": \"value\",\n          \"description\": \"Minimum amount of XRP necessary for every account to keep in reserve.\"\n        },\n        \"reserveIncrementXRP\": {\n          \"$ref\": \"value\",\n          \"description\": \"Amount of XRP added to the account reserve for each object an account owns in the ledger.\"\n        },\n        \"ledgerVersion\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"description\": \"Identifying ledger index of this ledger version.\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"age\", \"baseFeeXRP\", \"hash\", \"reserveBaseXRP\", \"reserveIncrementXRP\", \"ledgerVersion\"]\n    },\n    \"validationQuorum\": {\n      \"type\": \"number\",\n      \"description\": \"Minimum number of trusted validations required to validate a ledger version. Some circumstances may cause the server to require more validations.\"\n    }\n  },\n  \"required\": [\"buildVersion\", \"completeLedgers\", \"hostID\", \"ioLatencyMs\", \"lastClose\", \"loadFactor\", \"peers\", \"pubkeyNode\", \"serverState\", \"validatedLedger\", \"validationQuorum\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getSettings\",\n  \"$ref\": \"settingsPlusMemos\",\n  \"not\": {\n    \"required\": [\"memos\"]\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"orderbookOrders\",\n  \"type\": \"array\",\n  \"items\": {\n    \"description\": \"An order in the order book.\",\n    \"type\": \"object\",\n    \"properties\": {\n      \"specification\": {\n        \"$ref\": \"order\",\n        \"description\": \"An order specification that would create an order equivalent to the current state of this order.\"\n      },\n      \"properties\": {\n        \"description\": \"Properties of the order not in the specification.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"maker\": {\n            \"$ref\": \"address\",\n            \"description\": \"The address of the account that submitted the order.\"\n          },\n          \"sequence\": {\n            \"$ref\": \"sequence\",\n            \"description\": \"The account sequence number of the transaction that created this order.\"\n          },\n          \"makerExchangeRate\": {\n            \"$ref\": \"value\",\n            \"description\": \"The exchange rate from the point of view of the account that submitted the order (also known as \\\"quality\\\").\"\n          }\n        },\n        \"required\": [\"maker\", \"sequence\", \"makerExchangeRate\"],\n        \"addtionalProperties\": false\n      },\n      \"state\": {\n        \"description\": \"The state of the order.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"fundedAmount\": {\n            \"$ref\": \"amount\",\n            \"description\": \"How much of the amount the maker would have to pay that the maker currently holds.\"\n          },\n          \"priceOfFundedAmount\": {\n            \"$ref\": \"amount\",\n            \"description\": \"How much the `fundedAmount` would convert to through the exchange rate of this order.\"\n          }\n        },\n        \"required\": [\"fundedAmount\", \"priceOfFundedAmount\"],\n        \"additionalProperties\": false\n      },\n      \"data\": {\n        \"description\": \"The raw order data. This may include `owner_funds`, `Flags`, and other fields.\",\n        \"type\": \"object\",\n        \"additionalProperties\": true\n      }\n    },\n    \"required\": [\"specification\", \"properties\", \"data\"],\n    \"additionalProperties\": false\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"outcome\",\n  \"type\": \"object\",\n  \"description\": \"The outcome of the transaction (what effects it had).\",\n  \"properties\": {\n    \"result\": {\n      \"type\": \"string\",\n      \"description\": \"Result code returned by rippled. See [Transaction Results](https://xrpl.org/transaction-results.html) for a complete list.\"\n    },\n    \"timestamp\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"The timestamp when the transaction was validated. (May be missing when requesting transactions in binary mode.)\"\n    },\n    \"fee\": {\n      \"$ref\": \"value\",\n      \"description\": \"The XRP fee that was charged for the transaction.\"\n    },\n    \"deliveredAmount\": {\n      \"$ref\": \"amount\",\n      \"description\": \"For payment transactions, it is impossible to reliably compute the actual delivered amount from the balanceChanges due to fixed precision. If the payment is not a partial payment and the transaction succeeded, the deliveredAmount should always be considered to be the amount specified in the transaction.\"\n    },\n    \"balanceChanges\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"description\": \"Key is the XRP Ledger address; value is an array of signed amounts representing changes of balances for that address.\",\n        \"items\": {\"$ref\": \"balance\"}\n      }\n    },\n    \"orderbookChanges\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"description\": \"Key is the maker's XRP Ledger address; value is an array of changes\",\n        \"items\": {\"$ref\": \"orderChange\"}\n      }\n    },\n    \"channelChanges\": {\n      \"type\": \"object\",\n      \"description\": \"Properties reflecting the details of the payment channel.\"\n    },\n    \"ledgerVersion\": {\n      \"$ref\": \"ledgerVersion\",\n      \"description\": \"The ledger version that the transaction was validated in.\"\n    },\n    \"indexInLedger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"The ordering index of the transaction in the ledger.\"\n    }\n  },\n  \"required\": [\"result\", \"fee\", \"balanceChanges\",\n    \"orderbookChanges\", \"ledgerVersion\", \"indexInLedger\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getTransaction\",\n  \"description\": \"getTransaction response\",\n  \"link\": \"gettransaction\",\n  \"properties\": {\n    \"type\": {\n      \"$ref\": \"transactionType\"\n    },\n    \"specification\": {\n      \"description\": \"A specification that would produce the same outcome as this transaction. *Exception:* For payment transactions, this omits the `destination.amount` field, to prevent misunderstanding. The structure of the specification depends on the value of the `type` field (see [Transaction Types](#transaction-types) for details). *Note:* This is **not** necessarily the same as the original specification.\"\n    },\n    \"outcome\": {\n      \"$ref\": \"outcome\",\n      \"description\": \"The outcome of the transaction (what effects it had).\"\n    },\n    \"id\": {\n      \"$ref\": \"transactionHash\",\n      \"description\": \"A hash of the transaction that can be used to identify it.\"\n    },\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that initiated the transaction.\"\n    },\n    \"sequence\": {\n      \"$ref\": \"sequence\",\n      \"description\": \"The account sequence number of the transaction for the account that initiated it.\"\n    },\n    \"rawTransaction\": {\n      \"description\": \"The raw transaction data as a JSON string. For advanced users only; exercise caution when interpreting this data.\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"address\",\n    \"sequence\",\n    \"type\",\n    \"specification\",\n    \"outcome\"\n  ],\n  \"additionalProperties\": false,\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"payment\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"getPayment\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"order\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"order\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"orderCancellation\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"orderCancellation\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"trustline\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"trustline\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"settings\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"getSettings\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"checkCreate\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"checkCreate\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"checkCancel\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"checkCancel\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"checkCash\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"checkCash\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"escrowCreation\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"escrowCreation\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"escrowCancellation\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"escrowCancellation\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"escrowExecution\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"escrowExecution\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"paymentChannelCreate\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"paymentChannelCreate\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"paymentChannelFund\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"paymentChannelFund\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"paymentChannelClaim\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"paymentChannelClaim\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"depositPreauth\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"depositPreauth\"\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\n            \"accountDelete\"\n          ]\n        },\n        \"specification\": {\n          \"$ref\": \"accountDelete\"\n        }\n      }\n    }\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getTransactions\",\n  \"type\": \"array\",\n  \"items\": {\n    \"$ref\": \"getTransaction\"\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getTrustlines\",\n  \"type\": \"array\",\n  \"items\": {\n    \"properties\": {\n      \"specification\": {\n        \"$ref\": \"trustline\",\n        \"description\": \"A trust line specification that would produce this trust line in its current state.\"\n      },\n      \"counterparty\": {\n        \"properties\": {\n          \"limit\": {\n            \"$ref\": \"value\",\n            \"description\": \"The maximum amount that the counterparty can be owed through the trust line.\"\n          },\n          \"ripplingDisabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, payments cannot ripple through this trustline.\"\n          },\n          \"frozen\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, the trust line is frozen, which means that funds can only be sent directly to the counterparty.\"\n          },\n          \"authorized\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, the counterparty authorizes this party to hold issuances from the counterparty.\"\n          }\n        },\n        \"description\": \"Properties of the trustline from the perspective of the counterparty.\",\n        \"required\": [\"limit\"],\n        \"additionalProperties\": false\n      },\n      \"state\": {\n        \"properties\": {\n          \"balance\": {\n            \"$ref\": \"signedValue\",\n            \"description\": \"The balance on the trust line, representing which party owes the other and by how much.\"\n          }\n        },\n        \"description\": \"Non-settings details of the trust line's state.\",\n        \"required\": [\"balance\"],\n        \"additionalProperties\": false\n      }\n    },\n    \"required\": [\"specification\", \"counterparty\", \"state\"],\n    \"additionalProperties\": false\n  }\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"signPaymentChannelClaim\",\n  \"type\": \"string\",\n  \"$ref\": \"signature\",\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"verifyPaymentChannelClaim\",\n  \"type\": \"boolean\",\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getBalancesParameters\",\n  \"description\": \"Parameters for getBalances\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account to get balances for.\"\n    },\n    \"options\": {\n      \"description\": \"Options to filter and determine which balances to return.\",\n      \"properties\": {\n        \"counterparty\": {\n          \"$ref\": \"address\",\n          \"description\": \"Only return balances with this counterparty.\"\n        },\n        \"currency\": {\n          \"$ref\": \"currency\",\n          \"description\": \"Only return balances for this currency.\"\n        },\n        \"limit\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"description\": \"Return at most this many balances.\"\n        },\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Return balances as they were in this historical ledger version.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getBalanceSheetParameters\",\n  \"description\": \"Parameters for getBalanceSheet\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The XRP Ledger address of the account to get the balance sheet of.\"\n    },\n    \"options\": {\n      \"properties\": {\n        \"excludeAddresses\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"address\"},\n          \"uniqueItems\": true,\n          \"description\": \"Addresses to exclude from the balance totals.\"\n        },\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Get the balance sheet as of this historical ledger version.\"\n        }\n      },\n      \"description\": \"Options to determine how the balances are calculated.\",\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getLedgerParameters\",\n  \"description\": \"Parameters for getLedger\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"options\": {\n      \"description\": \"Options affecting what ledger and how much data to return.\",\n      \"properties\": {\n        \"ledgerHash\": {\n          \"type\": \"string\",\n          \"description\": \"Get ledger data for this historical ledger hash.\"\n        },\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Get ledger data for this historical ledger version.\"\n        },\n        \"includeAllData\": {\n          \"type\": \"boolean\",\n          \"description\": \"Include the details of the transactions or state information if `includeTransactions` or `includeState` is set.\"\n        },\n        \"includeTransactions\": {\n          \"type\": \"boolean\",\n          \"description\": \"Return an array of transactions in this ledger. By default, provides the identifying hashes for each transaction. If `includeAllData` is true, include the entire transaction JSON for each transaction instead.\"\n        },\n        \"includeState\": {\n          \"type\": \"boolean\",\n          \"description\": \"Return an array of state data in this ledger. By default, provides the identifying hashes of state data. If `includeAllData` is true, return the state data in JSON form instead. **Admin required:** This is a very large amount of data.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getOrdersParameters\",\n  \"description\": \"Parameters for getOrders\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The XRP Ledger address of the account to get open orders for.\"\n    },\n    \"options\": {\n      \"description\": \"Options that determine what orders to return.\",\n      \"properties\": {\n        \"limit\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"description\": \"Return at most this many orders.\"\n        },\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Return orders as of this historical ledger version.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"address\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getOrderbookParameters\",\n  \"description\": \"Parameters for getOrderbook\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"Address of an account to use as point-of-view. (This affects which unfunded offers are returned.)\"\n    },\n    \"orderbook\": {\n      \"$ref\": \"orderbook\",\n      \"description\": \"The order book to get.\"\n    },\n    \"options\": {\n      \"description\": \"Options to determine what to return.\",\n      \"properties\": {\n        \"limit\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"description\": \"Return at most this many orders from the order book.\"\n        },\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Return the order book as of this historical ledger version.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"address\", \"orderbook\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getPathsParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"pathfind\": {\n      \"description\": \"Specification of a pathfind request.\",\n      \"properties\": {\n        \"source\": {\n          \"description\": \"Properties of the source of funds.\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"address\": {\n              \"$ref\": \"address\",\n              \"description\": \"The XRP Ledger address of the planned sender.\"\n            },\n            \"amount\": {\n              \"$ref\": \"laxAmount\",\n              \"description\": \"The amount of funds to send.\"\n            },\n            \"currencies\": {\n              \"description\": \"An array of currencies (with optional counterparty) that may be used in the payment paths.\",\n              \"type\": \"array\",\n              \"items\": {\n                \"description\": \"A currency with optional counterparty.\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"currency\": {\"$ref\": \"currency\"},\n                  \"counterparty\": {\n                    \"$ref\": \"address\",\n                    \"description\": \"The counterparty for the currency; if omitted any counterparty may be used.\"\n                  }\n                },\n                \"required\": [\"currency\"],\n                \"additionalProperties\": false\n              },\n              \"uniqueItems\": true\n            }\n          },\n          \"not\": {\n            \"required\": [\"amount\", \"currencies\"]\n          },\n          \"additionalProperties\": false,\n          \"required\": [\"address\"]\n        },\n        \"destination\": {\n          \"description\": \"Properties of the destination of funds.\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"address\": {\n              \"$ref\": \"address\",\n              \"description\": \"An address representing the destination of the transaction.\"\n            },\n            \"amount\": {\n              \"$ref\": \"laxLaxAmount\",\n              \"description\": \"The amount to be received by the receiver (`value` may be ommitted if a source amount is specified).\"\n            }\n          },\n          \"required\": [\"address\", \"amount\"],\n          \"additionalProperties\": false\n        }\n      },\n      \"required\": [\"source\", \"destination\"],\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"pathfind\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getPaymentChannelParameters\",\n  \"description\": \"Parameters for getPaymentChannel\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"256-bit hexadecimal channel identifier.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"id\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"api-options\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"trace\": {\n      \"type\": \"boolean\",\n      \"description\": \"If true, log rippled requests and responses to stdout.\"\n    },\n    \"feeCushion\": {\n      \"type\": \"number\",\n      \"minimum\": 1,\n      \"description\": \"Factor to multiply estimated fee by to provide a cushion in case the required fee rises during submission of a transaction. Defaults to `1.2`.\"\n    },\n    \"maxFeeXRP\": {\n      \"type\": \"string\",\n      \"description\": \"Maximum fee to use with transactions, in XRP. Must be a string-encoded number. Defaults to `'2'`.\"\n    },\n    \"server\": {\n      \"type\": \"string\",\n      \"description\": \"URI for rippled websocket port to connect to. Must start with `wss://`, `ws://`, `wss+unix://`, or `ws+unix://`.\",\n      \"format\": \"uri\",\n      \"pattern\": \"^(wss?|wss?\\\\+unix)://\"\n    },\n    \"proxy\": {\n      \"format\": \"uri\",\n      \"description\": \"URI for HTTP/HTTPS proxy to use to connect to the rippled server.\"\n    },\n    \"timeout\": {\n      \"type\": \"integer\",\n      \"description\": \"Request timeout in milliseconds before considering a request to have failed. See also: connectionTimeout.\",\n      \"minimum\": 1\n    },\n    \"connectionTimeout\": {\n      \"type\": \"integer\",\n      \"description\": \"Connection timeout, in milliseconds, before considering connect() to have failed.\",\n      \"minimum\": 1\n    },\n    \"proxyAuthorization\": {\n      \"type\": \"string\",\n      \"description\": \"Username and password for HTTP basic authentication to the proxy in the format **username:password**.\"\n    },\n    \"authorization\": {\n      \"type\": \"string\",\n      \"description\": \"Username and password for HTTP basic authentication to the rippled server in the format **username:password**.\"\n    },\n    \"trustedCertificates\": {\n      \"type\": \"array\",\n      \"description\": \"Array of PEM-formatted SSL certificates to trust when connecting to a proxy. This is useful if you want to use a self-signed certificate on the proxy server. Note: Each element must contain a single certificate; concatenated certificates are not valid.\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"A PEM-formatted SSL certificate to trust when connecting to a proxy.\"\n      }\n    },\n    \"key\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing the private key of the client in PEM format. (Can be an array of keys).\"\n    },\n    \"passphrase\": {\n      \"type\": \"string\",\n      \"description\": \"The passphrase for the private key of the client.\"\n    },\n    \"certificate\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing the certificate key of the client in PEM format. (Can be an array of certificates).\"\n    }\n  },\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getSettingsParameters\",\n  \"description\": \"Parameters for getSettings\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account to get the settings of.\"\n    },\n    \"options\": {\n      \"description\": \"Options that affect what to return.\",\n      \"properties\": {\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Get the settings as of this historical ledger version.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"address\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getAccountInfoParameters\",\n  \"description\": \"Parameters for getAccountInfo\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account to get the account info of.\"\n    },\n    \"options\": {\n      \"description\": \"Options that affect what to return.\",\n      \"properties\": {\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Get the account info as of this historical ledger version.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"address\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getAccountObjectsOptions\",\n  \"description\": \"Request options for getAccountObjects\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account to get the account objects of.\"\n    },\n    \"options\": {\n      \"description\": \"Options that affect what to return.\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"check\",\n            \"escrow\",\n            \"offer\",\n            \"payment_channel\",\n            \"signer_list\",\n            \"state\"\n          ],\n          \"description\":\n            \"(Optional) Filter results to include only this type of ledger object. The valid types are: `check`, `escrow`, `offer`, `payment_channel`, `signer_list`, and `state` (trust line).\"\n        },\n        \"ledgerHash\": {\n          \"type\": \"string\",\n          \"description\":\n            \"(Optional) A 20-byte hex string for the ledger version to use.\"\n        },\n        \"ledgerIndex\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"ledgerVersion\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"description\":\n            \"(Optional) The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically.\"\n        },\n        \"limit\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"description\":\n            \"(Optional) The maximum number of objects to include in the results.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"address\"],\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getTransactionParameters\",\n  \"description\": \"Parameters for getTransaction\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\"$ref\": \"transactionHash\"},\n    \"options\": {\n      \"description\": \"Options to limit the ledger versions to search or include raw transaction data.\",\n      \"properties\": {\n        \"minLedgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"The lowest ledger version to search. This must be an integer greater than 0, or one of the following strings: 'validated', 'closed', 'current'.\"\n        },\n        \"maxLedgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"The highest ledger version to search. This must be an integer greater than 0, or one of the following strings: 'validated', 'closed', 'current'.\"\n        },\n        \"includeRawTransaction\": {\n          \"description\": \"Include raw transaction data. For advanced users; exercise caution when interpreting this data.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"id\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getTransactionsParameters\",\n  \"description\": \"Parameters for getTransactions\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account to get transactions for.\"\n    },\n    \"options\": {\n      \"description\": \"Options to filter the resulting transactions.\",\n      \"properties\": {\n        \"start\": {\n          \"$ref\": \"hash256\",\n          \"description\": \"If specified, start the results from this transaction. You cannot use `start` with `minLedgerVersion` or `maxLedgerVersion`. When `start` is specified, these ledger versions are determined internally.\"\n        },\n        \"limit\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"description\": \"If specified, return at most this many transactions.\"\n        },\n        \"minLedgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Return only transactions in this ledger version or higher.\"\n        },\n        \"maxLedgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Return only transactions in this ledger version or lower.\"\n        },\n        \"earliestFirst\": {\n          \"type\": \"boolean\",\n          \"description\": \"If true, sort transactions so that the earliest ones come first. By default, the newest transactions come first.\"\n        },\n        \"excludeFailures\": {\n          \"type\": \"boolean\",\n          \"description\": \"If true, the result omits transactions that did not succeed.\"\n        },\n        \"initiated\": {\n          \"type\": \"boolean\",\n          \"description\": \"If true, return only transactions initiated by the account specified by `address`. If false, return only transactions not initiated by the account specified by `address`.\"\n        },\n        \"counterparty\": {\n          \"$ref\": \"address\",\n          \"description\": \"If provided, only return transactions with this account as a counterparty to the transaction.\"\n        },\n        \"types\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"transactionType\"},\n          \"description\": \"Only return transactions of the specified [Transaction Types](#transaction-types).\"\n        },\n        \"includeRawTransactions\": {\n          \"description\": \"Include raw transaction data. For advanced users; exercise caution when interpreting this data. \"\n        },\n        \"binary\": {\n          \"type\": \"boolean\",\n          \"description\": \"If true, return transactions in binary format rather than JSON.\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"not\": {\n        \"anyOf\": [\n          {\"required\": [\"start\", \"minLedgerVersion\"]},\n          {\"required\": [\"start\", \"maxLedgerVersion\"]}\n        ]\n      }\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"getTrustlinesParameters\",\n  \"description\": \"Parameters for getTrustlines\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account to get trustlines for.\"\n    },\n    \"options\": {\n      \"description\": \"Options to filter and determine which trustlines to return.\",\n      \"properties\": {\n        \"counterparty\": {\n          \"$ref\": \"address\",\n          \"description\": \"Only return trustlines with this counterparty.\"\n        },\n        \"currency\": {\n          \"$ref\": \"currency\",\n          \"description\": \"Only return trustlines for this currency.\"\n        },\n        \"limit\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"description\": \"Return at most this many trustlines.\"\n        },\n        \"ledgerVersion\": {\n          \"$ref\": \"ledgerVersion\",\n          \"description\": \"Return trustlines as they were in this historical ledger version.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"preparePaymentParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"payment\": {\n      \"$ref\": \"payment\",\n      \"description\": \"The specification of the payment to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"payment\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareOrderParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"order\": {\n      \"$ref\": \"order\",\n      \"description\": \"The specification of the order to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"order\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareTrustlineParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"trustline\": {\n      \"$ref\": \"trustline\",\n      \"description\": \"The specification of the trustline to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"trustline\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareOrderCancellationParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"orderCancellation\": {\n      \"$ref\": \"orderCancellation\",\n      \"description\": \"The specification of the order cancellation to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"orderCancellation\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareSettingsParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"settings\": {\n      \"$ref\": \"settings\",\n      \"description\": \"The specification of the settings to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"settings\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareEscrowCreationParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"escrowCreation\": {\n      \"$ref\": \"escrowCreation\",\n      \"description\": \"The specification of the escrow creation to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"escrowCreation\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareEscrowCancellationParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"escrowCancellation\": {\n      \"$ref\": \"escrowCancellation\",\n      \"description\": \"The specification of the escrow cancellation to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"escrowCancellation\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareEscrowExecutionParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"escrowExecution\": {\n      \"$ref\": \"escrowExecution\",\n      \"description\": \"The specification of the escrow execution to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"escrowExecution\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"preparePaymentChannelCreateParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"paymentChannelCreate\": {\n      \"$ref\": \"paymentChannelCreate\",\n      \"description\": \"The specification of the payment channel to create.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"paymentChannelCreate\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"preparePaymentChannelFundParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"paymentChannelFund\": {\n      \"$ref\": \"paymentChannelFund\",\n      \"description\": \"The channel to fund, and the details of how to fund it.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"paymentChannelFund\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"preparePaymentChannelClaimParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"paymentChannelClaim\": {\n      \"$ref\": \"paymentChannelClaim\",\n      \"description\": \"Details of the channel and claim.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"paymentChannelClaim\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareCheckCreateParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"checkCreate\": {\n      \"$ref\": \"checkCreate\",\n      \"description\": \"The specification of the Check create creation to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"checkCreate\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareCheckCashParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"checkCash\": {\n      \"$ref\": \"checkCash\",\n      \"description\": \"The specification of the Check cash to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"checkCash\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareCheckCancelParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"checkCancel\": {\n      \"$ref\": \"checkCancel\",\n      \"description\": \"The specification of the Check cancellation to prepare.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"checkCancel\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"prepareTicketParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address\": {\n      \"$ref\": \"address\",\n      \"description\": \"The address of the account that is creating the transaction.\"\n    },\n    \"ticketCount\": {\n      \"type\": \"number\",\n      \"description\": \"The number of tickets to be created.\"\n    },\n    \"instructions\": {\"$ref\": \"instructions\"}\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"address\", \"ticketCount\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"computeLedgerHashParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"ledger\": {\n      \"$ref\": \"getLedger\",\n      \"description\": \"The ledger header to hash.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"ledger\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"signParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"txJSON\": {\n      \"type\": \"string\",\n      \"description\": \"Transaction represented as a JSON string in rippled format.\"\n    },\n    \"secret\": {\n      \"type\": \"string\",\n      \"format\": \"secret\",\n      \"description\": \"The secret of the account that is initiating the transaction. (This field cannot be used with keypair).\"\n    },\n    \"keypair\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"privateKey\": {\n          \"type\": \"privateKey\",\n          \"description\": \"The uppercase hexadecimal representation of the secp256k1 or Ed25519 private key. Ed25519 keys are prefixed with 0xED. You can read about how keys are derived [here](https://xrpl.org/cryptographic-keys.html).\"\n        },\n        \"publicKey\": {\n          \"type\": \"publicKey\",\n          \"description\": \"The uppercase hexadecimal representation of the secp256k1 or Ed25519 public key. Ed25519 keys are prefixed with 0xED. You can read about how keys are derived [here](https://xrpl.org/cryptographic-keys.html).\"\n        }\n      },\n      \"description\": \"The private and public key of the account that is initiating the transaction. (This field cannot be used with secret).\",\n      \"required\": [\"privateKey\", \"publicKey\"],\n      \"additionalProperties\": false\n    },\n    \"options\": {\n      \"type\": \"object\",\n      \"description\": \"Options that control the type of signature to create.\",\n      \"properties\": {\n        \"signAs\": {\n          \"$ref\": \"address\",\n          \"description\": \"The account that the signature should count for in multisigning.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"txJSON\"],\n  \"oneOf\": [\n    {\n      \"required\": [\"secret\"],\n      \"not\": {\"required\": [\"keypair\"]}\n    },\n    {\n      \"required\": [\"keypair\"],\n      \"not\": {\"required\": [\"secret\"]}\n    }\n  ]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"submitParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"signedTransaction\": {\n      \"$ref\": \"blob\",\n      \"description\": \"A signed transaction as returned by [sign](#sign).\"\n    },\n    \"failHard\": {\n      \"type\": \"boolean\",\n      \"description\": \"If `true`, and the transaction fails locally, do not retry or relay the transaction to other servers. Defaults to `false`.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"signedTransaction\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"generateAddressParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"options\": {\n      \"type\": \"object\",\n      \"description\": \"Options to control how the address and secret are generated.\",\n      \"properties\": {\n        \"entropy\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 255\n          },\n          \"description\": \"The entropy to use to generate the seed. Must be an array of length 16 with values from 0-255 (16 bytes of entropy)\"\n        },\n        \"algorithm\": {\n          \"type\": \"string\",\n          \"enum\": [\"ecdsa-secp256k1\", \"ed25519\"],\n          \"description\": \"The digital signature algorithm to generate an address for. Can be `ecdsa-secp256k1` (default) or `ed25519`.\"\n        },\n        \"test\": {\n          \"type\": \"boolean\",\n          \"description\": \"Specifies whether the address is intended for use on a test network such as Testnet or Devnet. If `true`, the address should only be used for testing, and starts with `T`. If `false`, the address should only be used on Mainnet, and starts with `X`.\"\n        },\n        \"includeClassicAddress\": {\n          \"type\": \"boolean\",\n          \"description\": \"If `true`, also return the classic address.\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"signPaymentChannelClaimParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"channel\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"256-bit hexadecimal channel identifier.\"\n    },\n    \"amount\": {\n      \"$ref\": \"value\",\n      \"description\": \"Amount of XRP authorized by the claim.\"\n    },\n    \"privateKey\": {\n      \"$ref\": \"publicKey\",\n      \"description\": \"The private key to sign the payment channel claim.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"channel\", \"amount\", \"privateKey\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"verifyPaymentChannelClaimParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"channel\": {\n      \"$ref\": \"hash256\",\n      \"description\": \"256-bit hexadecimal channel identifier.\"\n    },\n    \"amount\": {\n      \"$ref\": \"value\",\n      \"description\": \"Amount of XRP authorized by the claim.\"\n    },\n    \"signature\": {\n      \"$ref\": \"signature\",\n      \"description\": \"Signature of this claim.\"\n    },\n    \"publicKey\": {\n      \"$ref\": \"publicKey\",\n      \"description\": \"Public key of the channel's sender\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"channel\", \"amount\", \"signature\", \"publicKey\"]\n}\n", "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"combineParameters\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"signedTransactions\": {\n      \"type\": \"array\",\n      \"description\": \"An array of signed transactions (from the output of [sign](#sign)) to combine.\",\n      \"items\": {\n        \"type\": \"string\",\n        \"pattern\": \"^[A-F0-9]+$\",\n        \"description\": \"A single-signed transaction represented as an uppercase hexadecimal string (from the output of [sign](#sign))\"\n      },\n      \"minLength\": 1\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"signedTransactions\"]\n}\n", null, null, null, null, null, null, "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https-proxy-agent\" has been externalized for browser compatibility. Cannot access \"https-proxy-agent.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", null, null, null, null, "'use strict'\nvar _ = require('lodash')\nvar BigNumber = require('bignumber.js')\n\n// drops is a bignumber.js BigNumber\nfunction dropsToXRP(drops) {\n  return drops.dividedBy(1000000)\n}\n\nfunction normalizeNode(affectedNode) {\n  var diffType = Object.keys(affectedNode)[0]\n  var node = affectedNode[diffType]\n  return Object.assign({}, node, {\n    diffType: diffType,\n    entryType: node.LedgerEntryType,\n    ledgerIndex: node.LedgerIndex,\n    newFields: node.NewFields || {},\n    finalFields: node.FinalFields || {},\n    previousFields: node.PreviousFields || {}\n  })\n}\n\nfunction normalizeNodes(metadata) {\n  if (!metadata.AffectedNodes) {\n    return []\n  }\n  return metadata.AffectedNodes.map(normalizeNode)\n}\n\nfunction parseCurrencyAmount(currencyAmount) {\n  if (currencyAmount === undefined) {\n    return undefined\n  }\n  if (typeof currencyAmount === 'string') {\n    return {\n      currency: 'XRP',\n      value: dropsToXRP(new BigNumber(currencyAmount)).toString()\n    }\n  }\n\n  return {\n    currency: currencyAmount.currency,\n    counterparty: currencyAmount.issuer,\n    value: currencyAmount.value\n  }\n}\n\nfunction isAccountField(fieldName) {\n  var fieldNames = ['Account', 'Owner', 'Destination', 'Issuer', 'Target']\n  return _.includes(fieldNames, fieldName)\n}\n\nfunction isAmountFieldAffectingIssuer(fieldName) {\n  var fieldNames = ['LowLimit', 'HighLimit', 'TakerPays', 'TakerGets']\n  return _.includes(fieldNames, fieldName)\n}\n\nfunction getAffectedAccounts(metadata) {\n  var accounts = []\n  _.forEach(normalizeNodes(metadata), function(node) {\n    var fields = node.diffType === 'CreatedNode' ?\n      node.newFields : node.finalFields\n    _.forEach(fields, function(fieldValue, fieldName) {\n      if (isAccountField(fieldName)) {\n        accounts.push(fieldValue)\n      } else if (isAmountFieldAffectingIssuer(fieldName) && fieldValue.issuer) {\n        accounts.push(fieldValue.issuer)\n      }\n    })\n  })\n  return _.uniq(accounts)\n}\n\n\nmodule.exports = {\n  dropsToXRP: dropsToXRP,\n  normalizeNodes: normalizeNodes,\n  parseCurrencyAmount: parseCurrencyAmount,\n  getAffectedAccounts: getAffectedAccounts\n}\n", "'use strict'\n\nvar _ = require('lodash')\nvar BigNumber = require('bignumber.js')\nvar normalizeNodes = require('./utils').normalizeNodes\nvar dropsToXRP = require('./utils').dropsToXRP\n\nfunction groupByAddress(balanceChanges) {\n  var grouped = _.groupBy(balanceChanges, function(node) {\n    return node.address\n  })\n  return _.mapValues(grouped, function(group) {\n    return _.map(group, function(node) {\n      return node.balance\n    })\n  })\n}\n\nfunction parseValue(value) {\n  return new BigNumber(value.value || value)\n}\n\nfunction computeBalanceChange(node) {\n  var value = null\n  if (node.newFields.Balance) {\n    value = parseValue(node.newFields.Balance)\n  } else if (node.previousFields.Balance && node.finalFields.Balance) {\n    value = parseValue(node.finalFields.Balance).minus(\n      parseValue(node.previousFields.Balance))\n  }\n  return value === null ? null : value.isZero() ? null : value\n}\n\nfunction parseFinalBalance(node) {\n  if (node.newFields.Balance) {\n    return parseValue(node.newFields.Balance)\n  } else if (node.finalFields.Balance) {\n    return parseValue(node.finalFields.Balance)\n  }\n  return null\n}\n\n\nfunction parseXRPQuantity(node, valueParser) {\n  var value = valueParser(node)\n\n  if (value === null) {\n    return null\n  }\n\n  return {\n    address: node.finalFields.Account || node.newFields.Account,\n    balance: {\n      counterparty: '',\n      currency: 'XRP',\n      value: dropsToXRP(value).toString()\n    }\n  }\n}\n\nfunction flipTrustlinePerspective(quantity) {\n  var negatedBalance = (new BigNumber(quantity.balance.value)).negated()\n  return {\n    address: quantity.balance.counterparty,\n    balance: {\n      counterparty: quantity.address,\n      currency: quantity.balance.currency,\n      value: negatedBalance.toString()\n    }\n  }\n}\n\nfunction parseTrustlineQuantity(node, valueParser) {\n  var value = valueParser(node)\n\n  if (value === null) {\n    return null\n  }\n\n  /*\n   * A trustline can be created with a non-zero starting balance\n   * If an offer is placed to acquire an asset with no existing trustline,\n   * the trustline can be created when the offer is taken.\n   */\n  var fields = _.isEmpty(node.newFields) ? node.finalFields : node.newFields\n\n  // the balance is always from low node's perspective\n  var result = {\n    address: fields.LowLimit.issuer,\n    balance: {\n      counterparty: fields.HighLimit.issuer,\n      currency: fields.Balance.currency,\n      value: value.toString()\n    }\n  }\n  return [result, flipTrustlinePerspective(result)]\n}\n\nfunction parseQuantities(metadata, valueParser) {\n  var values = normalizeNodes(metadata).map(function(node) {\n    if (node.entryType === 'AccountRoot') {\n      return [parseXRPQuantity(node, valueParser)]\n    } else if (node.entryType === 'RippleState') {\n      return parseTrustlineQuantity(node, valueParser)\n    }\n    return []\n  })\n  return groupByAddress(_.compact(_.flatten(values)))\n}\n\n/**\n *  Computes the complete list of every balance that changed in the ledger\n *  as a result of the given transaction.\n *\n *  @param {Object} metadata Transaction metada\n *  @returns {Object} parsed balance changes\n */\nfunction parseBalanceChanges(metadata) {\n  return parseQuantities(metadata, computeBalanceChange)\n}\n\n\n/**\n *  Computes the complete list of every final balance in the ledger\n *  as a result of the given transaction.\n *\n *  @param {Object} metadata Transaction metada\n *  @returns {Object} parsed balances\n */\nfunction parseFinalBalances(metadata) {\n  return parseQuantities(metadata, parseFinalBalance)\n}\n\nmodule.exports.parseBalanceChanges = parseBalanceChanges\nmodule.exports.parseFinalBalances = parseFinalBalances\n", "'use strict'\nvar assert = require('assert')\nvar BigNumber = require('bignumber.js')\n\n/*\nThe quality, as stored in the last 64 bits of a directory index, is stored as\nthe quotient of TakerPays/TakerGets. It uses drops (1e-6 XRP) for XRP values.\n*/\n\nfunction adjustQualityForXRP(quality, takerGetsCurrency, takerPaysCurrency) {\n  var numeratorShift = (takerPaysCurrency === 'XRP' ? -6 : 0)\n  var denominatorShift = (takerGetsCurrency === 'XRP' ? -6 : 0)\n  var shift = numeratorShift - denominatorShift\n  return shift === 0 ? (new BigNumber(quality)).toString() :\n    (new BigNumber(quality)).shiftedBy(shift).toString()\n}\n\nfunction parseQuality(qualityHex, takerGetsCurrency, takerPaysCurrency) {\n  assert(qualityHex.length === 16)\n  var mantissa = new BigNumber(qualityHex.substring(2), 16)\n  var offset = parseInt(qualityHex.substring(0, 2), 16) - 100\n  var quality = mantissa.toString() + 'e' + offset.toString()\n  return adjustQualityForXRP(quality, takerGetsCurrency, takerPaysCurrency)\n}\n\nmodule.exports = parseQuality\n", "'use strict'\nvar _ = require('lodash')\nvar utils = require('./utils')\nvar GlobalBigNumber = require('bignumber.js')\nvar BigNumber = GlobalBigNumber.clone({DECIMAL_PLACES: 40})\nvar parseQuality = require('./quality')\n\nvar lsfSell = 0x00020000 // see \"lsfSell\" flag in rippled source code\n\nfunction removeUndefined(obj) {\n  return _.omitBy(obj, _.isUndefined)\n}\n\nfunction convertOrderChange(order) {\n  var takerGets = order.taker_gets\n  var takerPays = order.taker_pays\n  var direction = order.sell ? 'sell' : 'buy'\n  var quantity = (direction === 'buy') ? takerPays : takerGets\n  var totalPrice = (direction === 'buy') ? takerGets : takerPays\n  return removeUndefined({\n    direction: direction,\n    quantity: quantity,\n    totalPrice: totalPrice,\n    sequence: order.sequence,\n    status: order.status,\n    makerExchangeRate: order.quality,\n    expirationTime: order.expiration\n  })\n}\n\nfunction rippleToUnixTimestamp(rpepoch) {\n  return (rpepoch + 0x386D4380) * 1000\n}\n\nfunction getExpirationTime(node) {\n  var expirationTime = node.finalFields.Expiration || node.newFields.Expiration\n  if (expirationTime === undefined) {\n    return undefined\n  }\n  return (new Date(rippleToUnixTimestamp(expirationTime))).toISOString()\n}\n\nfunction getQuality(node) {\n  var takerGets = node.finalFields.TakerGets || node.newFields.TakerGets\n  var takerPays = node.finalFields.TakerPays || node.newFields.TakerPays\n  var takerGetsCurrency = takerGets.currency || 'XRP'\n  var takerPaysCurrency = takerPays.currency || 'XRP'\n  var bookDirectory = node.finalFields.BookDirectory\n    || node.newFields.BookDirectory\n  var qualityHex = bookDirectory.substring(bookDirectory.length - 16)\n  return parseQuality(qualityHex, takerGetsCurrency, takerPaysCurrency)\n}\n\nfunction parseOrderStatus(node) {\n  if (node.diffType === 'CreatedNode') {\n    // \"submitted\" is more conventional, but could be confusing in the\n    // context of Ripple\n    return 'created'\n  }\n\n  if (node.diffType === 'ModifiedNode') {\n    return 'partially-filled'\n  }\n\n  if (node.diffType === 'DeletedNode') {\n    // A filled order has previous fields\n    if (node.previousFields.hasOwnProperty('TakerPays')) {\n      return 'filled'\n    }\n\n    // A cancelled order has no previous fields\n    // google search for \"cancelled order\" shows 5x more results than\n    // \"canceled order\", even though both spellings are correct\n    return 'cancelled'\n  }\n  return undefined\n}\n\nfunction calculateDelta(finalAmount, previousAmount) {\n  if (previousAmount) {\n    var finalValue = new BigNumber(finalAmount.value)\n    var previousValue = new BigNumber(previousAmount.value)\n    return finalValue.minus(previousValue).abs().toString()\n  }\n  return '0'\n}\n\nfunction parseChangeAmount(node, type) {\n  var status = parseOrderStatus(node)\n\n  if (status === 'cancelled') {\n    // Canceled orders do not have PreviousFields; FinalFields\n    // have positive values\n    return utils.parseCurrencyAmount(node.finalFields[type])\n  } else if (status === 'created') {\n    return utils.parseCurrencyAmount(node.newFields[type])\n  }\n  var finalAmount = utils.parseCurrencyAmount(node.finalFields[type])\n  var previousAmount = utils.parseCurrencyAmount(node.previousFields[type])\n  var value = calculateDelta(finalAmount, previousAmount)\n  return _.assign({}, finalAmount, {value: value})\n}\n\nfunction parseOrderChange(node) {\n  var orderChange = convertOrderChange({\n    taker_pays: parseChangeAmount(node, 'TakerPays'),\n    taker_gets: parseChangeAmount(node, 'TakerGets'),\n    sell: (node.finalFields.Flags & lsfSell) !== 0,\n    sequence: node.finalFields.Sequence || node.newFields.Sequence,\n    status: parseOrderStatus(node),\n    quality: getQuality(node),\n    expiration: getExpirationTime(node)\n  })\n\n  Object.defineProperty(orderChange, 'account', {\n    value: node.finalFields.Account || node.newFields.Account\n  })\n\n  return orderChange\n}\n\nfunction groupByAddress(orderChanges) {\n  return _.groupBy(orderChanges, function(change) {\n    return change.account\n  })\n}\n\n/**\n * Computes the complete list of every Offer that changed in the ledger\n * as a result of the given transaction.\n * Returns changes grouped by Ripple account.\n *\n *  @param {Object} metadata - Transaction metadata as return by ripple-lib\n *  @returns {Object} - Orderbook changes grouped by Ripple account\n *\n */\nexports.parseOrderbookChanges = function parseOrderbookChanges(metadata) {\n  var nodes = utils.normalizeNodes(metadata)\n\n  var orderChanges = _.map(_.filter(nodes, function(node) {\n    return node.entryType === 'Offer'\n  }), parseOrderChange)\n\n  return groupByAddress(orderChanges)\n}\n", "'use strict'\n\nconst normalizeNodes = require('./utils').normalizeNodes\nconst BigNumber = require('bignumber.js')\n\nfunction parsePaymentChannelStatus(node) {\n  if (node.diffType === 'CreatedNode') {\n    return 'created'\n  }\n\n  if (node.diffType === 'ModifiedNode') {\n    return 'modified'\n  }\n\n  if (node.diffType === 'DeletedNode') {\n    return 'deleted'\n  }\n  return undefined\n}\n\nfunction summarizePaymentChannel(node) {\n\n  const final = (node.diffType === 'CreatedNode') ?\n    node.newFields : node.finalFields\n  const prev = node.previousFields || {}\n\n  const summary = {\n    // Status may be 'created', 'modified', or 'deleted'.\n    status: parsePaymentChannelStatus(node),\n\n    // The LedgerIndex indicates the Channel ID,\n    // which is necessary to sign claims.\n    channelId: node.ledgerIndex,\n\n    // The source address that owns this payment channel.\n    // This comes from the sending address of the\n    // transaction that created the channel.\n    source: final.Account,\n\n    // The destination address for this payment channel.\n    // While the payment channel is open, this address is the only one that can receive\n    // XRP from the channel. This comes from the Destination field of the transaction\n    // that created the channel.\n    destination: final.Destination,\n\n    // Total XRP, in drops, that has been allocated to this channel.\n    // This includes XRP that has been paid to the destination address.\n    // This is initially set by the transaction that created the channel and\n    // can be increased if the source address sends a PaymentChannelFund transaction.\n    channelAmountDrops:\n          new BigNumber(final.Amount || 0).toString(10),\n\n    // Total XRP, in drops, already paid out by the channel.\n    // The difference between this value and the Amount field is how much XRP can still\n    // be paid to the destination address with PaymentChannelClaim transactions.\n    // If the channel closes, the remaining difference is returned to the source address.\n    channelBalanceDrops:\n          new BigNumber(final.Balance || 0).toString(10)\n  }\n\n  if (prev.Amount) {\n    // The change in the number of XRP drops allocated to this channel.\n    // This is positive if this is a PaymentChannelFund transaction.\n    summary.channelAmountChangeDrops = new BigNumber(final.Amount)\n      .minus(new BigNumber(prev.Amount || 0))\n      .toString(10)\n  }\n\n  if (prev.Balance) {\n    // The change in the number of XRP drops already paid out by the channel.\n    summary.channelBalanceChangeDrops = new BigNumber(final.Balance)\n      .minus(new BigNumber(prev.Balance || 0))\n      .toString(10)\n  }\n\n  if (node.PreviousTxnID) {\n    // The identifying hash of the transaction that\n    // most recently modified this payment channel object.\n    // You can use this to retrieve the object's history.\n    summary.previousTxnId = node.PreviousTxnID\n  }\n\n  return summary\n}\n\nfunction parseChannelChanges(metadata) {\n  const paymentChannels = normalizeNodes(metadata)\n    .filter(n => {\n      return n.entryType === 'PayChannel'\n    })\n\n  return (paymentChannels.length === 1) ?\n    summarizePaymentChannel(paymentChannels[0]) :\n    undefined\n}\n\nmodule.exports.parseChannelChanges = parseChannelChanges\n", "'use strict'\n\nmodule.exports.parseBalanceChanges =\n  require('./balancechanges').parseBalanceChanges\nmodule.exports.parseFinalBalances =\n  require('./balancechanges').parseFinalBalances\nmodule.exports.parseOrderbookChanges =\n  require('./orderbookchanges').parseOrderbookChanges\nmodule.exports.getAffectedAccounts =\n  require('./utils').getAffectedAccounts\nmodule.exports.parseChannelChanges =\n  require('./channelchanges').parseChannelChanges\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "{\n    \"TYPES\": {\n        \"Done\": -1,\n        \"Unknown\": -2,\n        \"NotPresent\": 0,\n        \"UInt16\": 1,\n        \"UInt32\": 2,\n        \"UInt64\": 3,\n        \"Hash128\": 4,\n        \"Hash256\": 5,\n        \"Amount\": 6,\n        \"Blob\": 7,\n        \"AccountID\": 8,\n        \"STObject\": 14,\n        \"STArray\": 15,\n        \"UInt8\": 16,\n        \"Hash160\": 17,\n        \"PathSet\": 18,\n        \"Vector256\": 19,\n        \"UInt96\": 20,\n        \"UInt192\": 21,\n        \"UInt384\": 22,\n        \"UInt512\": 23,\n        \"Issue\": 24,\n        \"XChainBridge\": 25,\n        \"Transaction\": 10001,\n        \"LedgerEntry\": 10002,\n        \"Validation\": 10003,\n        \"Metadata\": 10004\n    },\n    \"LEDGER_ENTRY_TYPES\": {\n        \"Invalid\": -1,\n        \"AccountRoot\": 97,\n        \"DirectoryNode\": 100,\n        \"RippleState\": 114,\n        \"Ticket\": 84,\n        \"SignerList\": 83,\n        \"Offer\": 111,\n        \"Bridge\": 105,\n        \"LedgerHashes\": 104,\n        \"Amendments\": 102,\n        \"XChainOwnedClaimID\": 113,\n        \"XChainOwnedCreateAccountClaimID\": 116,\n        \"FeeSettings\": 115,\n        \"Escrow\": 117,\n        \"PayChannel\": 120,\n        \"Check\": 67,\n        \"DepositPreauth\": 112,\n        \"NegativeUNL\": 78,\n        \"NFTokenPage\": 80,\n        \"NFTokenOffer\": 55,\n        \"AMM\": 121,\n        \"DID\": 73,\n        \"Any\": -3,\n        \"Child\": -2,\n        \"Nickname\": 110,\n        \"Contract\": 99,\n        \"GeneratorMap\": 103\n    },\n    \"FIELDS\": [\n        [\n            \"Generic\",\n            {\n                \"nth\": 0,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Unknown\"\n            }\n        ],\n        [\n            \"Invalid\",\n            {\n                \"nth\": -1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Unknown\"\n            }\n        ],\n        [\n            \"ObjectEndMarker\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"ArrayEndMarker\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"hash\",\n            {\n                \"nth\": 257,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"index\",\n            {\n                \"nth\": 258,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"taker_gets_funded\",\n            {\n                \"nth\": 258,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"taker_pays_funded\",\n            {\n                \"nth\": 259,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"LedgerEntry\",\n            {\n                \"nth\": 257,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"LedgerEntry\"\n            }\n        ],\n        [\n            \"Transaction\",\n            {\n                \"nth\": 257,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Transaction\"\n            }\n        ],\n        [\n            \"Validation\",\n            {\n                \"nth\": 257,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Validation\"\n            }\n        ],\n        [\n            \"Metadata\",\n            {\n                \"nth\": 257,\n                \"isVLEncoded\": false,\n                \"isSerialized\": false,\n                \"isSigningField\": false,\n                \"type\": \"Metadata\"\n            }\n        ],\n        [\n            \"CloseResolution\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt8\"\n            }\n        ],\n        [\n            \"Method\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt8\"\n            }\n        ],\n        [\n            \"TransactionResult\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt8\"\n            }\n        ],\n        [\n            \"TickSize\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt8\"\n            }\n        ],\n        [\n            \"UNLModifyDisabling\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt8\"\n            }\n        ],\n        [\n            \"HookResult\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt8\"\n            }\n        ],\n        [\n            \"WasLockingChainSend\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt8\"\n            }\n        ],\n        [\n            \"LedgerEntryType\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"TransactionType\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"SignerWeight\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"TransferFee\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"TradingFee\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"DiscountedFee\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"Version\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"HookStateChangeCount\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"HookEmitCount\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"HookExecutionIndex\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"HookApiVersion\",\n            {\n                \"nth\": 20,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt16\"\n            }\n        ],\n        [\n            \"NetworkID\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"Flags\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"SourceTag\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"Sequence\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"PreviousTxnLgrSeq\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"LedgerSequence\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"CloseTime\",\n            {\n                \"nth\": 7,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"ParentCloseTime\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"SigningTime\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"Expiration\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"TransferRate\",\n            {\n                \"nth\": 11,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"WalletSize\",\n            {\n                \"nth\": 12,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"OwnerCount\",\n            {\n                \"nth\": 13,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"DestinationTag\",\n            {\n                \"nth\": 14,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"HighQualityIn\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"HighQualityOut\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"LowQualityIn\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"LowQualityOut\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"QualityIn\",\n            {\n                \"nth\": 20,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"QualityOut\",\n            {\n                \"nth\": 21,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"StampEscrow\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"BondAmount\",\n            {\n                \"nth\": 23,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"LoadFee\",\n            {\n                \"nth\": 24,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"OfferSequence\",\n            {\n                \"nth\": 25,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"FirstLedgerSequence\",\n            {\n                \"nth\": 26,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"LastLedgerSequence\",\n            {\n                \"nth\": 27,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"TransactionIndex\",\n            {\n                \"nth\": 28,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"OperationLimit\",\n            {\n                \"nth\": 29,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"ReferenceFeeUnits\",\n            {\n                \"nth\": 30,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"ReserveBase\",\n            {\n                \"nth\": 31,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"ReserveIncrement\",\n            {\n                \"nth\": 32,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"SetFlag\",\n            {\n                \"nth\": 33,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"ClearFlag\",\n            {\n                \"nth\": 34,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"SignerQuorum\",\n            {\n                \"nth\": 35,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"CancelAfter\",\n            {\n                \"nth\": 36,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"FinishAfter\",\n            {\n                \"nth\": 37,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"SignerListID\",\n            {\n                \"nth\": 38,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"SettleDelay\",\n            {\n                \"nth\": 39,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"TicketCount\",\n            {\n                \"nth\": 40,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"TicketSequence\",\n            {\n                \"nth\": 41,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"NFTokenTaxon\",\n            {\n                \"nth\": 42,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"MintedNFTokens\",\n            {\n                \"nth\": 43,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"BurnedNFTokens\",\n            {\n                \"nth\": 44,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"HookStateCount\",\n            {\n                \"nth\": 45,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"EmitGeneration\",\n            {\n                \"nth\": 46,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"VoteWeight\",\n            {\n                \"nth\": 48,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"FirstNFTokenSequence\",\n            {\n                \"nth\": 50,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt32\"\n            }\n        ],\n        [\n            \"IndexNext\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"IndexPrevious\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"BookNode\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"OwnerNode\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"BaseFee\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"ExchangeRate\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"LowNode\",\n            {\n                \"nth\": 7,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"HighNode\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"DestinationNode\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"Cookie\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"ServerVersion\",\n            {\n                \"nth\": 11,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"NFTokenOfferNode\",\n            {\n                \"nth\": 12,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"EmitBurden\",\n            {\n                \"nth\": 13,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"HookOn\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"HookInstructionCount\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"HookReturnCode\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"ReferenceCount\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"XChainClaimID\",\n            {\n                \"nth\": 20,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"XChainAccountCreateCount\",\n            {\n                \"nth\": 21,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"XChainAccountClaimCount\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"UInt64\"\n            }\n        ],\n        [\n            \"EmailHash\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash128\"\n            }\n        ],\n        [\n            \"TakerPaysCurrency\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash160\"\n            }\n        ],\n        [\n            \"TakerPaysIssuer\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash160\"\n            }\n        ],\n        [\n            \"TakerGetsCurrency\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash160\"\n            }\n        ],\n        [\n            \"TakerGetsIssuer\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash160\"\n            }\n        ],\n        [\n            \"LedgerHash\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"ParentHash\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"TransactionHash\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"AccountHash\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"PreviousTxnID\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"LedgerIndex\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"WalletLocator\",\n            {\n                \"nth\": 7,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"RootIndex\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"AccountTxnID\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"NFTokenID\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"EmitParentTxnID\",\n            {\n                \"nth\": 11,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"EmitNonce\",\n            {\n                \"nth\": 12,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"EmitHookHash\",\n            {\n                \"nth\": 13,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"AMMID\",\n            {\n                \"nth\": 14,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"BookDirectory\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"InvoiceID\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"Nickname\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"Amendment\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"Digest\",\n            {\n                \"nth\": 21,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"Channel\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"ConsensusHash\",\n            {\n                \"nth\": 23,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"CheckID\",\n            {\n                \"nth\": 24,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"ValidatedHash\",\n            {\n                \"nth\": 25,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"PreviousPageMin\",\n            {\n                \"nth\": 26,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"NextPageMin\",\n            {\n                \"nth\": 27,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"NFTokenBuyOffer\",\n            {\n                \"nth\": 28,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"NFTokenSellOffer\",\n            {\n                \"nth\": 29,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"HookStateKey\",\n            {\n                \"nth\": 30,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"HookHash\",\n            {\n                \"nth\": 31,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"HookNamespace\",\n            {\n                \"nth\": 32,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"HookSetTxnID\",\n            {\n                \"nth\": 33,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Hash256\"\n            }\n        ],\n        [\n            \"Amount\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"Balance\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"LimitAmount\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"TakerPays\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"TakerGets\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"LowLimit\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"HighLimit\",\n            {\n                \"nth\": 7,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"Fee\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"SendMax\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"DeliverMin\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"Amount2\",\n            {\n                \"nth\": 11,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"BidMin\",\n            {\n                \"nth\": 12,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"BidMax\",\n            {\n                \"nth\": 13,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"MinimumOffer\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"RippleEscrow\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"DeliveredAmount\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"NFTokenBrokerFee\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"BaseFeeDrops\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"ReserveBaseDrops\",\n            {\n                \"nth\": 23,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"ReserveIncrementDrops\",\n            {\n                \"nth\": 24,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"LPTokenOut\",\n            {\n                \"nth\": 25,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"LPTokenIn\",\n            {\n                \"nth\": 26,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"EPrice\",\n            {\n                \"nth\": 27,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"Price\",\n            {\n                \"nth\": 28,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"SignatureReward\",\n            {\n                \"nth\": 29,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"MinAccountCreateAmount\",\n            {\n                \"nth\": 30,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"LPTokenBalance\",\n            {\n                \"nth\": 31,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Amount\"\n            }\n        ],\n        [\n            \"PublicKey\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"MessageKey\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"SigningPubKey\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"TxnSignature\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": false,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"URI\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"Signature\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": false,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"Domain\",\n            {\n                \"nth\": 7,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"FundCode\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"RemoveCode\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"ExpireCode\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"CreateCode\",\n            {\n                \"nth\": 11,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"MemoType\",\n            {\n                \"nth\": 12,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"MemoData\",\n            {\n                \"nth\": 13,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"MemoFormat\",\n            {\n                \"nth\": 14,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"Fulfillment\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"Condition\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"MasterSignature\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": false,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"UNLModifyValidator\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"ValidatorToDisable\",\n            {\n                \"nth\": 20,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"ValidatorToReEnable\",\n            {\n                \"nth\": 21,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"HookStateData\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"HookReturnString\",\n            {\n                \"nth\": 23,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"HookParameterName\",\n            {\n                \"nth\": 24,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"HookParameterValue\",\n            {\n                \"nth\": 25,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"DIDDocument\",\n            {\n                \"nth\": 26,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"Data\",\n            {\n                \"nth\": 27,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Blob\"\n            }\n        ],\n        [\n            \"Account\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"Owner\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"Destination\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"Issuer\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"Authorize\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"Unauthorize\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"RegularKey\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"NFTokenMinter\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"EmitCallback\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"HookAccount\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"OtherChainSource\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"OtherChainDestination\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"AttestationSignerAccount\",\n            {\n                \"nth\": 20,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"AttestationRewardAccount\",\n            {\n                \"nth\": 21,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"LockingChainDoor\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"IssuingChainDoor\",\n            {\n                \"nth\": 23,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"AccountID\"\n            }\n        ],\n        [\n            \"Indexes\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Vector256\"\n            }\n        ],\n        [\n            \"Hashes\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Vector256\"\n            }\n        ],\n        [\n            \"Amendments\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Vector256\"\n            }\n        ],\n        [\n            \"NFTokenOffers\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": true,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Vector256\"\n            }\n        ],\n        [\n            \"Paths\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"PathSet\"\n            }\n        ],\n        [\n            \"LockingChainIssue\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Issue\"\n            }\n        ],\n        [\n            \"IssuingChainIssue\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Issue\"\n            }\n        ],\n        [\n            \"Asset\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Issue\"\n            }\n        ],\n        [\n            \"Asset2\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"Issue\"\n            }\n        ],\n        [\n            \"XChainBridge\",\n            {\n                \"nth\": 1,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"XChainBridge\"\n            }\n        ],\n        [\n            \"TransactionMetaData\",\n            {\n                \"nth\": 2,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"CreatedNode\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"DeletedNode\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"ModifiedNode\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"PreviousFields\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"FinalFields\",\n            {\n                \"nth\": 7,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"NewFields\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"TemplateEntry\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"Memo\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"SignerEntry\",\n            {\n                \"nth\": 11,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"NFToken\",\n            {\n                \"nth\": 12,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"EmitDetails\",\n            {\n                \"nth\": 13,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"Hook\",\n            {\n                \"nth\": 14,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"Signer\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"Majority\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"DisabledValidator\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"EmittedTxn\",\n            {\n                \"nth\": 20,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"HookExecution\",\n            {\n                \"nth\": 21,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"HookDefinition\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"HookParameter\",\n            {\n                \"nth\": 23,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"HookGrant\",\n            {\n                \"nth\": 24,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"VoteEntry\",\n            {\n                \"nth\": 25,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"AuctionSlot\",\n            {\n                \"nth\": 26,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"AuthAccount\",\n            {\n                \"nth\": 27,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"XChainClaimProofSig\",\n            {\n                \"nth\": 28,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"XChainCreateAccountProofSig\",\n            {\n                \"nth\": 29,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"XChainClaimAttestationCollectionElement\",\n            {\n                \"nth\": 30,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"XChainCreateAccountAttestationCollectionElement\",\n            {\n                \"nth\": 31,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STObject\"\n            }\n        ],\n        [\n            \"Signers\",\n            {\n                \"nth\": 3,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": false,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"SignerEntries\",\n            {\n                \"nth\": 4,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"Template\",\n            {\n                \"nth\": 5,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"Necessary\",\n            {\n                \"nth\": 6,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"Sufficient\",\n            {\n                \"nth\": 7,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"AffectedNodes\",\n            {\n                \"nth\": 8,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"Memos\",\n            {\n                \"nth\": 9,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"NFTokens\",\n            {\n                \"nth\": 10,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"Hooks\",\n            {\n                \"nth\": 11,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"VoteSlots\",\n            {\n                \"nth\": 12,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"Majorities\",\n            {\n                \"nth\": 16,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"DisabledValidators\",\n            {\n                \"nth\": 17,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"HookExecutions\",\n            {\n                \"nth\": 18,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"HookParameters\",\n            {\n                \"nth\": 19,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"HookGrants\",\n            {\n                \"nth\": 20,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"XChainClaimAttestations\",\n            {\n                \"nth\": 21,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"XChainCreateAccountAttestations\",\n            {\n                \"nth\": 22,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ],\n        [\n            \"AuthAccounts\",\n            {\n                \"nth\": 25,\n                \"isVLEncoded\": false,\n                \"isSerialized\": true,\n                \"isSigningField\": true,\n                \"type\": \"STArray\"\n            }\n        ]\n    ],\n    \"TRANSACTION_RESULTS\": {\n        \"telLOCAL_ERROR\": -399,\n        \"telBAD_DOMAIN\": -398,\n        \"telBAD_PATH_COUNT\": -397,\n        \"telBAD_PUBLIC_KEY\": -396,\n        \"telFAILED_PROCESSING\": -395,\n        \"telINSUF_FEE_P\": -394,\n        \"telNO_DST_PARTIAL\": -393,\n        \"telCAN_NOT_QUEUE\": -392,\n        \"telCAN_NOT_QUEUE_BALANCE\": -391,\n        \"telCAN_NOT_QUEUE_BLOCKS\": -390,\n        \"telCAN_NOT_QUEUE_BLOCKED\": -389,\n        \"telCAN_NOT_QUEUE_FEE\": -388,\n        \"telCAN_NOT_QUEUE_FULL\": -387,\n        \"telWRONG_NETWORK\": -386,\n        \"telREQUIRES_NETWORK_ID\": -385,\n        \"telNETWORK_ID_MAKES_TX_NON_CANONICAL\": -384,\n        \"temMALFORMED\": -299,\n        \"temBAD_AMOUNT\": -298,\n        \"temBAD_CURRENCY\": -297,\n        \"temBAD_EXPIRATION\": -296,\n        \"temBAD_FEE\": -295,\n        \"temBAD_ISSUER\": -294,\n        \"temBAD_LIMIT\": -293,\n        \"temBAD_OFFER\": -292,\n        \"temBAD_PATH\": -291,\n        \"temBAD_PATH_LOOP\": -290,\n        \"temBAD_REGKEY\": -289,\n        \"temBAD_SEND_XRP_LIMIT\": -288,\n        \"temBAD_SEND_XRP_MAX\": -287,\n        \"temBAD_SEND_XRP_NO_DIRECT\": -286,\n        \"temBAD_SEND_XRP_PARTIAL\": -285,\n        \"temBAD_SEND_XRP_PATHS\": -284,\n        \"temBAD_SEQUENCE\": -283,\n        \"temBAD_SIGNATURE\": -282,\n        \"temBAD_SRC_ACCOUNT\": -281,\n        \"temBAD_TRANSFER_RATE\": -280,\n        \"temDST_IS_SRC\": -279,\n        \"temDST_NEEDED\": -278,\n        \"temINVALID\": -277,\n        \"temINVALID_FLAG\": -276,\n        \"temREDUNDANT\": -275,\n        \"temRIPPLE_EMPTY\": -274,\n        \"temDISABLED\": -273,\n        \"temBAD_SIGNER\": -272,\n        \"temBAD_QUORUM\": -271,\n        \"temBAD_WEIGHT\": -270,\n        \"temBAD_TICK_SIZE\": -269,\n        \"temINVALID_ACCOUNT_ID\": -268,\n        \"temCANNOT_PREAUTH_SELF\": -267,\n        \"temINVALID_COUNT\": -266,\n        \"temUNCERTAIN\": -265,\n        \"temUNKNOWN\": -264,\n        \"temSEQ_AND_TICKET\": -263,\n        \"temBAD_NFTOKEN_TRANSFER_FEE\": -262,\n        \"temBAD_AMM_TOKENS\": -261,\n        \"temXCHAIN_EQUAL_DOOR_ACCOUNTS\": -260,\n        \"temXCHAIN_BAD_PROOF\": -259,\n        \"temXCHAIN_BRIDGE_BAD_ISSUES\": -258,\n        \"temXCHAIN_BRIDGE_NONDOOR_OWNER\": -257,\n        \"temXCHAIN_BRIDGE_BAD_MIN_ACCOUNT_CREATE_AMOUNT\": -256,\n        \"temXCHAIN_BRIDGE_BAD_REWARD_AMOUNT\": -255,\n        \"temEMPTY_DID\": -254,\n        \"tefFAILURE\": -199,\n        \"tefALREADY\": -198,\n        \"tefBAD_ADD_AUTH\": -197,\n        \"tefBAD_AUTH\": -196,\n        \"tefBAD_LEDGER\": -195,\n        \"tefCREATED\": -194,\n        \"tefEXCEPTION\": -193,\n        \"tefINTERNAL\": -192,\n        \"tefNO_AUTH_REQUIRED\": -191,\n        \"tefPAST_SEQ\": -190,\n        \"tefWRONG_PRIOR\": -189,\n        \"tefMASTER_DISABLED\": -188,\n        \"tefMAX_LEDGER\": -187,\n        \"tefBAD_SIGNATURE\": -186,\n        \"tefBAD_QUORUM\": -185,\n        \"tefNOT_MULTI_SIGNING\": -184,\n        \"tefBAD_AUTH_MASTER\": -183,\n        \"tefINVARIANT_FAILED\": -182,\n        \"tefTOO_BIG\": -181,\n        \"tefNO_TICKET\": -180,\n        \"tefNFTOKEN_IS_NOT_TRANSFERABLE\": -179,\n        \"terRETRY\": -99,\n        \"terFUNDS_SPENT\": -98,\n        \"terINSUF_FEE_B\": -97,\n        \"terNO_ACCOUNT\": -96,\n        \"terNO_AUTH\": -95,\n        \"terNO_LINE\": -94,\n        \"terOWNERS\": -93,\n        \"terPRE_SEQ\": -92,\n        \"terLAST\": -91,\n        \"terNO_RIPPLE\": -90,\n        \"terQUEUED\": -89,\n        \"terPRE_TICKET\": -88,\n        \"terNO_AMM\": -87,\n        \"terSUBMITTED\": -86,\n        \"tesSUCCESS\": 0,\n        \"tecCLAIM\": 100,\n        \"tecPATH_PARTIAL\": 101,\n        \"tecUNFUNDED_ADD\": 102,\n        \"tecUNFUNDED_OFFER\": 103,\n        \"tecUNFUNDED_PAYMENT\": 104,\n        \"tecFAILED_PROCESSING\": 105,\n        \"tecDIR_FULL\": 121,\n        \"tecINSUF_RESERVE_LINE\": 122,\n        \"tecINSUF_RESERVE_OFFER\": 123,\n        \"tecNO_DST\": 124,\n        \"tecNO_DST_INSUF_XRP\": 125,\n        \"tecNO_LINE_INSUF_RESERVE\": 126,\n        \"tecNO_LINE_REDUNDANT\": 127,\n        \"tecPATH_DRY\": 128,\n        \"tecUNFUNDED\": 129,\n        \"tecNO_ALTERNATIVE_KEY\": 130,\n        \"tecNO_REGULAR_KEY\": 131,\n        \"tecOWNERS\": 132,\n        \"tecNO_ISSUER\": 133,\n        \"tecNO_AUTH\": 134,\n        \"tecNO_LINE\": 135,\n        \"tecINSUFF_FEE\": 136,\n        \"tecFROZEN\": 137,\n        \"tecNO_TARGET\": 138,\n        \"tecNO_PERMISSION\": 139,\n        \"tecNO_ENTRY\": 140,\n        \"tecINSUFFICIENT_RESERVE\": 141,\n        \"tecNEED_MASTER_KEY\": 142,\n        \"tecDST_TAG_NEEDED\": 143,\n        \"tecINTERNAL\": 144,\n        \"tecOVERSIZE\": 145,\n        \"tecCRYPTOCONDITION_ERROR\": 146,\n        \"tecINVARIANT_FAILED\": 147,\n        \"tecEXPIRED\": 148,\n        \"tecDUPLICATE\": 149,\n        \"tecKILLED\": 150,\n        \"tecHAS_OBLIGATIONS\": 151,\n        \"tecTOO_SOON\": 152,\n        \"tecHOOK_REJECTED\": 153,\n        \"tecMAX_SEQUENCE_REACHED\": 154,\n        \"tecNO_SUITABLE_NFTOKEN_PAGE\": 155,\n        \"tecNFTOKEN_BUY_SELL_MISMATCH\": 156,\n        \"tecNFTOKEN_OFFER_TYPE_MISMATCH\": 157,\n        \"tecCANT_ACCEPT_OWN_NFTOKEN_OFFER\": 158,\n        \"tecINSUFFICIENT_FUNDS\": 159,\n        \"tecOBJECT_NOT_FOUND\": 160,\n        \"tecINSUFFICIENT_PAYMENT\": 161,\n        \"tecUNFUNDED_AMM\": 162,\n        \"tecAMM_BALANCE\": 163,\n        \"tecAMM_FAILED\": 164,\n        \"tecAMM_INVALID_TOKENS\": 165,\n        \"tecAMM_EMPTY\": 166,\n        \"tecAMM_NOT_EMPTY\": 167,\n        \"tecAMM_ACCOUNT\": 168,\n        \"tecINCOMPLETE\": 169,\n        \"tecXCHAIN_BAD_TRANSFER_ISSUE\": 170,\n        \"tecXCHAIN_NO_CLAIM_ID\": 171,\n        \"tecXCHAIN_BAD_CLAIM_ID\": 172,\n        \"tecXCHAIN_CLAIM_NO_QUORUM\": 173,\n        \"tecXCHAIN_PROOF_UNKNOWN_KEY\": 174,\n        \"tecXCHAIN_CREATE_ACCOUNT_NONXRP_ISSUE\": 175,\n        \"tecXCHAIN_WRONG_CHAIN\": 176,\n        \"tecXCHAIN_REWARD_MISMATCH\": 177,\n        \"tecXCHAIN_NO_SIGNERS_LIST\": 178,\n        \"tecXCHAIN_SENDING_ACCOUNT_MISMATCH\": 179,\n        \"tecXCHAIN_INSUFF_CREATE_AMOUNT\": 180,\n        \"tecXCHAIN_ACCOUNT_CREATE_PAST\": 181,\n        \"tecXCHAIN_ACCOUNT_CREATE_TOO_MANY\": 182,\n        \"tecXCHAIN_PAYMENT_FAILED\": 183,\n        \"tecXCHAIN_SELF_COMMIT\": 184,\n        \"tecXCHAIN_BAD_PUBLIC_KEY_ACCOUNT_PAIR\": 185,\n        \"tecXCHAIN_CREATE_ACCOUNT_DISABLED\": 186,\n        \"tecEMPTY_DID\": 187\n    },\n    \"TRANSACTION_TYPES\": {\n        \"Invalid\": -1,\n        \"Payment\": 0,\n        \"EscrowCreate\": 1,\n        \"EscrowFinish\": 2,\n        \"AccountSet\": 3,\n        \"EscrowCancel\": 4,\n        \"SetRegularKey\": 5,\n        \"NickNameSet\": 6,\n        \"OfferCreate\": 7,\n        \"OfferCancel\": 8,\n        \"Contract\": 9,\n        \"TicketCreate\": 10,\n        \"TicketCancel\": 11,\n        \"SignerListSet\": 12,\n        \"PaymentChannelCreate\": 13,\n        \"PaymentChannelFund\": 14,\n        \"PaymentChannelClaim\": 15,\n        \"CheckCreate\": 16,\n        \"CheckCash\": 17,\n        \"CheckCancel\": 18,\n        \"DepositPreauth\": 19,\n        \"TrustSet\": 20,\n        \"AccountDelete\": 21,\n        \"SetHook\": 22,\n        \"NFTokenMint\": 25,\n        \"NFTokenBurn\": 26,\n        \"NFTokenCreateOffer\": 27,\n        \"NFTokenCancelOffer\": 28,\n        \"NFTokenAcceptOffer\": 29,\n        \"Clawback\": 30,\n        \"AMMCreate\": 35,\n        \"AMMDeposit\": 36,\n        \"AMMWithdraw\": 37,\n        \"AMMVote\": 38,\n        \"AMMBid\": 39,\n        \"AMMDelete\": 40,\n        \"XChainCreateClaimID\": 41,\n        \"XChainCommit\": 42,\n        \"XChainClaim\": 43,\n        \"XChainAccountCreateCommit\": 44,\n        \"XChainAddClaimAttestation\": 45,\n        \"XChainAddAccountCreateAttestation\": 46,\n        \"XChainModifyBridge\": 47,\n        \"XChainCreateBridge\": 48,\n        \"DIDSet\": 49,\n        \"DIDDelete\": 50,\n        \"EnableAmendment\": 100,\n        \"SetFee\": 101,\n        \"UNLModify\": 102\n    }\n}\n", "import { BytesList, BinaryParser } from '../binary'\nimport { Buffer } from 'buffer/'\n\n/*\n * @brief: Bytes, name, and ordinal representing one type, ledger_type, transaction type, or result\n */\nexport class Bytes {\n  readonly bytes: Buffer\n\n  constructor(\n    readonly name: string,\n    readonly ordinal: number,\n    readonly ordinalWidth: number,\n  ) {\n    this.bytes = Buffer.alloc(ordinalWidth)\n    for (let i = 0; i < ordinalWidth; i++) {\n      this.bytes[ordinalWidth - i - 1] = (ordinal >>> (i * 8)) & 0xff\n    }\n  }\n\n  toJSON(): string {\n    return this.name\n  }\n\n  toBytesSink(sink: BytesList): void {\n    sink.put(this.bytes)\n  }\n\n  toBytes(): Uint8Array {\n    return this.bytes\n  }\n}\n\n/*\n * @brief: Collection of Bytes objects, mapping bidirectionally\n */\nexport class BytesLookup {\n  constructor(types: Record<string, number>, readonly ordinalWidth: number) {\n    Object.entries(types).forEach(([k, v]) => {\n      this.add(k, v)\n    })\n  }\n\n  /**\n   * Add a new name value pair to the BytesLookup.\n   *\n   * @param name - A human readable name for the field.\n   * @param value - The numeric value for the field.\n   * @throws if the name or value already exist in the lookup because it's unclear how to decode.\n   */\n  add(name: string, value: number): void {\n    if (this[name]) {\n      throw new SyntaxError(\n        `Attempted to add a value with a duplicate name \"${name}\". This is not allowed because it is unclear how to decode.`,\n      )\n    }\n    if (this[value.toString()]) {\n      throw new SyntaxError(\n        `Attempted to add a duplicate value under a different name (Given name: \"${name}\" and previous name: \"${\n          this[value.toString()]\n        }. This is not allowed because it is unclear how to decode.\\nGiven value: ${value.toString()}`,\n      )\n    }\n    this[name] = new Bytes(name, value, this.ordinalWidth)\n    this[value.toString()] = this[name]\n  }\n\n  from(value: Bytes | string): Bytes {\n    return value instanceof Bytes ? value : (this[value] as Bytes)\n  }\n\n  fromParser(parser: BinaryParser): Bytes {\n    return this.from(parser.readUIntN(this.ordinalWidth).toString())\n  }\n}\n", "import * as assert from 'assert'\nimport { FieldInstance } from '../enums'\nimport { type SerializedType } from '../types/serialized-type'\nimport { Buffer } from 'buffer/'\n\n/**\n * Bytes list is a collection of buffer objects\n */\nclass BytesList {\n  private bytesArray: Array<Buffer> = []\n\n  /**\n   * Get the total number of bytes in the BytesList\n   *\n   * @return the number of bytes\n   */\n  public getLength(): number {\n    return Buffer.concat(this.bytesArray).byteLength\n  }\n\n  /**\n   * Put bytes in the BytesList\n   *\n   * @param bytesArg A Buffer\n   * @return this BytesList\n   */\n  public put(bytesArg: Buffer): BytesList {\n    const bytes = Buffer.from(bytesArg) // Temporary, to catch instances of Uint8Array being passed in\n    this.bytesArray.push(bytes)\n    return this\n  }\n\n  /**\n   * Write this BytesList to the back of another bytes list\n   *\n   *  @param list The BytesList to write to\n   */\n  public toBytesSink(list: BytesList): void {\n    list.put(this.toBytes())\n  }\n\n  public toBytes(): Buffer {\n    return Buffer.concat(this.bytesArray)\n  }\n\n  toHex(): string {\n    return this.toBytes().toString('hex').toUpperCase()\n  }\n}\n\n/**\n * BinarySerializer is used to write fields and values to buffers\n */\nclass BinarySerializer {\n  private sink: BytesList = new BytesList()\n\n  constructor(sink: BytesList) {\n    this.sink = sink\n  }\n\n  /**\n   * Write a value to this BinarySerializer\n   *\n   * @param value a SerializedType value\n   */\n  write(value: SerializedType): void {\n    value.toBytesSink(this.sink)\n  }\n\n  /**\n   * Write bytes to this BinarySerializer\n   *\n   * @param bytes the bytes to write\n   */\n  put(bytes: Buffer): void {\n    this.sink.put(bytes)\n  }\n\n  /**\n   * Write a value of a given type to this BinarySerializer\n   *\n   * @param type the type to write\n   * @param value a value of that type\n   */\n  writeType(type: typeof SerializedType, value: SerializedType): void {\n    this.write(type.from(value))\n  }\n\n  /**\n   * Write BytesList to this BinarySerializer\n   *\n   * @param bl BytesList to write to BinarySerializer\n   */\n  writeBytesList(bl: BytesList): void {\n    bl.toBytesSink(this.sink)\n  }\n\n  /**\n   * Calculate the header of Variable Length encoded bytes\n   *\n   * @param length the length of the bytes\n   */\n  private encodeVariableLength(length: number): Buffer {\n    const lenBytes = Buffer.alloc(3)\n    if (length <= 192) {\n      lenBytes[0] = length\n      return lenBytes.slice(0, 1)\n    } else if (length <= 12480) {\n      length -= 193\n      lenBytes[0] = 193 + (length >>> 8)\n      lenBytes[1] = length & 0xff\n      return lenBytes.slice(0, 2)\n    } else if (length <= 918744) {\n      length -= 12481\n      lenBytes[0] = 241 + (length >>> 16)\n      lenBytes[1] = (length >> 8) & 0xff\n      lenBytes[2] = length & 0xff\n      return lenBytes.slice(0, 3)\n    }\n    throw new Error('Overflow error')\n  }\n\n  /**\n   * Write field and value to BinarySerializer\n   *\n   * @param field field to write to BinarySerializer\n   * @param value value to write to BinarySerializer\n   */\n  writeFieldAndValue(\n    field: FieldInstance,\n    value: SerializedType,\n    isUnlModifyWorkaround = false,\n  ): void {\n    const associatedValue = field.associatedType.from(value)\n    assert.ok(associatedValue.toBytesSink !== undefined)\n    assert.ok(field.name !== undefined)\n\n    this.sink.put(field.header)\n\n    if (field.isVariableLengthEncoded) {\n      this.writeLengthEncoded(associatedValue, isUnlModifyWorkaround)\n    } else {\n      associatedValue.toBytesSink(this.sink)\n    }\n  }\n\n  /**\n   * Write a variable length encoded value to the BinarySerializer\n   *\n   * @param value length encoded value to write to BytesList\n   */\n  public writeLengthEncoded(\n    value: SerializedType,\n    isUnlModifyWorkaround = false,\n  ): void {\n    const bytes = new BytesList()\n    if (!isUnlModifyWorkaround) {\n      // this part doesn't happen for the Account field in a UNLModify transaction\n      value.toBytesSink(bytes)\n    }\n    this.put(this.encodeVariableLength(bytes.getLength()))\n    this.writeBytesList(bytes)\n  }\n}\n\nexport { BytesList, BinarySerializer }\n", "import { BytesList } from '../serdes/binary-serializer'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport bigInt = require('big-integer')\nimport { Buffer } from 'buffer/'\nimport { XrplDefinitionsBase } from '../enums'\n\ntype JSON = string | number | boolean | null | undefined | JSON[] | JsonObject\n\ntype JsonObject = { [key: string]: JSON }\n\n/**\n * The base class for all binary-codec types\n */\nclass SerializedType {\n  protected readonly bytes: Buffer = Buffer.alloc(0)\n\n  constructor(bytes: Buffer) {\n    this.bytes = bytes ?? Buffer.alloc(0)\n  }\n\n  static fromParser(parser: BinaryParser, hint?: number): SerializedType {\n    throw new Error('fromParser not implemented')\n    return this.fromParser(parser, hint)\n  }\n\n  static from(\n    value: SerializedType | JSON | bigInt.BigInteger,\n  ): SerializedType {\n    throw new Error('from not implemented')\n    return this.from(value)\n  }\n\n  /**\n   * Write the bytes representation of a SerializedType to a BytesList\n   *\n   * @param list The BytesList to write SerializedType bytes to\n   */\n  toBytesSink(list: BytesList): void {\n    list.put(this.bytes)\n  }\n\n  /**\n   * Get the hex representation of a SerializedType's bytes\n   *\n   * @returns hex String of this.bytes\n   */\n  toHex(): string {\n    return this.toBytes().toString('hex').toUpperCase()\n  }\n\n  /**\n   * Get the bytes representation of a SerializedType\n   *\n   * @returns A buffer of the bytes\n   */\n  toBytes(): Buffer {\n    if (this.bytes) {\n      return this.bytes\n    }\n    const bytes = new BytesList()\n    this.toBytesSink(bytes)\n    return bytes.toBytes()\n  }\n\n  /**\n   * Return the JSON representation of a SerializedType\n   *\n   * @param _definitions rippled definitions used to parse the values of transaction types and such.\n   *                          Unused in default, but used in STObject, STArray\n   *                          Can be customized for sidechains and amendments.\n   * @returns any type, if not overloaded returns hexString representation of bytes\n   */\n  toJSON(_definitions?: XrplDefinitionsBase): JSON {\n    return this.toHex()\n  }\n\n  /**\n   * @returns hexString representation of this.bytes\n   */\n  toString(): string {\n    return this.toHex()\n  }\n}\n\n/**\n * Base class for SerializedTypes that are comparable\n */\nclass Comparable extends SerializedType {\n  lt(other: Comparable): boolean {\n    return this.compareTo(other) < 0\n  }\n\n  eq(other: Comparable): boolean {\n    return this.compareTo(other) === 0\n  }\n\n  gt(other: Comparable): boolean {\n    return this.compareTo(other) > 0\n  }\n\n  gte(other: Comparable): boolean {\n    return this.compareTo(other) > -1\n  }\n\n  lte(other: Comparable): boolean {\n    return this.compareTo(other) < 1\n  }\n\n  /**\n   * Overload this method to define how two Comparable SerializedTypes are compared\n   *\n   * @param other The comparable object to compare this to\n   * @returns A number denoting the relationship of this and other\n   */\n  compareTo(other: Comparable): number {\n    throw new Error(`cannot compare ${this.toString()} and ${other.toString()}`)\n  }\n}\n\nexport { SerializedType, Comparable, JSON, JsonObject }\n", "export const TYPE_WIDTH = 2\nexport const LEDGER_ENTRY_WIDTH = 2\nexport const TRANSACTION_TYPE_WIDTH = 2\nexport const TRANSACTION_RESULT_WIDTH = 1\n", "import { Bytes } from './bytes'\nimport { SerializedType } from '../types/serialized-type'\nimport { TYPE_WIDTH } from './constants'\nimport { Buffer } from 'buffer/'\n\n/**\n * Encoding information for a rippled field, often used in transactions.\n * See the enums [README.md](https://github.com/XRPLF/xrpl.js/tree/main/packages/ripple-binary-codec/src/enums) for more details on what each means.\n */\nexport interface FieldInfo {\n  nth: number\n  isVLEncoded: boolean\n  isSerialized: boolean\n  isSigningField: boolean\n  type: string\n}\n\nexport interface FieldInstance {\n  readonly nth: number\n  readonly isVariableLengthEncoded: boolean\n  readonly isSerialized: boolean\n  readonly isSigningField: boolean\n  readonly type: Bytes\n  readonly ordinal: number\n  readonly name: string\n  readonly header: Buffer\n  readonly associatedType: typeof SerializedType\n}\n\n/*\n * @brief: Serialize a field based on type_code and Field.nth\n */\nfunction fieldHeader(type: number, nth: number): Buffer {\n  const header: Array<number> = []\n  if (type < 16) {\n    if (nth < 16) {\n      header.push((type << 4) | nth)\n    } else {\n      header.push(type << 4, nth)\n    }\n  } else if (nth < 16) {\n    header.push(nth, type)\n  } else {\n    header.push(0, type, nth)\n  }\n  return Buffer.from(header)\n}\n\nfunction buildField(\n  [name, info]: [string, FieldInfo],\n  typeOrdinal: number,\n): FieldInstance {\n  const field = fieldHeader(typeOrdinal, info.nth)\n  return {\n    name: name,\n    nth: info.nth,\n    isVariableLengthEncoded: info.isVLEncoded,\n    isSerialized: info.isSerialized,\n    isSigningField: info.isSigningField,\n    ordinal: (typeOrdinal << 16) | info.nth,\n    type: new Bytes(info.type, typeOrdinal, TYPE_WIDTH),\n    header: field,\n    associatedType: SerializedType, // For later assignment in ./types/index.js or Definitions.updateAll(...)\n  }\n}\n\n/*\n * @brief: The collection of all fields as defined in definitions.json\n */\nexport class FieldLookup {\n  constructor(\n    fields: Array<[string, FieldInfo]>,\n    types: Record<string, number>,\n  ) {\n    fields.forEach(([name, field_info]) => {\n      const typeOrdinal = types[field_info.type]\n      this[name] = buildField([name, field_info], typeOrdinal)\n      this[this[name].ordinal.toString()] = this[name]\n    })\n  }\n\n  fromString(value: string): FieldInstance {\n    return this[value] as FieldInstance\n  }\n}\n", "import { SerializedType } from '../types/serialized-type'\nimport { Bytes, BytesLookup } from './bytes'\nimport { FieldInfo, FieldLookup, FieldInstance } from './field'\nimport {\n  TYPE_WIDTH,\n  LEDGER_ENTRY_WIDTH,\n  TRANSACTION_TYPE_WIDTH,\n  TRANSACTION_RESULT_WIDTH,\n} from './constants'\n\ninterface DefinitionsData {\n  TYPES: Record<string, number>\n  LEDGER_ENTRY_TYPES: Record<string, number>\n  FIELDS: (string | FieldInfo)[][]\n  TRANSACTION_RESULTS: Record<string, number>\n  TRANSACTION_TYPES: Record<string, number>\n}\n\n/**\n * Stores the various types and fields for rippled to be used to encode/decode information later on.\n * XrplDefinitions should be instantiated instead of this class.\n */\nclass XrplDefinitionsBase {\n  // A collection of fields that can be included in transactions\n  field: FieldLookup\n  // A collection of ids corresponding to types of ledger objects\n  ledgerEntryType: BytesLookup\n  // A collection of type flags used to determine how to serialize a field's data\n  type: BytesLookup\n  // Errors and result codes for transactions\n  transactionResult: BytesLookup\n  // Defined transactions that can be submitted to the ledger\n  transactionType: BytesLookup\n  // Valid transaction names\n  transactionNames: string[]\n  // Maps serializable types to their TypeScript class implementation\n  dataTypes: Record<string, typeof SerializedType>\n\n  /**\n   * Present rippled types in a typed and updatable format.\n   * For an example of the input format see `definitions.json`\n   * To generate a new definitions file from rippled source code, use this tool: https://github.com/RichardAH/xrpl-codec-gen\n   *\n   * See the definitions.test.js file for examples of how to create your own updated definitions.json.\n   *\n   * @param enums - A json encoding of the core types, transaction types, transaction results, transaction names, and fields.\n   * @param types - A list of type objects with the same name as the fields defined.\n   *              You can use the coreTypes object if you are not adding new types.\n   */\n  constructor(\n    enums: DefinitionsData,\n    types: Record<string, typeof SerializedType>,\n  ) {\n    this.type = new BytesLookup(enums.TYPES, TYPE_WIDTH)\n    this.ledgerEntryType = new BytesLookup(\n      enums.LEDGER_ENTRY_TYPES,\n      LEDGER_ENTRY_WIDTH,\n    )\n    this.transactionType = new BytesLookup(\n      enums.TRANSACTION_TYPES,\n      TRANSACTION_TYPE_WIDTH,\n    )\n    this.transactionResult = new BytesLookup(\n      enums.TRANSACTION_RESULTS,\n      TRANSACTION_RESULT_WIDTH,\n    )\n    this.field = new FieldLookup(\n      enums.FIELDS as Array<[string, FieldInfo]>,\n      enums.TYPES,\n    )\n    this.transactionNames = Object.entries(enums.TRANSACTION_TYPES)\n      .filter(([_key, value]) => value >= 0)\n      .map(([key, _value]) => key)\n\n    this.dataTypes = {} // Filled in via associateTypes\n    this.associateTypes(types)\n  }\n\n  /**\n   * Associates each Field to a corresponding class that TypeScript can recognize.\n   *\n   * @param types a list of type objects with the same name as the fields defined.\n   *              Defaults to xrpl.js's core type definitions.\n   */\n  public associateTypes(types: Record<string, typeof SerializedType>): void {\n    // Overwrite any existing type definitions with the given types\n    this.dataTypes = Object.assign({}, this.dataTypes, types)\n\n    Object.values(this.field).forEach((field) => {\n      field.associatedType = this.dataTypes[field.type.name]\n    })\n\n    this.field['TransactionType'].associatedType = this.transactionType\n    this.field['TransactionResult'].associatedType = this.transactionResult\n    this.field['LedgerEntryType'].associatedType = this.ledgerEntryType\n  }\n\n  public getAssociatedTypes(): Record<string, typeof SerializedType> {\n    return this.dataTypes\n  }\n}\n\nexport {\n  DefinitionsData,\n  XrplDefinitionsBase,\n  FieldLookup,\n  FieldInfo,\n  FieldInstance,\n  Bytes,\n  BytesLookup,\n}\n", "import * as enums from './definitions.json'\nimport {\n  XrplDefinitionsBase,\n  FieldInstance,\n  Bytes,\n} from './xrpl-definitions-base'\n/**\n * By default, coreTypes from the `types` folder is where known type definitions are initialized to avoid import cycles.\n */\nconst DEFAULT_DEFINITIONS = new XrplDefinitionsBase(enums, {})\n\nconst Type = DEFAULT_DEFINITIONS.type\nconst LedgerEntryType = DEFAULT_DEFINITIONS.ledgerEntryType\nconst TransactionType = DEFAULT_DEFINITIONS.transactionType\nconst TransactionResult = DEFAULT_DEFINITIONS.transactionResult\nconst Field = DEFAULT_DEFINITIONS.field\n\n/*\n * @brief: All valid transaction types\n */\nconst TRANSACTION_TYPES = DEFAULT_DEFINITIONS.transactionNames\n\nexport {\n  Bytes,\n  XrplDefinitionsBase,\n  DEFAULT_DEFINITIONS,\n  Field,\n  FieldInstance,\n  Type,\n  LedgerEntryType,\n  TransactionResult,\n  TransactionType,\n  TRANSACTION_TYPES,\n}\n", "import { Comparable } from './serialized-type'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { Buffer } from 'buffer/'\n\n/**\n * Base class defining how to encode and decode hashes\n */\nclass Hash extends Comparable {\n  static readonly width: number\n\n  constructor(bytes: Buffer) {\n    super(bytes)\n    if (this.bytes.byteLength !== (this.constructor as typeof Hash).width) {\n      throw new Error(`Invalid Hash length ${this.bytes.byteLength}`)\n    }\n  }\n\n  /**\n   * Construct a Hash object from an existing Hash object or a hex-string\n   *\n   * @param value A hash object or hex-string of a hash\n   */\n  static from<T extends Hash | string>(value: T): Hash {\n    if (value instanceof this) {\n      return value\n    }\n\n    if (typeof value === 'string') {\n      return new this(Buffer.from(value, 'hex'))\n    }\n\n    throw new Error('Cannot construct Hash from given value')\n  }\n\n  /**\n   * Read a Hash object from a BinaryParser\n   *\n   * @param parser BinaryParser to read the hash from\n   * @param hint length of the bytes to read, optional\n   */\n  static fromParser(parser: BinaryParser, hint?: number): Hash {\n    return new this(parser.read(hint ?? this.width))\n  }\n\n  /**\n   * Overloaded operator for comparing two hash objects\n   *\n   * @param other The Hash to compare this to\n   */\n  compareTo(other: Hash): number {\n    return this.bytes.compare(\n      (this.constructor as typeof Hash).from(other).bytes,\n    )\n  }\n\n  /**\n   * @returns the hex-string representation of this Hash\n   */\n  toString(): string {\n    return this.toHex()\n  }\n\n  /**\n   * Returns four bits at the specified depth within a hash\n   *\n   * @param depth The depth of the four bits\n   * @returns The number represented by the four bits\n   */\n  nibblet(depth: number): number {\n    const byteIx = depth > 0 ? (depth / 2) | 0 : 0\n    let b = this.bytes[byteIx]\n    if (depth % 2 === 0) {\n      b = (b & 0xf0) >>> 4\n    } else {\n      b = b & 0x0f\n    }\n    return b\n  }\n}\n\nexport { Hash }\n", "import { Hash } from './hash'\nimport { Buffer } from 'buffer/'\n\n/**\n * Hash with a width of 160 bits\n */\nclass Hash160 extends Hash {\n  static readonly width = 20\n  static readonly ZERO_160: Hash160 = new Hash160(Buffer.alloc(Hash160.width))\n\n  constructor(bytes?: Buffer) {\n    if (bytes && bytes.byteLength === 0) {\n      bytes = Hash160.ZERO_160.bytes\n    }\n\n    super(bytes ?? Hash160.ZERO_160.bytes)\n  }\n}\n\nexport { Hash160 }\n", "import {\n  decodeAccountID,\n  encodeAccountID,\n  isValidXAddress,\n  xAddressToClassicAddress,\n} from 'ripple-address-codec'\nimport { Hash160 } from './hash-160'\nimport { Buffer } from 'buffer/'\n\nconst HEX_REGEX = /^[A-F0-9]{40}$/\n\n/**\n * Class defining how to encode and decode an AccountID\n */\nclass AccountID extends Hash160 {\n  static readonly defaultAccountID: AccountID = new AccountID(Buffer.alloc(20))\n\n  constructor(bytes?: Buffer) {\n    super(bytes ?? AccountID.defaultAccountID.bytes)\n  }\n\n  /**\n   * Defines how to construct an AccountID\n   *\n   * @param value either an existing AccountID, a hex-string, or a base58 r-Address\n   * @returns an AccountID object\n   */\n  static from<T extends Hash160 | string>(value: T): AccountID {\n    if (value instanceof AccountID) {\n      return value\n    }\n\n    if (typeof value === 'string') {\n      if (value === '') {\n        return new AccountID()\n      }\n\n      return HEX_REGEX.test(value)\n        ? new AccountID(Buffer.from(value, 'hex'))\n        : this.fromBase58(value)\n    }\n\n    throw new Error('Cannot construct AccountID from value given')\n  }\n\n  /**\n   * Defines how to build an AccountID from a base58 r-Address\n   *\n   * @param value a base58 r-Address\n   * @returns an AccountID object\n   */\n  static fromBase58(value: string): AccountID {\n    if (isValidXAddress(value)) {\n      const classic = xAddressToClassicAddress(value)\n\n      if (classic.tag !== false)\n        throw new Error('Only allowed to have tag on Account or Destination')\n\n      value = classic.classicAddress\n    }\n\n    return new AccountID(Buffer.from(decodeAccountID(value)))\n  }\n\n  /**\n   * Overload of toJSON\n   *\n   * @returns the base58 string for this AccountID\n   */\n  toJSON(): string {\n    return this.toBase58()\n  }\n\n  /**\n   * Defines how to encode AccountID into a base58 address\n   *\n   * @returns the base58 string defined by this.bytes\n   */\n  toBase58(): string {\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    return encodeAccountID(this.bytes as any)\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n  }\n}\n\nexport { AccountID }\n", ";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*!\r\n   *  decimal.js v10.5.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|bigint|Decimal}\r\n   * max {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    // See https://github.com/MikeMcl/decimal.js/pull/217\r\n    x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|bigint|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, -1);\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 1);\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|bigint|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|bigint|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|bigint|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` (`n` is -1) and `min` (`n` is 1).\r\n   */\r\n  function maxOrMin(Ctor, args, n) {\r\n    var k, y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n\r\n      // NaN?\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      }\r\n\r\n      k = x.cmp(y);\r\n\r\n      if (k === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // TODO BigInt str: no need to check for decimal point, exponential form or leading zeros.\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|bigint|Decimal} The y-coordinate.\r\n   * x {number|string|bigint|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * min {number|string|bigint|Decimal}\r\n   * max {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|bigint|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // Infinity or NaN?\r\n        if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n      }\r\n\r\n      if (t === 'string') {\r\n        if ((i = v.charCodeAt(0)) === 45) {  // minus sign\r\n          v = v.slice(1);\r\n          x.s = -1;\r\n        } else {\r\n          if (i === 43) v = v.slice(1);  // plus sign\r\n          x.s = 1;\r\n        }\r\n\r\n        return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n      }\r\n\r\n      if (t === 'bigint') {\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n      }\r\n\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|bigint|Decimal} The argument of the logarithm.\r\n   * y {number|string|bigint|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, -1);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 1);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} The base.\r\n   * y {number|string|bigint|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n", "import * as assert from 'assert'\nimport {\n  XrplDefinitionsBase,\n  DEFAULT_DEFINITIONS,\n  FieldInstance,\n} from '../enums'\nimport { type SerializedType } from '../types/serialized-type'\nimport { Buffer } from 'buffer/'\n\n/**\n * BinaryParser is used to compute fields and values from a HexString\n */\nclass BinaryParser {\n  private bytes: Buffer\n  definitions: XrplDefinitionsBase\n\n  /**\n   * Initialize bytes to a hex string\n   *\n   * @param hexBytes a hex string\n   * @param definitions Rippled definitions used to parse the values of transaction types and such.\n   *                          Can be customized for sidechains and amendments.\n   */\n  constructor(\n    hexBytes: string,\n    definitions: XrplDefinitionsBase = DEFAULT_DEFINITIONS,\n  ) {\n    this.bytes = Buffer.from(hexBytes, 'hex')\n    this.definitions = definitions\n  }\n\n  /**\n   * Peek the first byte of the BinaryParser\n   *\n   * @returns The first byte of the BinaryParser\n   */\n  peek(): number {\n    assert.ok(this.bytes.byteLength !== 0)\n    return this.bytes[0]\n  }\n\n  /**\n   * Consume the first n bytes of the BinaryParser\n   *\n   * @param n the number of bytes to skip\n   */\n  skip(n: number): void {\n    assert.ok(n <= this.bytes.byteLength)\n    this.bytes = this.bytes.slice(n)\n  }\n\n  /**\n   * read the first n bytes from the BinaryParser\n   *\n   * @param n The number of bytes to read\n   * @return The bytes\n   */\n  read(n: number): Buffer {\n    assert.ok(n <= this.bytes.byteLength)\n\n    const slice = this.bytes.slice(0, n)\n    this.skip(n)\n    return slice\n  }\n\n  /**\n   * Read an integer of given size\n   *\n   * @param n The number of bytes to read\n   * @return The number represented by those bytes\n   */\n  readUIntN(n: number): number {\n    assert.ok(0 < n && n <= 4, 'invalid n')\n    return this.read(n).reduce((a, b) => (a << 8) | b) >>> 0\n  }\n\n  readUInt8(): number {\n    return this.readUIntN(1)\n  }\n\n  readUInt16(): number {\n    return this.readUIntN(2)\n  }\n\n  readUInt32(): number {\n    return this.readUIntN(4)\n  }\n\n  size(): number {\n    return this.bytes.byteLength\n  }\n\n  end(customEnd?: number): boolean {\n    const length = this.bytes.byteLength\n    return length === 0 || (customEnd !== undefined && length <= customEnd)\n  }\n\n  /**\n   * Reads variable length encoded bytes\n   *\n   * @return The variable length bytes\n   */\n  readVariableLength(): Buffer {\n    return this.read(this.readVariableLengthLength())\n  }\n\n  /**\n   * Reads the length of the variable length encoded bytes\n   *\n   * @return The length of the variable length encoded bytes\n   */\n  readVariableLengthLength(): number {\n    const b1 = this.readUInt8()\n    if (b1 <= 192) {\n      return b1\n    } else if (b1 <= 240) {\n      const b2 = this.readUInt8()\n      return 193 + (b1 - 193) * 256 + b2\n    } else if (b1 <= 254) {\n      const b2 = this.readUInt8()\n      const b3 = this.readUInt8()\n      return 12481 + (b1 - 241) * 65536 + b2 * 256 + b3\n    }\n    throw new Error('Invalid variable length indicator')\n  }\n\n  /**\n   * Reads the field ordinal from the BinaryParser\n   *\n   * @return Field ordinal\n   */\n  readFieldOrdinal(): number {\n    let type = this.readUInt8()\n    let nth = type & 15\n    type >>= 4\n\n    if (type === 0) {\n      type = this.readUInt8()\n      if (type === 0 || type < 16) {\n        throw new Error('Cannot read FieldOrdinal, type_code out of range')\n      }\n    }\n\n    if (nth === 0) {\n      nth = this.readUInt8()\n      if (nth === 0 || nth < 16) {\n        throw new Error('Cannot read FieldOrdinal, field_code out of range')\n      }\n    }\n\n    return (type << 16) | nth\n  }\n\n  /**\n   * Read the field from the BinaryParser\n   *\n   * @return The field represented by the bytes at the head of the BinaryParser\n   */\n  readField(): FieldInstance {\n    return this.definitions.field.fromString(this.readFieldOrdinal().toString())\n  }\n\n  /**\n   * Read a given type from the BinaryParser\n   *\n   * @param type The type that you want to read from the BinaryParser\n   * @return The instance of that type read from the BinaryParser\n   */\n  readType(type: typeof SerializedType): SerializedType {\n    return type.fromParser(this)\n  }\n\n  /**\n   * Get the type associated with a given field\n   *\n   * @param field The field that you wan to get the type of\n   * @return The type associated with the given field\n   */\n  typeForField(field: FieldInstance): typeof SerializedType {\n    return field.associatedType\n  }\n\n  /**\n   * Read value of the type specified by field from the BinaryParser\n   *\n   * @param field The field that you want to get the associated value for\n   * @return The value associated with the given field\n   */\n  readFieldValue(field: FieldInstance): SerializedType {\n    const type = this.typeForField(field)\n    if (!type) {\n      throw new Error(`unsupported: (${field.name}, ${field.type.name})`)\n    }\n    const sizeHint = field.isVariableLengthEncoded\n      ? this.readVariableLengthLength()\n      : undefined\n    const value = type.fromParser(this, sizeHint)\n    if (value === undefined) {\n      throw new Error(\n        `fromParser for (${field.name}, ${field.type.name}) -> undefined `,\n      )\n    }\n    return value\n  }\n\n  /**\n   * Get the next field and value from the BinaryParser\n   *\n   * @return The field and value\n   */\n  readFieldAndValue(): [FieldInstance, SerializedType] {\n    const field = this.readField()\n    return [field, this.readFieldValue(field)]\n  }\n}\n\nexport { BinaryParser }\n", "import { Hash160 } from './hash-160'\nimport { Buffer } from 'buffer/'\n\nconst XRP_HEX_REGEX = /^0{40}$/\nconst ISO_REGEX = /^[A-Z0-9a-z?!@#$%^&*(){}[\\]|]{3}$/\nconst HEX_REGEX = /^[A-F0-9]{40}$/\n// eslint-disable-next-line no-control-regex\nconst STANDARD_FORMAT_HEX_REGEX = /^0{24}[\\x00-\\x7F]{6}0{10}$/\n\n/**\n * Convert an ISO code to a currency bytes representation\n */\nfunction isoToBytes(iso: string): Buffer {\n  const bytes = Buffer.alloc(20)\n  if (iso !== 'XRP') {\n    const isoBytes = iso.split('').map((c) => c.charCodeAt(0))\n    bytes.set(isoBytes, 12)\n  }\n  return bytes\n}\n\n/**\n * Tests if ISO is a valid iso code\n */\nfunction isIsoCode(iso: string): boolean {\n  return ISO_REGEX.test(iso)\n}\n\nfunction isoCodeFromHex(code: Buffer): string | null {\n  const iso = code.toString()\n  if (iso === 'XRP') {\n    return null\n  }\n  if (isIsoCode(iso)) {\n    return iso\n  }\n  return null\n}\n\n/**\n * Tests if hex is a valid hex-string\n */\nfunction isHex(hex: string): boolean {\n  return HEX_REGEX.test(hex)\n}\n\n/**\n * Tests if a string is a valid representation of a currency\n */\nfunction isStringRepresentation(input: string): boolean {\n  return input.length === 3 || isHex(input)\n}\n\n/**\n * Tests if a Buffer is a valid representation of a currency\n */\nfunction isBytesArray(bytes: Buffer): boolean {\n  return bytes.byteLength === 20\n}\n\n/**\n * Ensures that a value is a valid representation of a currency\n */\nfunction isValidRepresentation(input: Buffer | string): boolean {\n  return input instanceof Buffer\n    ? isBytesArray(input)\n    : isStringRepresentation(input)\n}\n\n/**\n * Generate bytes from a string or buffer representation of a currency\n */\nfunction bytesFromRepresentation(input: string): Buffer {\n  if (!isValidRepresentation(input)) {\n    throw new Error(`Unsupported Currency representation: ${input}`)\n  }\n  return input.length === 3 ? isoToBytes(input) : Buffer.from(input, 'hex')\n}\n\n/**\n * Class defining how to encode and decode Currencies\n */\nclass Currency extends Hash160 {\n  static readonly XRP = new Currency(Buffer.alloc(20))\n  private readonly _iso: string | null\n\n  constructor(byteBuf: Buffer) {\n    super(byteBuf ?? Currency.XRP.bytes)\n    const hex = this.bytes.toString('hex')\n\n    if (XRP_HEX_REGEX.test(hex)) {\n      this._iso = 'XRP'\n    } else if (STANDARD_FORMAT_HEX_REGEX.test(hex)) {\n      this._iso = isoCodeFromHex(this.bytes.slice(12, 15))\n    } else {\n      this._iso = null\n    }\n  }\n\n  /**\n   * Return the ISO code of this currency\n   *\n   * @returns ISO code if it exists, else null\n   */\n  iso(): string | null {\n    return this._iso\n  }\n\n  /**\n   * Constructs a Currency object\n   *\n   * @param val Currency object or a string representation of a currency\n   */\n  static from<T extends Hash160 | string>(value: T): Currency {\n    if (value instanceof Currency) {\n      return value\n    }\n\n    if (typeof value === 'string') {\n      return new Currency(bytesFromRepresentation(value))\n    }\n\n    throw new Error('Cannot construct Currency from value given')\n  }\n\n  /**\n   * Gets the JSON representation of a currency\n   *\n   * @returns JSON representation\n   */\n  toJSON(): string {\n    const iso = this.iso()\n    if (iso !== null) {\n      return iso\n    }\n    return this.bytes.toString('hex').toUpperCase()\n  }\n}\n\nexport { Currency }\n", "var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10 || alphabet) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10 || alphabet) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n", "import { Decimal } from 'decimal.js'\n\nimport { BinaryParser } from '../serdes/binary-parser'\n\nimport { AccountID } from './account-id'\nimport { Currency } from './currency'\nimport { JsonObject, SerializedType } from './serialized-type'\nimport bigInt = require('big-integer')\nimport { Buffer } from 'buffer/'\n\n/**\n * Constants for validating amounts\n */\nconst MIN_IOU_EXPONENT = -96\nconst MAX_IOU_EXPONENT = 80\nconst MAX_IOU_PRECISION = 16\nconst MAX_DROPS = new Decimal('1e17')\nconst MIN_XRP = new Decimal('1e-6')\nconst mask = bigInt(0x00000000ffffffff)\n\n/**\n * decimal.js configuration for Amount IOUs\n */\nDecimal.config({\n  toExpPos: MAX_IOU_EXPONENT + MAX_IOU_PRECISION,\n  toExpNeg: MIN_IOU_EXPONENT - MAX_IOU_PRECISION,\n})\n\n/**\n * Interface for JSON objects that represent amounts\n */\ninterface AmountObject extends JsonObject {\n  value: string\n  currency: string\n  issuer: string\n}\n\n/**\n * Type guard for AmountObject\n */\nfunction isAmountObject(arg): arg is AmountObject {\n  const keys = Object.keys(arg).sort()\n  return (\n    keys.length === 3 &&\n    keys[0] === 'currency' &&\n    keys[1] === 'issuer' &&\n    keys[2] === 'value'\n  )\n}\n\n/**\n * Class for serializing/Deserializing Amounts\n */\nclass Amount extends SerializedType {\n  static defaultAmount: Amount = new Amount(\n    Buffer.from('4000000000000000', 'hex'),\n  )\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? Amount.defaultAmount.bytes)\n  }\n\n  /**\n   * Construct an amount from an IOU or string amount\n   *\n   * @param value An Amount, object representing an IOU, or a string\n   *     representing an integer amount\n   * @returns An Amount object\n   */\n  static from<T extends Amount | AmountObject | string>(value: T): Amount {\n    if (value instanceof Amount) {\n      return value\n    }\n\n    let amount = Buffer.alloc(8)\n    if (typeof value === 'string') {\n      Amount.assertXrpIsValid(value)\n\n      const number = bigInt(value)\n\n      const intBuf = [Buffer.alloc(4), Buffer.alloc(4)]\n      intBuf[0].writeUInt32BE(Number(number.shiftRight(32)), 0)\n      intBuf[1].writeUInt32BE(Number(number.and(mask)), 0)\n\n      amount = Buffer.concat(intBuf)\n\n      amount[0] |= 0x40\n\n      return new Amount(amount)\n    }\n\n    if (isAmountObject(value)) {\n      const number = new Decimal(value.value)\n      Amount.assertIouIsValid(number)\n\n      if (number.isZero()) {\n        amount[0] |= 0x80\n      } else {\n        const integerNumberString = number\n          .times(`1e${-(number.e - 15)}`)\n          .abs()\n          .toString()\n\n        const num = bigInt(integerNumberString)\n        const intBuf = [Buffer.alloc(4), Buffer.alloc(4)]\n        intBuf[0].writeUInt32BE(Number(num.shiftRight(32)), 0)\n        intBuf[1].writeUInt32BE(Number(num.and(mask)), 0)\n\n        amount = Buffer.concat(intBuf)\n\n        amount[0] |= 0x80\n\n        if (number.gt(new Decimal(0))) {\n          amount[0] |= 0x40\n        }\n\n        const exponent = number.e - 15\n        const exponentByte = 97 + exponent\n        amount[0] |= exponentByte >>> 2\n        amount[1] |= (exponentByte & 0x03) << 6\n      }\n\n      const currency = Currency.from(value.currency).toBytes()\n      const issuer = AccountID.from(value.issuer).toBytes()\n      return new Amount(Buffer.concat([amount, currency, issuer]))\n    }\n\n    throw new Error('Invalid type to construct an Amount')\n  }\n\n  /**\n   * Read an amount from a BinaryParser\n   *\n   * @param parser BinaryParser to read the Amount from\n   * @returns An Amount object\n   */\n  static fromParser(parser: BinaryParser): Amount {\n    const isXRP = parser.peek() & 0x80\n    const numBytes = isXRP ? 48 : 8\n    return new Amount(parser.read(numBytes))\n  }\n\n  /**\n   * Get the JSON representation of this Amount\n   *\n   * @returns the JSON interpretation of this.bytes\n   */\n  toJSON(): AmountObject | string {\n    if (this.isNative()) {\n      const bytes = this.bytes\n      const isPositive = bytes[0] & 0x40\n      const sign = isPositive ? '' : '-'\n      bytes[0] &= 0x3f\n\n      const msb = bigInt(bytes.slice(0, 4).readUInt32BE(0))\n      const lsb = bigInt(bytes.slice(4).readUInt32BE(0))\n      const num = msb.shiftLeft(32).or(lsb)\n\n      return `${sign}${num.toString()}`\n    } else {\n      const parser = new BinaryParser(this.toString())\n      const mantissa = parser.read(8)\n      const currency = Currency.fromParser(parser) as Currency\n      const issuer = AccountID.fromParser(parser) as AccountID\n\n      const b1 = mantissa[0]\n      const b2 = mantissa[1]\n\n      const isPositive = b1 & 0x40\n      const sign = isPositive ? '' : '-'\n      const exponent = ((b1 & 0x3f) << 2) + ((b2 & 0xff) >> 6) - 97\n\n      mantissa[0] = 0\n      mantissa[1] &= 0x3f\n      const value = new Decimal(`${sign}0x${mantissa.toString('hex')}`).times(\n        `1e${exponent}`,\n      )\n      Amount.assertIouIsValid(value)\n\n      return {\n        value: value.toString(),\n        currency: currency.toJSON(),\n        issuer: issuer.toJSON(),\n      }\n    }\n  }\n\n  /**\n   * Validate XRP amount\n   *\n   * @param amount String representing XRP amount\n   * @returns void, but will throw if invalid amount\n   */\n  private static assertXrpIsValid(amount: string): void {\n    if (amount.indexOf('.') !== -1) {\n      throw new Error(`${amount.toString()} is an illegal amount`)\n    }\n\n    const decimal = new Decimal(amount)\n    if (!decimal.isZero()) {\n      if (decimal.lt(MIN_XRP) || decimal.gt(MAX_DROPS)) {\n        throw new Error(`${amount.toString()} is an illegal amount`)\n      }\n    }\n  }\n\n  /**\n   * Validate IOU.value amount\n   *\n   * @param decimal Decimal.js object representing IOU.value\n   * @returns void, but will throw if invalid amount\n   */\n  private static assertIouIsValid(decimal: Decimal): void {\n    if (!decimal.isZero()) {\n      const p = decimal.precision()\n      const e = decimal.e - 15\n      if (\n        p > MAX_IOU_PRECISION ||\n        e > MAX_IOU_EXPONENT ||\n        e < MIN_IOU_EXPONENT\n      ) {\n        throw new Error('Decimal precision out of range')\n      }\n      this.verifyNoDecimal(decimal)\n    }\n  }\n\n  /**\n   * Ensure that the value after being multiplied by the exponent does not\n   * contain a decimal.\n   *\n   * @param decimal a Decimal object\n   * @returns a string of the object without a decimal\n   */\n  private static verifyNoDecimal(decimal: Decimal): void {\n    const integerNumberString = decimal\n      .times(`1e${-(decimal.e - 15)}`)\n      .abs()\n      .toString()\n\n    if (integerNumberString.indexOf('.') !== -1) {\n      throw new Error('Decimal place found in integerNumberString')\n    }\n  }\n\n  /**\n   * Test if this amount is in units of Native Currency(XRP)\n   *\n   * @returns true if Native (XRP)\n   */\n  private isNative(): boolean {\n    return (this.bytes[0] & 0x80) === 0\n  }\n}\n\nexport { Amount, AmountObject }\n", "import { SerializedType } from './serialized-type'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { Buffer } from 'buffer/'\n\n/**\n * Variable length encoded type\n */\nclass Blob extends SerializedType {\n  constructor(bytes: Buffer) {\n    super(bytes)\n  }\n\n  /**\n   * Defines how to read a Blob from a BinaryParser\n   *\n   * @param parser The binary parser to read the Blob from\n   * @param hint The length of the blob, computed by readVariableLengthLength() and passed in\n   * @returns A Blob object\n   */\n  static fromParser(parser: BinaryParser, hint: number): Blob {\n    return new Blob(parser.read(hint))\n  }\n\n  /**\n   * Create a Blob object from a hex-string\n   *\n   * @param value existing Blob object or a hex-string\n   * @returns A Blob object\n   */\n  static from<T extends Blob | string>(value: T): Blob {\n    if (value instanceof Blob) {\n      return value\n    }\n\n    if (typeof value === 'string') {\n      return new Blob(Buffer.from(value, 'hex'))\n    }\n\n    throw new Error('Cannot construct Blob from value given')\n  }\n}\n\nexport { Blob }\n", "import { Hash } from './hash'\nimport { Buffer } from 'buffer/'\n\n/**\n * Hash with a width of 128 bits\n */\nclass Hash128 extends Hash {\n  static readonly width = 16\n  static readonly ZERO_128: Hash128 = new Hash128(Buffer.alloc(Hash128.width))\n\n  constructor(bytes: Buffer) {\n    if (bytes && bytes.byteLength === 0) {\n      bytes = Hash128.ZERO_128.bytes\n    }\n\n    super(bytes ?? Hash128.ZERO_128.bytes)\n  }\n\n  /**\n   * Get the hex representation of a hash-128 bytes, allowing unset\n   *\n   * @returns hex String of this.bytes\n   */\n  toHex(): string {\n    const hex = this.toBytes().toString('hex').toUpperCase()\n    if (/^0+$/.exec(hex)) {\n      return ''\n    }\n    return hex\n  }\n}\n\nexport { Hash128 }\n", "import { Hash } from './hash'\nimport { Buffer } from 'buffer/'\n\n/**\n * Hash with a width of 256 bits\n */\nclass Hash256 extends Hash {\n  static readonly width = 32\n  static readonly ZERO_256 = new Hash256(Buffer.alloc(Hash256.width))\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? Hash256.ZERO_256.bytes)\n  }\n}\n\nexport { Hash256 }\n", "import { BinaryParser } from '../serdes/binary-parser'\n\nimport { AccountID } from './account-id'\nimport { Currency } from './currency'\nimport { JsonObject, SerializedType } from './serialized-type'\nimport { Buffer } from 'buffer/'\n\n/**\n * Interface for JSON objects that represent amounts\n */\ninterface IssueObject extends JsonObject {\n  currency: string\n  issuer?: string\n}\n\n/**\n * Type guard for AmountObject\n */\nfunction isIssueObject(arg): arg is IssueObject {\n  const keys = Object.keys(arg).sort()\n  if (keys.length === 1) {\n    return keys[0] === 'currency'\n  }\n  return keys.length === 2 && keys[0] === 'currency' && keys[1] === 'issuer'\n}\n\n/**\n * Class for serializing/Deserializing Amounts\n */\nclass Issue extends SerializedType {\n  static readonly ZERO_ISSUED_CURRENCY: Issue = new Issue(Buffer.alloc(20))\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? Issue.ZERO_ISSUED_CURRENCY.bytes)\n  }\n\n  /**\n   * Construct an amount from an IOU or string amount\n   *\n   * @param value An Amount, object representing an IOU, or a string\n   *     representing an integer amount\n   * @returns An Amount object\n   */\n  static from<T extends Issue | IssueObject>(value: T): Issue {\n    if (value instanceof Issue) {\n      return value\n    }\n\n    if (isIssueObject(value)) {\n      const currency = Currency.from(value.currency).toBytes()\n      if (value.issuer == null) {\n        return new Issue(currency)\n      }\n      const issuer = AccountID.from(value.issuer).toBytes()\n      return new Issue(Buffer.concat([currency, issuer]))\n    }\n\n    throw new Error('Invalid type to construct an Amount')\n  }\n\n  /**\n   * Read an amount from a BinaryParser\n   *\n   * @param parser BinaryParser to read the Amount from\n   * @returns An Amount object\n   */\n  static fromParser(parser: BinaryParser): Issue {\n    const currency = parser.read(20)\n    if (new Currency(currency).toJSON() === 'XRP') {\n      return new Issue(currency)\n    }\n    const currencyAndIssuer = [currency, parser.read(20)]\n    return new Issue(Buffer.concat(currencyAndIssuer))\n  }\n\n  /**\n   * Get the JSON representation of this Amount\n   *\n   * @returns the JSON interpretation of this.bytes\n   */\n  toJSON(): IssueObject {\n    const parser = new BinaryParser(this.toString())\n    const currency = Currency.fromParser(parser) as Currency\n    if (currency.toJSON() === 'XRP') {\n      return { currency: currency.toJSON() }\n    }\n    const issuer = AccountID.fromParser(parser) as AccountID\n\n    return {\n      currency: currency.toJSON(),\n      issuer: issuer.toJSON(),\n    }\n  }\n}\n\nexport { Issue, IssueObject }\n", "import { AccountID } from './account-id'\nimport { Currency } from './currency'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { SerializedType, JsonObject } from './serialized-type'\nimport { Buffer } from 'buffer/'\n\n/**\n * Constants for separating Paths in a PathSet\n */\nconst PATHSET_END_BYTE = 0x00\nconst PATH_SEPARATOR_BYTE = 0xff\n\n/**\n * Constant for masking types of a Hop\n */\nconst TYPE_ACCOUNT = 0x01\nconst TYPE_CURRENCY = 0x10\nconst TYPE_ISSUER = 0x20\n\n/**\n * The object representation of a Hop, an issuer AccountID, an account AccountID, and a Currency\n */\ninterface HopObject extends JsonObject {\n  issuer?: string\n  account?: string\n  currency?: string\n}\n\n/**\n * TypeGuard for HopObject\n */\nfunction isHopObject(arg): arg is HopObject {\n  return (\n    arg.issuer !== undefined ||\n    arg.account !== undefined ||\n    arg.currency !== undefined\n  )\n}\n\n/**\n * TypeGuard for PathSet\n */\nfunction isPathSet(arg): arg is Array<Array<HopObject>> {\n  return (\n    (Array.isArray(arg) && arg.length === 0) ||\n    (Array.isArray(arg) && Array.isArray(arg[0]) && arg[0].length === 0) ||\n    (Array.isArray(arg) && Array.isArray(arg[0]) && isHopObject(arg[0][0]))\n  )\n}\n\n/**\n * Serialize and Deserialize a Hop\n */\nclass Hop extends SerializedType {\n  /**\n   * Create a Hop from a HopObject\n   *\n   * @param value Either a hop or HopObject to create a hop with\n   * @returns a Hop\n   */\n  static from(value: Hop | HopObject): Hop {\n    if (value instanceof Hop) {\n      return value\n    }\n\n    const bytes: Array<Buffer> = [Buffer.from([0])]\n\n    if (value.account) {\n      bytes.push(AccountID.from(value.account).toBytes())\n      bytes[0][0] |= TYPE_ACCOUNT\n    }\n\n    if (value.currency) {\n      bytes.push(Currency.from(value.currency).toBytes())\n      bytes[0][0] |= TYPE_CURRENCY\n    }\n\n    if (value.issuer) {\n      bytes.push(AccountID.from(value.issuer).toBytes())\n      bytes[0][0] |= TYPE_ISSUER\n    }\n\n    return new Hop(Buffer.concat(bytes))\n  }\n\n  /**\n   * Construct a Hop from a BinaryParser\n   *\n   * @param parser BinaryParser to read the Hop from\n   * @returns a Hop\n   */\n  static fromParser(parser: BinaryParser): Hop {\n    const type = parser.readUInt8()\n    const bytes: Array<Buffer> = [Buffer.from([type])]\n\n    if (type & TYPE_ACCOUNT) {\n      bytes.push(parser.read(AccountID.width))\n    }\n\n    if (type & TYPE_CURRENCY) {\n      bytes.push(parser.read(Currency.width))\n    }\n\n    if (type & TYPE_ISSUER) {\n      bytes.push(parser.read(AccountID.width))\n    }\n\n    return new Hop(Buffer.concat(bytes))\n  }\n\n  /**\n   * Get the JSON interpretation of this hop\n   *\n   * @returns a HopObject, an JS object with optional account, issuer, and currency\n   */\n  toJSON(): HopObject {\n    const hopParser = new BinaryParser(this.bytes.toString('hex'))\n    const type = hopParser.readUInt8()\n\n    let account, currency, issuer\n    if (type & TYPE_ACCOUNT) {\n      account = (AccountID.fromParser(hopParser) as AccountID).toJSON()\n    }\n\n    if (type & TYPE_CURRENCY) {\n      currency = (Currency.fromParser(hopParser) as Currency).toJSON()\n    }\n\n    if (type & TYPE_ISSUER) {\n      issuer = (AccountID.fromParser(hopParser) as AccountID).toJSON()\n    }\n\n    const result: HopObject = {}\n    if (account) {\n      result.account = account\n    }\n\n    if (issuer) {\n      result.issuer = issuer\n    }\n\n    if (currency) {\n      result.currency = currency\n    }\n\n    return result\n  }\n\n  /**\n   * get a number representing the type of this hop\n   *\n   * @returns a number to be bitwise and-ed with TYPE_ constants to describe the types in the hop\n   */\n  type(): number {\n    return this.bytes[0]\n  }\n}\n\n/**\n * Class for serializing/deserializing Paths\n */\nclass Path extends SerializedType {\n  /**\n   * construct a Path from an array of Hops\n   *\n   * @param value Path or array of HopObjects to construct a Path\n   * @returns the Path\n   */\n  static from(value: Path | Array<HopObject>): Path {\n    if (value instanceof Path) {\n      return value\n    }\n\n    const bytes: Array<Buffer> = []\n    value.forEach((hop: HopObject) => {\n      bytes.push(Hop.from(hop).toBytes())\n    })\n\n    return new Path(Buffer.concat(bytes))\n  }\n\n  /**\n   * Read a Path from a BinaryParser\n   *\n   * @param parser BinaryParser to read Path from\n   * @returns the Path represented by the bytes read from the BinaryParser\n   */\n  static fromParser(parser: BinaryParser): Path {\n    const bytes: Array<Buffer> = []\n    while (!parser.end()) {\n      bytes.push(Hop.fromParser(parser).toBytes())\n\n      if (\n        parser.peek() === PATHSET_END_BYTE ||\n        parser.peek() === PATH_SEPARATOR_BYTE\n      ) {\n        break\n      }\n    }\n    return new Path(Buffer.concat(bytes))\n  }\n\n  /**\n   * Get the JSON representation of this Path\n   *\n   * @returns an Array of HopObject constructed from this.bytes\n   */\n  toJSON(): Array<HopObject> {\n    const json: Array<HopObject> = []\n    const pathParser = new BinaryParser(this.toString())\n\n    while (!pathParser.end()) {\n      json.push(Hop.fromParser(pathParser).toJSON())\n    }\n\n    return json\n  }\n}\n\n/**\n * Deserialize and Serialize the PathSet type\n */\nclass PathSet extends SerializedType {\n  /**\n   * Construct a PathSet from an Array of Arrays representing paths\n   *\n   * @param value A PathSet or Array of Array of HopObjects\n   * @returns the PathSet constructed from value\n   */\n  static from<T extends PathSet | Array<Array<HopObject>>>(value: T): PathSet {\n    if (value instanceof PathSet) {\n      return value\n    }\n\n    if (isPathSet(value)) {\n      const bytes: Array<Buffer> = []\n\n      value.forEach((path: Array<HopObject>) => {\n        bytes.push(Path.from(path).toBytes())\n        bytes.push(Buffer.from([PATH_SEPARATOR_BYTE]))\n      })\n\n      bytes[bytes.length - 1] = Buffer.from([PATHSET_END_BYTE])\n\n      return new PathSet(Buffer.concat(bytes))\n    }\n\n    throw new Error('Cannot construct PathSet from given value')\n  }\n\n  /**\n   * Construct a PathSet from a BinaryParser\n   *\n   * @param parser A BinaryParser to read PathSet from\n   * @returns the PathSet read from parser\n   */\n  static fromParser(parser: BinaryParser): PathSet {\n    const bytes: Array<Buffer> = []\n\n    while (!parser.end()) {\n      bytes.push(Path.fromParser(parser).toBytes())\n      bytes.push(parser.read(1))\n\n      if (bytes[bytes.length - 1][0] == PATHSET_END_BYTE) {\n        break\n      }\n    }\n\n    return new PathSet(Buffer.concat(bytes))\n  }\n\n  /**\n   * Get the JSON representation of this PathSet\n   *\n   * @returns an Array of Array of HopObjects, representing this PathSet\n   */\n  toJSON(): Array<Array<HopObject>> {\n    const json: Array<Array<HopObject>> = []\n    const pathParser = new BinaryParser(this.toString())\n\n    while (!pathParser.end()) {\n      json.push(Path.fromParser(pathParser).toJSON())\n      pathParser.skip(1)\n    }\n\n    return json\n  }\n}\n\nexport { PathSet }\n", "import {\n  DEFAULT_DEFINITIONS,\n  FieldInstance,\n  Bytes,\n  XrplDefinitionsBase,\n} from '../enums'\nimport { SerializedType, JsonObject } from './serialized-type'\nimport { xAddressToClassicAddress, isValidXAddress } from 'ripple-address-codec'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { BinarySerializer, BytesList } from '../serdes/binary-serializer'\nimport { Buffer } from 'buffer/'\nimport { STArray } from './st-array'\n\nconst OBJECT_END_MARKER_BYTE = Buffer.from([0xe1])\nconst OBJECT_END_MARKER = 'ObjectEndMarker'\nconst ST_OBJECT = 'STObject'\nconst DESTINATION = 'Destination'\nconst ACCOUNT = 'Account'\nconst SOURCE_TAG = 'SourceTag'\nconst DEST_TAG = 'DestinationTag'\n\n/**\n * Break down an X-Address into an account and a tag\n *\n * @param field Name of field\n * @param xAddress X-Address corresponding to the field\n */\nfunction handleXAddress(field: string, xAddress: string): JsonObject {\n  const decoded = xAddressToClassicAddress(xAddress)\n\n  let tagName\n  if (field === DESTINATION) tagName = DEST_TAG\n  else if (field === ACCOUNT) tagName = SOURCE_TAG\n  else if (decoded.tag !== false)\n    throw new Error(`${field} cannot have an associated tag`)\n\n  return decoded.tag !== false\n    ? { [field]: decoded.classicAddress, [tagName]: decoded.tag }\n    : { [field]: decoded.classicAddress }\n}\n\n/**\n * Validate that two objects don't both have the same tag fields\n *\n * @param obj1 First object to check for tags\n * @param obj2 Second object to check for tags\n * @throws When both objects have SourceTag or DestinationTag\n */\nfunction checkForDuplicateTags(obj1: JsonObject, obj2: JsonObject): void {\n  if (!(obj1[SOURCE_TAG] === undefined || obj2[SOURCE_TAG] === undefined))\n    throw new Error('Cannot have Account X-Address and SourceTag')\n  if (!(obj1[DEST_TAG] === undefined || obj2[DEST_TAG] === undefined))\n    throw new Error('Cannot have Destination X-Address and DestinationTag')\n}\n\n/**\n * Class for Serializing/Deserializing objects\n */\nclass STObject extends SerializedType {\n  /**\n   * Construct a STObject from a BinaryParser\n   *\n   * @param parser BinaryParser to read STObject from\n   * @returns A STObject object\n   */\n  static fromParser(parser: BinaryParser): STObject {\n    const list: BytesList = new BytesList()\n    const bytes: BinarySerializer = new BinarySerializer(list)\n\n    while (!parser.end()) {\n      const field = parser.readField()\n      if (field.name === OBJECT_END_MARKER) {\n        break\n      }\n\n      const associatedValue = parser.readFieldValue(field)\n\n      bytes.writeFieldAndValue(field, associatedValue)\n      if (field.type.name === ST_OBJECT) {\n        bytes.put(OBJECT_END_MARKER_BYTE)\n      }\n    }\n\n    return new STObject(list.toBytes())\n  }\n\n  /**\n   * Construct a STObject from a JSON object\n   *\n   * @param value An object to include\n   * @param filter optional, denote which field to include in serialized object\n   * @param definitions optional, types and values to use to encode/decode a transaction\n   * @returns a STObject object\n   */\n  static from<T extends STObject | JsonObject>(\n    value: T,\n    filter?: (...any) => boolean,\n    definitions: XrplDefinitionsBase = DEFAULT_DEFINITIONS,\n  ): STObject {\n    if (value instanceof STObject) {\n      return value\n    }\n\n    const list: BytesList = new BytesList()\n    const bytes: BinarySerializer = new BinarySerializer(list)\n\n    let isUnlModify = false\n\n    const xAddressDecoded = Object.entries(value).reduce((acc, [key, val]) => {\n      let handled: JsonObject | undefined = undefined\n      if (val && isValidXAddress(val.toString())) {\n        handled = handleXAddress(key, val.toString())\n        checkForDuplicateTags(handled, value)\n      }\n      return Object.assign(acc, handled ?? { [key]: val })\n    }, {})\n\n    let sorted = Object.keys(xAddressDecoded)\n      .map((f: string): FieldInstance => definitions.field[f] as FieldInstance)\n      .filter(\n        (f: FieldInstance): boolean =>\n          f !== undefined &&\n          xAddressDecoded[f.name] !== undefined &&\n          f.isSerialized,\n      )\n      .sort((a, b) => {\n        return a.ordinal - b.ordinal\n      })\n\n    if (filter !== undefined) {\n      sorted = sorted.filter(filter)\n    }\n\n    sorted.forEach((field) => {\n      const associatedValue =\n        field.type.name === ST_OBJECT\n          ? this.from(xAddressDecoded[field.name], undefined, definitions)\n          : field.type.name === 'STArray'\n          ? STArray.from(xAddressDecoded[field.name], definitions)\n          : field.associatedType.from(xAddressDecoded[field.name])\n\n      if (associatedValue == undefined) {\n        throw new TypeError(\n          `Unable to interpret \"${field.name}: ${\n            xAddressDecoded[field.name]\n          }\".`,\n        )\n      }\n\n      if ((associatedValue as unknown as Bytes).name === 'UNLModify') {\n        // triggered when the TransactionType field has a value of 'UNLModify'\n        isUnlModify = true\n      }\n      // true when in the UNLModify pseudotransaction (after the transaction type has been processed) and working with the\n      // Account field\n      // The Account field must not be a part of the UNLModify pseudotransaction encoding, due to a bug in rippled\n      const isUnlModifyWorkaround = field.name == 'Account' && isUnlModify\n      bytes.writeFieldAndValue(field, associatedValue, isUnlModifyWorkaround)\n      if (field.type.name === ST_OBJECT) {\n        bytes.put(OBJECT_END_MARKER_BYTE)\n      }\n    })\n\n    return new STObject(list.toBytes())\n  }\n\n  /**\n   * Get the JSON interpretation of this.bytes\n   * @param definitions rippled definitions used to parse the values of transaction types and such.\n   *                          Can be customized for sidechains and amendments.\n   * @returns a JSON object\n   */\n  toJSON(definitions?: XrplDefinitionsBase): JsonObject {\n    const objectParser = new BinaryParser(this.toString(), definitions)\n    const accumulator = {}\n\n    while (!objectParser.end()) {\n      const field = objectParser.readField()\n      if (field.name === OBJECT_END_MARKER) {\n        break\n      }\n\n      accumulator[field.name] = objectParser\n        .readFieldValue(field)\n        .toJSON(definitions)\n    }\n\n    return accumulator\n  }\n}\n\nexport { STObject }\n", "import { DEFAULT_DEFINITIONS, XrplDefinitionsBase } from '../enums'\nimport { SerializedType, JsonObject } from './serialized-type'\nimport { STObject } from './st-object'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { Buffer } from 'buffer/'\n\nconst ARRAY_END_MARKER = Buffer.from([0xf1])\nconst ARRAY_END_MARKER_NAME = 'ArrayEndMarker'\n\nconst OBJECT_END_MARKER = Buffer.from([0xe1])\n\n/**\n * TypeGuard for Array<JsonObject>\n */\nfunction isObjects(args): args is Array<JsonObject> {\n  return (\n    Array.isArray(args) && (args.length === 0 || typeof args[0] === 'object')\n  )\n}\n\n/**\n * Class for serializing and deserializing Arrays of Objects\n */\nclass STArray extends SerializedType {\n  /**\n   * Construct an STArray from a BinaryParser\n   *\n   * @param parser BinaryParser to parse an STArray from\n   * @returns An STArray Object\n   */\n  static fromParser(parser: BinaryParser): STArray {\n    const bytes: Array<Buffer> = []\n\n    while (!parser.end()) {\n      const field = parser.readField()\n      if (field.name === ARRAY_END_MARKER_NAME) {\n        break\n      }\n\n      bytes.push(\n        field.header,\n        parser.readFieldValue(field).toBytes(),\n        OBJECT_END_MARKER,\n      )\n    }\n\n    bytes.push(ARRAY_END_MARKER)\n    return new STArray(Buffer.concat(bytes))\n  }\n\n  /**\n   * Construct an STArray from an Array of JSON Objects\n   *\n   * @param value STArray or Array of Objects to parse into an STArray\n   * @param definitions optional, types and values to use to encode/decode a transaction\n   * @returns An STArray object\n   */\n  static from<T extends STArray | Array<JsonObject>>(\n    value: T,\n    definitions: XrplDefinitionsBase = DEFAULT_DEFINITIONS,\n  ): STArray {\n    if (value instanceof STArray) {\n      return value\n    }\n\n    if (isObjects(value)) {\n      const bytes: Array<Buffer> = []\n      value.forEach((obj) => {\n        bytes.push(STObject.from(obj, undefined, definitions).toBytes())\n      })\n\n      bytes.push(ARRAY_END_MARKER)\n      return new STArray(Buffer.concat(bytes))\n    }\n\n    throw new Error('Cannot construct STArray from value given')\n  }\n\n  /**\n   * Return the JSON representation of this.bytes\n   *\n   * @param definitions optional, types and values to use to encode/decode a transaction\n   * @returns An Array of JSON objects\n   */\n  toJSON(\n    definitions: XrplDefinitionsBase = DEFAULT_DEFINITIONS,\n  ): Array<JsonObject> {\n    const result: Array<JsonObject> = []\n\n    const arrayParser = new BinaryParser(this.toString(), definitions)\n\n    while (!arrayParser.end()) {\n      const field = arrayParser.readField()\n      if (field.name === ARRAY_END_MARKER_NAME) {\n        break\n      }\n\n      const outer = {}\n      outer[field.name] = STObject.fromParser(arrayParser).toJSON(definitions)\n      result.push(outer)\n    }\n\n    return result\n  }\n}\n\nexport { STArray }\n", "import bigInt = require('big-integer')\nimport { Comparable } from './serialized-type'\nimport { Buffer } from 'buffer/'\n\n/**\n * Compare numbers and bigInts n1 and n2\n *\n * @param n1 First object to compare\n * @param n2 Second object to compare\n * @returns -1, 0, or 1, depending on how the two objects compare\n */\nfunction compare(\n  n1: number | bigInt.BigInteger,\n  n2: number | bigInt.BigInteger,\n): number {\n  return n1 < n2 ? -1 : n1 == n2 ? 0 : 1\n}\n\n/**\n * Base class for serializing and deserializing unsigned integers.\n */\nabstract class UInt extends Comparable {\n  protected static width: number\n\n  constructor(bytes: Buffer) {\n    super(bytes)\n  }\n\n  /**\n   * Overload of compareTo for Comparable\n   *\n   * @param other other UInt to compare this to\n   * @returns -1, 0, or 1 depending on how the objects relate to each other\n   */\n  compareTo(other: UInt): number {\n    return compare(this.valueOf(), other.valueOf())\n  }\n\n  /**\n   * Convert a UInt object to JSON\n   *\n   * @returns number or string represented by this.bytes\n   */\n  toJSON(): number | string {\n    const val = this.valueOf()\n    return typeof val === 'number' ? val : val.toString()\n  }\n\n  /**\n   * Get the value of the UInt represented by this.bytes\n   *\n   * @returns the value\n   */\n  abstract valueOf(): number | bigInt.BigInteger\n}\n\nexport { UInt }\n", "import { UInt } from './uint'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { Buffer } from 'buffer/'\n\n/**\n * Derived UInt class for serializing/deserializing 16 bit UInt\n */\nclass UInt16 extends UInt {\n  protected static readonly width: number = 16 / 8 // 2\n  static readonly defaultUInt16: UInt16 = new UInt16(Buffer.alloc(UInt16.width))\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? UInt16.defaultUInt16.bytes)\n  }\n\n  static fromParser(parser: BinaryParser): UInt {\n    return new UInt16(parser.read(UInt16.width))\n  }\n\n  /**\n   * Construct a UInt16 object from a number\n   *\n   * @param val UInt16 object or number\n   */\n  static from<T extends UInt16 | number>(val: T): UInt16 {\n    if (val instanceof UInt16) {\n      return val\n    }\n\n    if (typeof val === 'number') {\n      const buf = Buffer.alloc(UInt16.width)\n      buf.writeUInt16BE(val, 0)\n      return new UInt16(buf)\n    }\n\n    throw new Error('Can not construct UInt16 with given value')\n  }\n\n  /**\n   * get the value of a UInt16 object\n   *\n   * @returns the number represented by this.bytes\n   */\n  valueOf(): number {\n    return this.bytes.readUInt16BE(0)\n  }\n}\n\nexport { UInt16 }\n", "import { UInt } from './uint'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { Buffer } from 'buffer/'\n\n/**\n * Derived UInt class for serializing/deserializing 32 bit UInt\n */\nclass UInt32 extends UInt {\n  protected static readonly width: number = 32 / 8 // 4\n  static readonly defaultUInt32: UInt32 = new UInt32(Buffer.alloc(UInt32.width))\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? UInt32.defaultUInt32.bytes)\n  }\n\n  static fromParser(parser: BinaryParser): UInt {\n    return new UInt32(parser.read(UInt32.width))\n  }\n\n  /**\n   * Construct a UInt32 object from a number\n   *\n   * @param val UInt32 object or number\n   */\n  static from<T extends UInt32 | number | string>(val: T): UInt32 {\n    if (val instanceof UInt32) {\n      return val\n    }\n\n    const buf = Buffer.alloc(UInt32.width)\n\n    if (typeof val === 'string') {\n      const num = Number.parseInt(val)\n      buf.writeUInt32BE(num, 0)\n      return new UInt32(buf)\n    }\n\n    if (typeof val === 'number') {\n      buf.writeUInt32BE(val, 0)\n      return new UInt32(buf)\n    }\n\n    throw new Error('Cannot construct UInt32 from given value')\n  }\n\n  /**\n   * get the value of a UInt32 object\n   *\n   * @returns the number represented by this.bytes\n   */\n  valueOf(): number {\n    return this.bytes.readUInt32BE(0)\n  }\n}\n\nexport { UInt32 }\n", "import { UInt } from './uint'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport bigInt = require('big-integer')\nimport { isInstance } from 'big-integer'\nimport { Buffer } from 'buffer/'\n\nconst HEX_REGEX = /^[a-fA-F0-9]{1,16}$/\nconst mask = bigInt(0x00000000ffffffff)\n\n/**\n * Derived UInt class for serializing/deserializing 64 bit UInt\n */\nclass UInt64 extends UInt {\n  protected static readonly width: number = 64 / 8 // 8\n  static readonly defaultUInt64: UInt64 = new UInt64(Buffer.alloc(UInt64.width))\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? UInt64.defaultUInt64.bytes)\n  }\n\n  static fromParser(parser: BinaryParser): UInt {\n    return new UInt64(parser.read(UInt64.width))\n  }\n\n  /**\n   * Construct a UInt64 object\n   *\n   * @param val A UInt64, hex-string, bigInt, or number\n   * @returns A UInt64 object\n   */\n  static from<T extends UInt64 | string | bigInt.BigInteger | number>(\n    val: T,\n  ): UInt64 {\n    if (val instanceof UInt64) {\n      return val\n    }\n\n    let buf = Buffer.alloc(UInt64.width)\n\n    if (typeof val === 'number') {\n      if (val < 0) {\n        throw new Error('value must be an unsigned integer')\n      }\n\n      const number = bigInt(val)\n\n      const intBuf = [Buffer.alloc(4), Buffer.alloc(4)]\n      intBuf[0].writeUInt32BE(Number(number.shiftRight(32)), 0)\n      intBuf[1].writeUInt32BE(Number(number.and(mask)), 0)\n\n      return new UInt64(Buffer.concat(intBuf))\n    }\n\n    if (typeof val === 'string') {\n      if (!HEX_REGEX.test(val)) {\n        throw new Error(`${val} is not a valid hex-string`)\n      }\n\n      const strBuf = val.padStart(16, '0')\n      buf = Buffer.from(strBuf, 'hex')\n      return new UInt64(buf)\n    }\n\n    if (isInstance(val)) {\n      const intBuf = [Buffer.alloc(4), Buffer.alloc(4)]\n      intBuf[0].writeUInt32BE(Number(val.shiftRight(bigInt(32))), 0)\n      intBuf[1].writeUInt32BE(Number(val.and(mask)), 0)\n\n      return new UInt64(Buffer.concat(intBuf))\n    }\n\n    throw new Error('Cannot construct UInt64 from given value')\n  }\n\n  /**\n   * The JSON representation of a UInt64 object\n   *\n   * @returns a hex-string\n   */\n  toJSON(): string {\n    return this.bytes.toString('hex').toUpperCase()\n  }\n\n  /**\n   * Get the value of the UInt64\n   *\n   * @returns the number represented buy this.bytes\n   */\n  valueOf(): bigInt.BigInteger {\n    const msb = bigInt(this.bytes.slice(0, 4).readUInt32BE(0))\n    const lsb = bigInt(this.bytes.slice(4).readUInt32BE(0))\n    return msb.shiftLeft(bigInt(32)).or(lsb)\n  }\n\n  /**\n   * Get the bytes representation of the UInt64 object\n   *\n   * @returns 8 bytes representing the UInt64\n   */\n  toBytes(): Buffer {\n    return this.bytes\n  }\n}\n\nexport { UInt64 }\n", "import { UInt } from './uint'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { Buffer } from 'buffer/'\n\n/**\n * Derived UInt class for serializing/deserializing 8 bit UInt\n */\nclass UInt8 extends UInt {\n  protected static readonly width: number = 8 / 8 // 1\n  static readonly defaultUInt8: UInt8 = new UInt8(Buffer.alloc(UInt8.width))\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? UInt8.defaultUInt8.bytes)\n  }\n\n  static fromParser(parser: BinaryParser): UInt {\n    return new UInt8(parser.read(UInt8.width))\n  }\n\n  /**\n   * Construct a UInt8 object from a number\n   *\n   * @param val UInt8 object or number\n   */\n  static from<T extends UInt8 | number>(val: T): UInt8 {\n    if (val instanceof UInt8) {\n      return val\n    }\n\n    if (typeof val === 'number') {\n      const buf = Buffer.alloc(UInt8.width)\n      buf.writeUInt8(val, 0)\n      return new UInt8(buf)\n    }\n\n    throw new Error('Cannot construct UInt8 from given value')\n  }\n\n  /**\n   * get the value of a UInt8 object\n   *\n   * @returns the number represented by this.bytes\n   */\n  valueOf(): number {\n    return this.bytes.readUInt8(0)\n  }\n}\n\nexport { UInt8 }\n", "import { SerializedType } from './serialized-type'\nimport { BinaryParser } from '../serdes/binary-parser'\nimport { Hash256 } from './hash-256'\nimport { BytesList } from '../serdes/binary-serializer'\nimport { Buffer } from 'buffer/'\n\n/**\n * TypeGuard for Array<string>\n */\nfunction isStrings(arg): arg is Array<string> {\n  return Array.isArray(arg) && (arg.length === 0 || typeof arg[0] === 'string')\n}\n\n/**\n * Class for serializing and deserializing vectors of Hash256\n */\nclass Vector256 extends SerializedType {\n  constructor(bytes: Buffer) {\n    super(bytes)\n  }\n\n  /**\n   * Construct a Vector256 from a BinaryParser\n   *\n   * @param parser BinaryParser to\n   * @param hint length of the vector, in bytes, optional\n   * @returns a Vector256 object\n   */\n  static fromParser(parser: BinaryParser, hint?: number): Vector256 {\n    const bytesList = new BytesList()\n    const bytes = hint ?? parser.size()\n    const hashes = bytes / 32\n    for (let i = 0; i < hashes; i++) {\n      Hash256.fromParser(parser).toBytesSink(bytesList)\n    }\n    return new Vector256(bytesList.toBytes())\n  }\n\n  /**\n   * Construct a Vector256 object from an array of hashes\n   *\n   * @param value A Vector256 object or array of hex-strings representing Hash256's\n   * @returns a Vector256 object\n   */\n  static from<T extends Vector256 | Array<string>>(value: T): Vector256 {\n    if (value instanceof Vector256) {\n      return value\n    }\n\n    if (isStrings(value)) {\n      const bytesList = new BytesList()\n      value.forEach((hash) => {\n        Hash256.from(hash).toBytesSink(bytesList)\n      })\n      return new Vector256(bytesList.toBytes())\n    }\n\n    throw new Error('Cannot construct Vector256 from given value')\n  }\n\n  /**\n   * Return an Array of hex-strings represented by this.bytes\n   *\n   * @returns An Array of strings representing the Hash256 objects\n   */\n  toJSON(): Array<string> {\n    if (this.bytes.byteLength % 32 !== 0) {\n      throw new Error('Invalid bytes for Vector256')\n    }\n\n    const result: Array<string> = []\n    for (let i = 0; i < this.bytes.byteLength; i += 32) {\n      result.push(\n        this.bytes\n          .slice(i, i + 32)\n          .toString('hex')\n          .toUpperCase(),\n      )\n    }\n    return result\n  }\n}\n\nexport { Vector256 }\n", "import { BinaryParser } from '../serdes/binary-parser'\n\nimport { AccountID } from './account-id'\nimport { JsonObject, SerializedType } from './serialized-type'\nimport { Buffer } from 'buffer/'\nimport { Issue, IssueObject } from './issue'\n\n/**\n * Interface for JSON objects that represent cross-chain bridges\n */\ninterface XChainBridgeObject extends JsonObject {\n  LockingChainDoor: string\n  LockingChainIssue: IssueObject | string\n  IssuingChainDoor: string\n  IssuingChainIssue: IssueObject | string\n}\n\n/**\n * Type guard for XChainBridgeObject\n */\nfunction isXChainBridgeObject(arg): arg is XChainBridgeObject {\n  const keys = Object.keys(arg).sort()\n  return (\n    keys.length === 4 &&\n    keys[0] === 'IssuingChainDoor' &&\n    keys[1] === 'IssuingChainIssue' &&\n    keys[2] === 'LockingChainDoor' &&\n    keys[3] === 'LockingChainIssue'\n  )\n}\n\n/**\n * Class for serializing/deserializing XChainBridges\n */\nclass XChainBridge extends SerializedType {\n  static readonly ZERO_XCHAIN_BRIDGE: XChainBridge = new XChainBridge(\n    Buffer.concat([\n      Buffer.from([0x14]),\n      Buffer.alloc(40),\n      Buffer.from([0x14]),\n      Buffer.alloc(40),\n    ]),\n  )\n\n  static readonly TYPE_ORDER: { name: string; type: typeof SerializedType }[] =\n    [\n      { name: 'LockingChainDoor', type: AccountID },\n      { name: 'LockingChainIssue', type: Issue },\n      { name: 'IssuingChainDoor', type: AccountID },\n      { name: 'IssuingChainIssue', type: Issue },\n    ]\n\n  constructor(bytes: Buffer) {\n    super(bytes ?? XChainBridge.ZERO_XCHAIN_BRIDGE.bytes)\n  }\n\n  /**\n   * Construct a cross-chain bridge from a JSON\n   *\n   * @param value XChainBridge or JSON to parse into an XChainBridge\n   * @returns An XChainBridge object\n   */\n  static from<T extends XChainBridge | XChainBridgeObject>(\n    value: T,\n  ): XChainBridge {\n    if (value instanceof XChainBridge) {\n      return value\n    }\n\n    if (!isXChainBridgeObject(value)) {\n      throw new Error('Invalid type to construct an XChainBridge')\n    }\n\n    const bytes: Array<Buffer> = []\n    this.TYPE_ORDER.forEach((item) => {\n      const { name, type } = item\n      if (type === AccountID) {\n        bytes.push(Buffer.from([0x14]))\n      }\n      const object = type.from(value[name])\n      bytes.push(object.toBytes())\n    })\n    return new XChainBridge(Buffer.concat(bytes))\n  }\n\n  /**\n   * Read an XChainBridge from a BinaryParser\n   *\n   * @param parser BinaryParser to read the XChainBridge from\n   * @returns An XChainBridge object\n   */\n  static fromParser(parser: BinaryParser): XChainBridge {\n    const bytes: Array<Buffer> = []\n\n    this.TYPE_ORDER.forEach((item) => {\n      const { type } = item\n      if (type === AccountID) {\n        parser.skip(1)\n        bytes.push(Buffer.from([0x14]))\n      }\n      const object = type.fromParser(parser)\n      bytes.push(object.toBytes())\n    })\n\n    return new XChainBridge(Buffer.concat(bytes))\n  }\n\n  /**\n   * Get the JSON representation of this XChainBridge\n   *\n   * @returns the JSON interpretation of this.bytes\n   */\n  toJSON(): XChainBridgeObject {\n    const parser = new BinaryParser(this.toString())\n    const json = {}\n    XChainBridge.TYPE_ORDER.forEach((item) => {\n      const { name, type } = item\n      if (type === AccountID) {\n        parser.skip(1)\n      }\n      const object = type.fromParser(parser).toJSON()\n      json[name] = object\n    })\n    return json as XChainBridgeObject\n  }\n}\n\nexport { XChainBridge, XChainBridgeObject }\n", "import { AccountID } from './account-id'\nimport { Amount } from './amount'\nimport { Blob } from './blob'\nimport { Currency } from './currency'\nimport { Hash128 } from './hash-128'\nimport { Hash160 } from './hash-160'\nimport { Hash256 } from './hash-256'\nimport { Issue } from './issue'\nimport { PathSet } from './path-set'\nimport { STArray } from './st-array'\nimport { STObject } from './st-object'\nimport { UInt16 } from './uint-16'\nimport { UInt32 } from './uint-32'\nimport { UInt64 } from './uint-64'\nimport { UInt8 } from './uint-8'\nimport { Vector256 } from './vector-256'\nimport { XChainBridge } from './xchain-bridge'\nimport { type SerializedType } from './serialized-type'\nimport { DEFAULT_DEFINITIONS } from '../enums'\n\nconst coreTypes: Record<string, typeof SerializedType> = {\n  AccountID,\n  Amount,\n  Blob,\n  Currency,\n  Hash128,\n  Hash160,\n  Hash256,\n  Issue,\n  PathSet,\n  STArray,\n  STObject,\n  UInt8,\n  UInt16,\n  UInt32,\n  UInt64,\n  Vector256,\n  XChainBridge,\n}\n\n// Ensures that the DEFAULT_DEFINITIONS object connects these types to fields for serializing/deserializing\n// This is done here instead of in enums/index.ts to avoid a circular dependency\n// because some of the above types depend on BinarySerializer which depends on enums/index.ts.\nDEFAULT_DEFINITIONS.associateTypes(coreTypes)\n\nexport {\n  coreTypes,\n  AccountID,\n  Amount,\n  Blob,\n  Currency,\n  Hash128,\n  Hash160,\n  Hash256,\n  PathSet,\n  STArray,\n  STObject,\n  UInt8,\n  UInt16,\n  UInt32,\n  UInt64,\n  Vector256,\n}\n", "import { Buffer } from 'buffer/'\n\n/**\n * Write a 32 bit integer to a Buffer\n *\n * @param uint32 32 bit integer to write to buffer\n * @returns a buffer with the bytes representation of uint32\n */\nfunction bytes(uint32: number): Buffer {\n  const result = Buffer.alloc(4)\n  result.writeUInt32BE(uint32, 0)\n  return result\n}\n\n/**\n * Maps HashPrefix names to their byte representation\n */\nconst HashPrefix: Record<string, Buffer> = {\n  transactionID: bytes(0x54584e00),\n  // transaction plus metadata\n  transaction: bytes(0x534e4400),\n  // account state\n  accountStateEntry: bytes(0x4d4c4e00),\n  // inner node in tree\n  innerNode: bytes(0x4d494e00),\n  // ledger master data for signing\n  ledgerHeader: bytes(0x4c575200),\n  // inner transaction to sign\n  transactionSig: bytes(0x53545800),\n  // inner transaction to sign\n  transactionMultiSig: bytes(0x534d5400),\n  // validation for signing\n  validation: bytes(0x56414c00),\n  // proposal for signing\n  proposal: bytes(0x50525000),\n  // payment channel claim\n  paymentChannelClaim: bytes(0x434c4d00),\n}\n\nexport { HashPrefix }\n", "import { HashPrefix } from './hash-prefixes'\nimport createHash = require('create-hash')\nimport { Hash256 } from './types/hash-256'\nimport { BytesList } from './serdes/binary-serializer'\nimport { Buffer } from 'buffer/'\n\n/**\n * Class for hashing with SHA512\n * @extends BytesList So SerializedTypes can write bytes to a Sha512Half\n */\nclass Sha512Half extends BytesList {\n  private hash = createHash('sha512')\n\n  /**\n   * Construct a new Sha512Hash and write bytes this.hash\n   *\n   * @param bytes bytes to write to this.hash\n   * @returns the new Sha512Hash object\n   */\n  static put(bytes: Buffer): Sha512Half {\n    return new Sha512Half().put(bytes)\n  }\n\n  /**\n   * Write bytes to an existing Sha512Hash\n   *\n   * @param bytes bytes to write to object\n   * @returns the Sha512 object\n   */\n  put(bytes: Buffer): Sha512Half {\n    this.hash.update(bytes)\n    return this\n  }\n\n  /**\n   * Compute SHA512 hash and slice in half\n   *\n   * @returns half of a SHA512 hash\n   */\n  finish256(): Buffer {\n    return Buffer.from(this.hash.digest().slice(0, 32))\n  }\n\n  /**\n   * Constructs a Hash256 from the Sha512Half object\n   *\n   * @returns a Hash256 object\n   */\n  finish(): Hash256 {\n    return new Hash256(this.finish256())\n  }\n}\n\n/**\n * compute SHA512 hash of a list of bytes\n *\n * @param args zero or more arguments to hash\n * @returns the sha512half hash of the arguments.\n */\nfunction sha512Half(...args: Buffer[]): Buffer {\n  const hash = new Sha512Half()\n  args.forEach((a) => hash.put(a))\n  return hash.finish256()\n}\n\n/**\n * Construct a transactionID from a Serialized Transaction\n *\n * @param serialized bytes to hash\n * @returns a Hash256 object\n */\nfunction transactionID(serialized: Buffer): Hash256 {\n  return new Hash256(sha512Half(HashPrefix.transactionID, serialized))\n}\n\nexport { Sha512Half, sha512Half, transactionID }\n", "/* eslint-disable func-style */\n\nimport { coreTypes } from './types'\nimport { BinaryParser } from './serdes/binary-parser'\nimport { AccountID } from './types/account-id'\nimport { HashPrefix } from './hash-prefixes'\nimport { BinarySerializer, BytesList } from './serdes/binary-serializer'\nimport { sha512Half, transactionID } from './hashes'\nimport {\n  type XrplDefinitionsBase,\n  DEFAULT_DEFINITIONS,\n  type FieldInstance,\n} from './enums'\nimport { STObject } from './types/st-object'\nimport { JsonObject } from './types/serialized-type'\nimport { Buffer } from 'buffer/'\nimport bigInt = require('big-integer')\n\n/**\n * Construct a BinaryParser\n *\n * @param bytes hex-string to construct BinaryParser from\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns A BinaryParser\n */\nconst makeParser = (\n  bytes: string,\n  definitions?: XrplDefinitionsBase,\n): BinaryParser => new BinaryParser(bytes, definitions)\n\n/**\n * Parse BinaryParser into JSON\n *\n * @param parser BinaryParser object\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns JSON for the bytes in the BinaryParser\n */\nconst readJSON = (\n  parser: BinaryParser,\n  definitions: XrplDefinitionsBase = DEFAULT_DEFINITIONS,\n): JsonObject =>\n  (parser.readType(coreTypes.STObject) as STObject).toJSON(definitions)\n\n/**\n * Parse a hex-string into its JSON interpretation\n *\n * @param bytes hex-string to parse into JSON\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns JSON\n */\nconst binaryToJSON = (\n  bytes: string,\n  definitions?: XrplDefinitionsBase,\n): JsonObject => readJSON(makeParser(bytes, definitions), definitions)\n\n/**\n * Interface for passing parameters to SerializeObject\n *\n * @field set signingFieldOnly to true if you want to serialize only signing fields\n */\ninterface OptionObject {\n  prefix?: Buffer\n  suffix?: Buffer\n  signingFieldsOnly?: boolean\n  definitions?: XrplDefinitionsBase\n}\n\n/**\n * Function to serialize JSON object representing a transaction\n *\n * @param object JSON object to serialize\n * @param opts options for serializing, including optional prefix, suffix, signingFieldOnly, and definitions\n * @returns A Buffer containing the serialized object\n */\nfunction serializeObject(object: JsonObject, opts: OptionObject = {}): Buffer {\n  const { prefix, suffix, signingFieldsOnly = false, definitions } = opts\n  const bytesList = new BytesList()\n\n  if (prefix) {\n    bytesList.put(prefix)\n  }\n\n  const filter = signingFieldsOnly\n    ? (f: FieldInstance): boolean => f.isSigningField\n    : undefined\n  ;(coreTypes.STObject as typeof STObject)\n    .from(object, filter, definitions)\n    .toBytesSink(bytesList)\n\n  if (suffix) {\n    bytesList.put(suffix)\n  }\n\n  return bytesList.toBytes()\n}\n\n/**\n * Serialize an object for signing\n *\n * @param transaction Transaction to serialize\n * @param prefix Prefix bytes to put before the serialized object\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns A Buffer with the serialized object\n */\nfunction signingData(\n  transaction: JsonObject,\n  prefix: Buffer = HashPrefix.transactionSig,\n  opts: { definitions?: XrplDefinitionsBase } = {},\n): Buffer {\n  return serializeObject(transaction, {\n    prefix,\n    signingFieldsOnly: true,\n    definitions: opts.definitions,\n  })\n}\n\n/**\n * Interface describing fields required for a Claim\n */\ninterface ClaimObject extends JsonObject {\n  channel: string\n  amount: string | number\n}\n\n/**\n * Serialize a signingClaim\n *\n * @param claim A claim object to serialize\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns the serialized object with appropriate prefix\n */\nfunction signingClaimData(claim: ClaimObject): Buffer {\n  const num = bigInt(String(claim.amount))\n  const prefix = HashPrefix.paymentChannelClaim\n  const channel = coreTypes.Hash256.from(claim.channel).toBytes()\n  const amount = coreTypes.UInt64.from(num).toBytes()\n\n  const bytesList = new BytesList()\n\n  bytesList.put(prefix)\n  bytesList.put(channel)\n  bytesList.put(amount)\n  return bytesList.toBytes()\n}\n\n/**\n * Serialize a transaction object for multiSigning\n *\n * @param transaction transaction to serialize\n * @param signingAccount Account to sign the transaction with\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns serialized transaction with appropriate prefix and suffix\n */\nfunction multiSigningData(\n  transaction: JsonObject,\n  signingAccount: string | AccountID,\n  opts: { definitions: XrplDefinitionsBase } = {\n    definitions: DEFAULT_DEFINITIONS,\n  },\n): Buffer {\n  const prefix = HashPrefix.transactionMultiSig\n  const suffix = coreTypes.AccountID.from(signingAccount).toBytes()\n  return serializeObject(transaction, {\n    prefix,\n    suffix,\n    signingFieldsOnly: true,\n    definitions: opts.definitions,\n  })\n}\n\nexport {\n  BinaryParser,\n  BinarySerializer,\n  BytesList,\n  ClaimObject,\n  makeParser,\n  serializeObject,\n  readJSON,\n  multiSigningData,\n  signingData,\n  signingClaimData,\n  binaryToJSON,\n  sha512Half,\n  transactionID,\n}\n", "import { strict as assert } from 'assert'\nimport { coreTypes } from './types'\nimport { HashPrefix } from './hash-prefixes'\nimport { Sha512Half } from './hashes'\nimport { Hash256 } from './types/hash-256'\nimport { BytesList } from './serdes/binary-serializer'\nimport { Buffer } from 'buffer/'\n\n/**\n * Abstract class describing a SHAMapNode\n */\nabstract class ShaMapNode {\n  abstract hashPrefix(): Buffer\n  abstract isLeaf(): boolean\n  abstract isInner(): boolean\n  abstract toBytesSink(list: BytesList): void\n  abstract hash(): Hash256\n}\n\n/**\n * Class describing a Leaf of SHAMap\n */\nclass ShaMapLeaf extends ShaMapNode {\n  constructor(public index: Hash256, public item?: ShaMapNode) {\n    super()\n  }\n\n  /**\n   * @returns true as ShaMapLeaf is a leaf node\n   */\n  isLeaf(): boolean {\n    return true\n  }\n\n  /**\n   * @returns false as ShaMapLeaf is not an inner node\n   */\n  isInner(): boolean {\n    return false\n  }\n\n  /**\n   * Get the prefix of the this.item\n   *\n   * @returns The hash prefix, unless this.item is undefined, then it returns an empty Buffer\n   */\n  hashPrefix(): Buffer {\n    return this.item === undefined ? Buffer.alloc(0) : this.item.hashPrefix()\n  }\n\n  /**\n   * Hash the bytes representation of this\n   *\n   * @returns hash of this.item concatenated with this.index\n   */\n  hash(): Hash256 {\n    const hash = Sha512Half.put(this.hashPrefix())\n    this.toBytesSink(hash)\n    return hash.finish()\n  }\n\n  /**\n   * Write the bytes representation of this to a BytesList\n   * @param list BytesList to write bytes to\n   */\n  toBytesSink(list: BytesList): void {\n    if (this.item !== undefined) {\n      this.item.toBytesSink(list)\n    }\n    this.index.toBytesSink(list)\n  }\n}\n\n/**\n * Class defining an Inner Node of a SHAMap\n */\nclass ShaMapInner extends ShaMapNode {\n  private slotBits = 0\n  private branches: Array<ShaMapNode> = Array(16)\n\n  constructor(private depth: number = 0) {\n    super()\n  }\n\n  /**\n   * @returns true as ShaMapInner is an inner node\n   */\n  isInner(): boolean {\n    return true\n  }\n\n  /**\n   * @returns false as ShaMapInner is not a leaf node\n   */\n  isLeaf(): boolean {\n    return false\n  }\n\n  /**\n   * Get the hash prefix for this node\n   *\n   * @returns hash prefix describing an inner node\n   */\n  hashPrefix(): Buffer {\n    return HashPrefix.innerNode\n  }\n\n  /**\n   * Set a branch of this node to be another node\n   *\n   * @param slot Slot to add branch to this.branches\n   * @param branch Branch to add\n   */\n  setBranch(slot: number, branch: ShaMapNode): void {\n    this.slotBits = this.slotBits | (1 << slot)\n    this.branches[slot] = branch\n  }\n\n  /**\n   * @returns true if node is empty\n   */\n  empty(): boolean {\n    return this.slotBits === 0\n  }\n\n  /**\n   * Compute the hash of this node\n   *\n   * @returns The hash of this node\n   */\n  hash(): Hash256 {\n    if (this.empty()) {\n      return (coreTypes.Hash256 as typeof Hash256).ZERO_256\n    }\n    const hash = Sha512Half.put(this.hashPrefix())\n    this.toBytesSink(hash)\n    return hash.finish()\n  }\n\n  /**\n   * Writes the bytes representation of this node to a BytesList\n   *\n   * @param list BytesList to write bytes to\n   */\n  toBytesSink(list: BytesList): void {\n    for (let i = 0; i < this.branches.length; i++) {\n      const branch = this.branches[i]\n      const hash = branch\n        ? branch.hash()\n        : (coreTypes.Hash256 as typeof Hash256).ZERO_256\n      hash.toBytesSink(list)\n    }\n  }\n\n  /**\n   * Add item to the SHAMap\n   *\n   * @param index Hash of the index of the item being inserted\n   * @param item Item to insert in the map\n   * @param leaf Leaf node to insert when branch doesn't exist\n   */\n  addItem(index?: Hash256, item?: ShaMapNode, leaf?: ShaMapLeaf): void {\n    assert.ok(index !== undefined)\n    if (index !== undefined) {\n      const nibble = index.nibblet(this.depth)\n      const existing = this.branches[nibble]\n\n      if (existing === undefined) {\n        this.setBranch(nibble, leaf || new ShaMapLeaf(index, item))\n      } else if (existing instanceof ShaMapLeaf) {\n        const newInner = new ShaMapInner(this.depth + 1)\n        newInner.addItem(existing.index, undefined, existing)\n        newInner.addItem(index, item, leaf)\n        this.setBranch(nibble, newInner)\n      } else if (existing instanceof ShaMapInner) {\n        existing.addItem(index, item, leaf)\n      } else {\n        throw new Error('invalid ShaMap.addItem call')\n      }\n    }\n  }\n}\n\nclass ShaMap extends ShaMapInner {}\n\nexport { ShaMap, ShaMapNode, ShaMapLeaf }\n", "import * as assert from 'assert'\nimport { ShaMap, ShaMapNode, ShaMapLeaf } from './shamap'\nimport { HashPrefix } from './hash-prefixes'\nimport { Sha512Half } from './hashes'\nimport { BinarySerializer, serializeObject } from './binary'\nimport { Hash256 } from './types/hash-256'\nimport { STObject } from './types/st-object'\nimport { UInt64 } from './types/uint-64'\nimport { UInt32 } from './types/uint-32'\nimport { UInt8 } from './types/uint-8'\nimport { BinaryParser } from './serdes/binary-parser'\nimport { JsonObject } from './types/serialized-type'\nimport bigInt = require('big-integer')\nimport { XrplDefinitionsBase } from './enums'\n\n/**\n * Computes the hash of a list of objects\n *\n * @param itemizer Converts an item into a format that can be added to SHAMap\n * @param itemsJson Array of items to add to a SHAMap\n * @returns the hash of the SHAMap\n */\nfunction computeHash(\n  itemizer: (item: JsonObject) => [Hash256?, ShaMapNode?, ShaMapLeaf?],\n  itemsJson: Array<JsonObject>,\n): Hash256 {\n  const map = new ShaMap()\n  itemsJson.forEach((item) => map.addItem(...itemizer(item)))\n  return map.hash()\n}\n\n/**\n * Interface describing a transaction item\n */\ninterface transactionItemObject extends JsonObject {\n  hash: string\n  metaData: JsonObject\n}\n\n/**\n * Convert a transaction into an index and an item\n *\n * @param json transaction with metadata\n * @returns a tuple of index and item to be added to SHAMap\n */\nfunction transactionItemizer(\n  json: transactionItemObject,\n): [Hash256, ShaMapNode, undefined] {\n  assert.ok(json.hash)\n  const index = Hash256.from(json.hash)\n  const item = {\n    hashPrefix() {\n      return HashPrefix.transaction\n    },\n    toBytesSink(sink) {\n      const serializer = new BinarySerializer(sink)\n      serializer.writeLengthEncoded(STObject.from(json))\n      serializer.writeLengthEncoded(STObject.from(json.metaData))\n    },\n  } as ShaMapNode\n  return [index, item, undefined]\n}\n\n/**\n * Interface describing an entry item\n */\ninterface entryItemObject extends JsonObject {\n  index: string\n}\n\n/**\n * Convert an entry to a pair Hash256 and ShaMapNode\n *\n * @param json JSON describing a ledger entry item\n * @returns a tuple of index and item to be added to SHAMap\n */\nfunction entryItemizer(\n  json: entryItemObject,\n): [Hash256, ShaMapNode, undefined] {\n  const index = Hash256.from(json.index)\n  const bytes = serializeObject(json)\n  const item = {\n    hashPrefix() {\n      return HashPrefix.accountStateEntry\n    },\n    toBytesSink(sink) {\n      sink.put(bytes)\n    },\n  } as ShaMapNode\n  return [index, item, undefined]\n}\n\n/**\n * Function computing the hash of a transaction tree\n *\n * @param param An array of transaction objects to hash\n * @returns A Hash256 object\n */\nfunction transactionTreeHash(param: Array<JsonObject>): Hash256 {\n  const itemizer = transactionItemizer as (\n    json: JsonObject,\n  ) => [Hash256, ShaMapNode, undefined]\n  return computeHash(itemizer, param)\n}\n\n/**\n * Function computing the hash of accountState\n *\n * @param param A list of accountStates hash\n * @returns A Hash256 object\n */\nfunction accountStateHash(param: Array<JsonObject>): Hash256 {\n  const itemizer = entryItemizer as (\n    json: JsonObject,\n  ) => [Hash256, ShaMapNode, undefined]\n  return computeHash(itemizer, param)\n}\n\n/**\n * Interface describing a ledger header\n */\ninterface ledgerObject {\n  ledger_index: number\n  total_coins: string | number | bigInt.BigInteger\n  parent_hash: string\n  transaction_hash: string\n  account_hash: string\n  parent_close_time: number\n  close_time: number\n  close_time_resolution: number\n  close_flags: number\n}\n\n/**\n * Serialize and hash a ledger header\n *\n * @param header a ledger header\n * @returns the hash of header\n */\nfunction ledgerHash(header: ledgerObject): Hash256 {\n  const hash = new Sha512Half()\n  hash.put(HashPrefix.ledgerHeader)\n  assert.ok(header.parent_close_time !== undefined)\n  assert.ok(header.close_flags !== undefined)\n\n  UInt32.from<number>(header.ledger_index).toBytesSink(hash)\n  UInt64.from<bigInt.BigInteger>(\n    bigInt(String(header.total_coins)),\n  ).toBytesSink(hash)\n  Hash256.from<string>(header.parent_hash).toBytesSink(hash)\n  Hash256.from<string>(header.transaction_hash).toBytesSink(hash)\n  Hash256.from<string>(header.account_hash).toBytesSink(hash)\n  UInt32.from<number>(header.parent_close_time).toBytesSink(hash)\n  UInt32.from<number>(header.close_time).toBytesSink(hash)\n  UInt8.from<number>(header.close_time_resolution).toBytesSink(hash)\n  UInt8.from<number>(header.close_flags).toBytesSink(hash)\n  return hash.finish()\n}\n\n/**\n * Decodes a serialized ledger header\n *\n * @param binary A serialized ledger header\n * @param definitions Type definitions to parse the ledger objects.\n *      Used if there are non-default ledger objects to decode.\n * @returns A JSON object describing a ledger header\n */\nfunction decodeLedgerData(\n  binary: string,\n  definitions?: XrplDefinitionsBase,\n): object {\n  assert.ok(typeof binary === 'string', 'binary must be a hex string')\n  const parser = new BinaryParser(binary, definitions)\n  return {\n    ledger_index: parser.readUInt32(),\n    total_coins: parser.readType(UInt64).valueOf().toString(),\n    parent_hash: parser.readType(Hash256).toHex(),\n    transaction_hash: parser.readType(Hash256).toHex(),\n    account_hash: parser.readType(Hash256).toHex(),\n    parent_close_time: parser.readUInt32(),\n    close_time: parser.readUInt32(),\n    close_time_resolution: parser.readUInt8(),\n    close_flags: parser.readUInt8(),\n  }\n}\n\nexport { accountStateHash, transactionTreeHash, ledgerHash, decodeLedgerData }\n", "import { coreTypes } from './types'\nimport { Decimal } from 'decimal.js'\nimport bigInt = require('big-integer')\nimport { Buffer } from 'buffer/'\n\n/**\n * class for encoding and decoding quality\n */\nclass quality {\n  /**\n   * Encode quality amount\n   *\n   * @param arg string representation of an amount\n   * @returns Serialized quality\n   */\n  static encode(quality: string): Buffer {\n    const decimal = new Decimal(quality)\n    const exponent = decimal.e - 15\n    const qualityString = decimal.times(`1e${-exponent}`).abs().toString()\n    const bytes = coreTypes.UInt64.from(bigInt(qualityString)).toBytes()\n    bytes[0] = exponent + 100\n    return bytes\n  }\n\n  /**\n   * Decode quality amount\n   *\n   * @param arg hex-string denoting serialized quality\n   * @returns deserialized quality\n   */\n  static decode(quality: string): Decimal {\n    const bytes = Buffer.from(quality, 'hex').slice(-8)\n    const exponent = bytes[0] - 100\n    const mantissa = new Decimal(`0x${bytes.slice(1).toString('hex')}`)\n    return mantissa.times(`1e${exponent}`)\n  }\n}\n\nexport { quality }\n", "import {\n  DEFAULT_DEFINITIONS,\n  Field,\n  TransactionType,\n  LedgerEntryType,\n  Type,\n  TransactionResult,\n} from './enums'\nimport * as types from './types'\nimport * as binary from './binary'\nimport { ShaMap } from './shamap'\nimport * as ledgerHashes from './ledger-hashes'\nimport * as hashes from './hashes'\nimport { quality } from './quality'\nimport { HashPrefix } from './hash-prefixes'\n\nexport {\n  hashes,\n  binary,\n  ledgerHashes,\n  DEFAULT_DEFINITIONS,\n  Field,\n  TransactionType,\n  LedgerEntryType,\n  Type,\n  TransactionResult,\n  quality,\n  HashPrefix,\n  ShaMap,\n  types,\n}\n", "import {\n  type DefinitionsData,\n  XrplDefinitionsBase,\n} from './xrpl-definitions-base'\nimport { coreTypes } from '../types'\nimport { SerializedType } from '../types/serialized-type'\n\n/**\n * Stores the various types and fields for rippled to be used to encode/decode information later on.\n * Should be used instead of XrplDefinitionsBase since this defines default `types` for serializing/deserializing\n * ledger data.\n */\nexport class XrplDefinitions extends XrplDefinitionsBase {\n  /**\n   * Present rippled types in a typed and updatable format.\n   * For an example of the input format see `definitions.json`\n   * To generate a new definitions file from rippled source code, use this tool: https://github.com/RichardAH/xrpl-codec-gen\n   *\n   * See the definitions.test.js file for examples of how to create your own updated definitions.json.\n   *\n   * @param enums - A json encoding of the core types, transaction types, transaction results, transaction names, and fields.\n   * @param additionalTypes - A list of SerializedType objects with the same name as the fields defined.\n   *              These types will be included in addition to the coreTypes used on mainnet.\n   */\n  constructor(\n    enums: DefinitionsData,\n    additionalTypes?: Record<string, typeof SerializedType>,\n  ) {\n    const types = Object.assign({}, coreTypes, additionalTypes)\n    super(enums, types)\n  }\n}\n", "import * as assert from 'assert'\nimport { quality, binary, HashPrefix } from './coretypes'\nimport { decodeLedgerData } from './ledger-hashes'\nimport { ClaimObject } from './binary'\nimport { JsonObject } from './types/serialized-type'\nimport {\n  XrplDefinitionsBase,\n  TRANSACTION_TYPES,\n  DEFAULT_DEFINITIONS,\n} from './enums'\nimport { XrplDefinitions } from './enums/xrpl-definitions'\nimport { coreTypes } from './types'\n\nconst {\n  signingData,\n  signingClaimData,\n  multiSigningData,\n  binaryToJSON,\n  serializeObject,\n} = binary\n\n/**\n * Decode a transaction\n *\n * @param binary hex-string of the encoded transaction\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns the JSON representation of the transaction\n */\nfunction decode(binary: string, definitions?: XrplDefinitionsBase): JsonObject {\n  assert.ok(typeof binary === 'string', 'binary must be a hex string')\n  return binaryToJSON(binary, definitions)\n}\n\n/**\n * Encode a transaction\n *\n * @param json The JSON representation of a transaction\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n *\n * @returns A hex-string of the encoded transaction\n */\nfunction encode(json: object, definitions?: XrplDefinitionsBase): string {\n  assert.ok(typeof json === 'object')\n  return serializeObject(json as JsonObject, { definitions })\n    .toString('hex')\n    .toUpperCase()\n}\n\n/**\n * Encode a transaction and prepare for signing\n *\n * @param json JSON object representing the transaction\n * @param signer string representing the account to sign the transaction with\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction\n */\nfunction encodeForSigning(\n  json: object,\n  definitions?: XrplDefinitionsBase,\n): string {\n  assert.ok(typeof json === 'object')\n  return signingData(json as JsonObject, HashPrefix.transactionSig, {\n    definitions,\n  })\n    .toString('hex')\n    .toUpperCase()\n}\n\n/**\n * Encode a transaction and prepare for signing with a claim\n *\n * @param json JSON object representing the transaction\n * @param signer string representing the account to sign the transaction with\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction\n */\nfunction encodeForSigningClaim(json: object): string {\n  assert.ok(typeof json === 'object')\n  return signingClaimData(json as ClaimObject)\n    .toString('hex')\n    .toUpperCase()\n}\n\n/**\n * Encode a transaction and prepare for multi-signing\n *\n * @param json JSON object representing the transaction\n * @param signer string representing the account to sign the transaction with\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction\n */\nfunction encodeForMultisigning(\n  json: object,\n  signer: string,\n  definitions?: XrplDefinitionsBase,\n): string {\n  assert.ok(typeof json === 'object')\n  assert.equal(json['SigningPubKey'], '')\n  const definitionsOpt = definitions ? { definitions } : undefined\n  return multiSigningData(json as JsonObject, signer, definitionsOpt)\n    .toString('hex')\n    .toUpperCase()\n}\n\n/**\n * Encode a quality value\n *\n * @param value string representation of a number\n * @returns a hex-string representing the quality\n */\nfunction encodeQuality(value: string): string {\n  assert.ok(typeof value === 'string')\n  return quality.encode(value).toString('hex').toUpperCase()\n}\n\n/**\n * Decode a quality value\n *\n * @param value hex-string of a quality\n * @returns a string representing the quality\n */\nfunction decodeQuality(value: string): string {\n  assert.ok(typeof value === 'string')\n  return quality.decode(value).toString()\n}\n\nexport {\n  decode,\n  encode,\n  encodeForSigning,\n  encodeForSigningClaim,\n  encodeForMultisigning,\n  encodeQuality,\n  decodeQuality,\n  decodeLedgerData,\n  TRANSACTION_TYPES,\n  XrplDefinitions,\n  XrplDefinitionsBase,\n  DEFAULT_DEFINITIONS,\n  coreTypes,\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n", "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n", "var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n", "var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n", "module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n", "var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]", "var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ledger.js.map", null, null],
  "mappings": "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",
  "names": ["require_errors", "import_dist", "o", "_setPrototypeOf", "p", "self", "_getPrototypeOf", "NodeError", "import_dist", "r", "self", "_wrapNativeSuper", "Class", "_construct", "Parent", "args", "_setPrototypeOf", "o", "p", "_getPrototypeOf", "AssertionError", "import_dist", "import_dist", "import_dist", "require_implementation", "import_dist", "import_dist", "require_implementation", "import_dist", "require_polyfill", "import_dist", "import_dist", "import_dist", "define", "import_dist", "define", "require_implementation", "import_dist", "isNaN", "require_polyfill", "import_dist", "require_shim", "import_dist", "define", "import_dist", "define", "import_dist", "r", "o", "arrayFromSet", "arrayFromMap", "import_dist", "o", "Comparison", "import_dist", "punycode", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "compactQueue", "arrayToObject", "merge", "encode", "format", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "import_dist", "isNonNullishPrimitive", "stringify", "filter", "format", "value", "normalizeStringifyOptions", "import_dist", "normalizeParseOptions", "import_dist", "parse", "isURLInstance", "instance", "resolved", "Boolean", "href", "origin", "getPathFromURLPosix", "url", "hostname", "TypeError", "pathname", "n", "length", "third", "codePointAt", "decodeURIComponent", "encodePathChars", "filepath", "includes", "replace", "percentRegEx", "backslashRegEx", "newlineRegEx", "carriageReturnRegEx", "tabRegEx", "resolve", "formatImport", "parseImport", "resolveImport", "UrlImport", "URL", "URLSearchParams", "CHAR_FORWARD_SLASH", "domainToASCII", "domainToUnicode", "pathToFileURL", "fileURLToPath", "formatImportWithOverloads", "api", "require$$0", "require$$1", "format", "parse", "Url", "_globalThis", "domain", "outURL", "pathResolve", "filePathLast", "charCodeAt", "path", "protocol", "urlObject", "options", "_options$auth", "_options$fragment", "_options$search", "_options$unicode", "auth", "fragment", "search", "unicode", "parsed", "toString", "username", "password", "hash", "resolveObject", "import_dist", "ValidationError", "ValidatorResult", "SchemaError", "SchemaContext", "resolve", "format", "makeSuffix", "import_dist", "self", "validateMultipleOfOrDivisbleBy", "testArrays", "import_dist", "Validator", "resolve", "require_lib", "import_dist", "import_dist", "BigNumber", "compare", "format", "require_get_balances", "require_get_balance_sheet", "require_get_ledger", "require_get_orders", "require_get_orderbook", "require_get_paths", "require_get_payment_channel", "require_get_settings", "require_get_account_info", "require_get_account_objects", "require_get_transaction", "require_get_transactions", "require_get_trustlines", "require_sign", "require_submit", "require_sign_payment_channel_claim", "require_verify_payment_channel_claim", "import_dist", "resolve", "_", "require_utils", "import_dist", "import_dist", "require_quality", "import_dist", "import_dist", "import_dist", "require_src", "import_dist", "import_dist", "min", "max", "sign", "pow", "sum", "Decimal", "i", "import_dist", "undefined", "i", "self", "max", "min", "Blob", "filter", "filter", "quality", "HashPrefix", "NodeType", "parse", "format", "api", "api", "api", "_a", "import_dist", "xhr", "import_dist", "import_dist", "self", "read", "resolve", "import_dist", "self", "response", "require_browser", "import_dist", "import_dist", "import_dist", "FaucetNetwork", "resolve", "body", "api", "require_types", "import_dist", "require_ledger", "import_dist", "api"]
}
